{"id":"ed566db7a1aa067699b96666473705e8","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IERC677Receiver {\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n  // extraArgs will evolve to support new features\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n  struct ExtraArgsV1 {\n    bool nativePayment;\n  }\n\n  struct RandomWordsRequest {\n    bytes32 keyHash;\n    uint256 subId;\n    uint16 requestConfirmations;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {EnumerableSet} from \"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\";\nimport {LinkTokenInterface} from \"../../shared/interfaces/LinkTokenInterface.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\nimport {AggregatorV3Interface} from \"../../shared/interfaces/AggregatorV3Interface.sol\";\nimport {IERC677Receiver} from \"../../shared/interfaces/IERC677Receiver.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./interfaces/IVRFSubscriptionV2Plus.sol\";\n\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\n  using EnumerableSet for EnumerableSet.UintSet;\n\n  /// @dev may not be provided upon construction on some chains due to lack of availability\n  LinkTokenInterface public LINK;\n  /// @dev may not be provided upon construction on some chains due to lack of availability\n  AggregatorV3Interface public LINK_NATIVE_FEED;\n\n  // We need to maintain a list of consuming addresses.\n  // This bound ensures we are able to loop over them as needed.\n  // Should a user require more consumers, they can use multiple subscriptions.\n  uint16 public constant MAX_CONSUMERS = 100;\n  error TooManyConsumers();\n  error InsufficientBalance();\n  error InvalidConsumer(uint256 subId, address consumer);\n  error InvalidSubscription();\n  error OnlyCallableFromLink();\n  error InvalidCalldata();\n  error MustBeSubOwner(address owner);\n  error PendingRequestExists();\n  error MustBeRequestedOwner(address proposedOwner);\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\n  event FundsRecovered(address to, uint256 amount);\n  event NativeFundsRecovered(address to, uint256 amount);\n  error LinkAlreadySet();\n  error FailedToSendNative();\n  error FailedToTransferLink();\n  error IndexOutOfRange();\n  error LinkNotSet();\n\n  // We use the subscription struct (1 word)\n  // at fulfillment time.\n  struct Subscription {\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\n    uint96 balance; // Common link balance used for all consumer requests.\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\n    // That should be enough to cover most (if not all) subscriptions.\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\n    uint64 reqCount;\n  }\n  // We use the config for the mgmt APIs\n  struct SubscriptionConfig {\n    address owner; // Owner can fund/withdraw/cancel the sub.\n    address requestedOwner; // For safely transferring sub ownership.\n    // Maintains the list of keys in s_consumers.\n    // We do this for 2 reasons:\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\n    // 2. To be able to return the list of all consumers in getSubscription.\n    // Note that we need the s_consumers map to be able to directly check if a\n    // consumer is valid without reading all the consumers from storage.\n    address[] consumers;\n  }\n  struct ConsumerConfig {\n    bool active;\n    uint64 nonce;\n    uint64 pendingReqCount;\n  }\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\n    internal s_consumers;\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\n  // subscription nonce used to construct subId. Rises monotonically\n  uint64 public s_currentSubNonce;\n  // track all subscription id's that were created by this contract\n  // note: access should be through the getActiveSubscriptionIds() view function\n  // which takes a starting index and a max number to fetch in order to allow\n  // \"pagination\" of the subscription ids. in the event a very large number of\n  // subscription id's are stored in this set, they cannot be retrieved in a\n  // single RPC call without violating various size limits.\n  EnumerableSet.UintSet internal s_subIds;\n  // s_totalBalance tracks the total link sent to/from\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\n  // A discrepancy with this contract's link balance indicates someone\n  // sent tokens using transfer and so we may need to use recoverFunds.\n  uint96 public s_totalBalance;\n  // s_totalNativeBalance tracks the total native sent to/from\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\n  // A discrepancy with this contract's native balance indicates someone\n  // sent native using transfer and so we may need to use recoverNativeFunds.\n  uint96 public s_totalNativeBalance;\n  uint96 internal s_withdrawableTokens;\n  uint96 internal s_withdrawableNative;\n\n  event SubscriptionCreated(uint256 indexed subId, address owner);\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\n\n  struct Config {\n    uint16 minimumRequestConfirmations;\n    uint32 maxGasLimit;\n    // Reentrancy protection.\n    bool reentrancyLock;\n    // stalenessSeconds is how long before we consider the feed price to be stale\n    // and fallback to fallbackWeiPerUnitLink.\n    uint32 stalenessSeconds;\n    // Gas to cover oracle payment after we calculate the payment.\n    // We make it configurable in case those operations are repriced.\n    // The recommended number is below, though it may vary slightly\n    // if certain chains do not implement certain EIP's.\n    // 21000 + // base cost of the transaction\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\n    // Total: 37,185 gas.\n    uint32 gasAfterPaymentCalculation;\n    // Flat fee charged per fulfillment in millionths of native.\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeNativePPM;\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\n    // Should not exceed fulfillmentFlatFeeNativePPM\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\n    uint8 nativePremiumPercentage;\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\n    uint8 linkPremiumPercentage;\n  }\n  Config public s_config;\n\n  error Reentrant();\n  modifier nonReentrant() {\n    _nonReentrant();\n    _;\n  }\n\n  function _nonReentrant() internal view {\n    if (s_config.reentrancyLock) {\n      revert Reentrant();\n    }\n  }\n\n  function _requireSufficientBalance(bool condition) internal pure {\n    if (!condition) {\n      revert InsufficientBalance();\n    }\n  }\n\n  function _requireValidSubscription(address subOwner) internal pure {\n    if (subOwner == address(0)) {\n      revert InvalidSubscription();\n    }\n  }\n  constructor() ConfirmedOwner(msg.sender) {}\n\n  /**\n   * @notice set the LINK token contract and link native feed to be\n   * used by this coordinator\n   * @param link - address of link token\n   * @param linkNativeFeed address of the link native feed\n   */\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\n    // Disallow re-setting link token because the logic wouldn't really make sense\n    if (address(LINK) != address(0)) {\n      revert LinkAlreadySet();\n    }\n    LINK = LinkTokenInterface(link);\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\n  }\n\n  /**\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n   * @param subId subscription id\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\n   */\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\n    address subOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(subOwner);\n    _cancelSubscriptionHelper(subId, subOwner);\n  }\n\n  /**\n   * @notice Recover link sent with transfer instead of transferAndCall.\n   * @param to address to send link to\n   */\n  function recoverFunds(address to) external onlyOwner {\n    // If LINK is not set, we cannot recover funds.\n    // It is possible that this coordinator address was funded with LINK\n    // by accident by a user but the LINK token needs to be set first\n    // before we can recover it.\n    if (address(LINK) == address(0)) {\n      revert LinkNotSet();\n    }\n\n    uint256 externalBalance = LINK.balanceOf(address(this));\n    uint256 internalBalance = uint256(s_totalBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      if (!LINK.transfer(to, amount)) {\n        revert FailedToTransferLink();\n      }\n      emit FundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /**\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\n   * @param to address to send native to\n   */\n  function recoverNativeFunds(address payable to) external onlyOwner {\n    uint256 externalBalance = address(this).balance;\n    uint256 internalBalance = uint256(s_totalNativeBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      (bool sent, ) = to.call{value: amount}(\"\");\n      if (!sent) {\n        revert FailedToSendNative();\n      }\n      emit NativeFundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /*\n   * @notice withdraw LINK earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function withdraw(address recipient) external nonReentrant onlyOwner {\n    if (address(LINK) == address(0)) {\n      revert LinkNotSet();\n    }\n    uint96 amount = s_withdrawableTokens;\n    _requireSufficientBalance(amount > 0);\n    s_withdrawableTokens = 0;\n    s_totalBalance -= amount;\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\n  }\n\n  /*\n   * @notice withdraw native earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\n    uint96 amount = s_withdrawableNative;\n    _requireSufficientBalance(amount > 0);\n    // Prevent re-entrancy by updating state before transfer.\n    s_withdrawableNative = 0;\n    s_totalNativeBalance -= amount;\n    _mustSendNative(recipient, amount);\n  }\n\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\n    if (msg.sender != address(LINK)) {\n      revert OnlyCallableFromLink();\n    }\n    if (data.length != 32) {\n      revert InvalidCalldata();\n    }\n    uint256 subId = abi.decode(data, (uint256));\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\n    // We do not check that the sender is the subscription owner,\n    // anyone can fund a subscription.\n    uint256 oldBalance = s_subscriptions[subId].balance;\n    s_subscriptions[subId].balance += uint96(amount);\n    s_totalBalance += uint96(amount);\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\n    // We do not check that the msg.sender is the subscription owner,\n    // anyone can fund a subscription.\n    // We also do not check that msg.value > 0, since that's just a no-op\n    // and would be a waste of gas on the caller's part.\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\n    s_totalNativeBalance += uint96(msg.value);\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    public\n    view\n    override\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\n  {\n    subOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(subOwner);\n    return (\n      s_subscriptions[subId].balance,\n      s_subscriptions[subId].nativeBalance,\n      s_subscriptions[subId].reqCount,\n      subOwner,\n      s_subscriptionConfigs[subId].consumers\n    );\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function getActiveSubscriptionIds(\n    uint256 startIndex,\n    uint256 maxCount\n  ) external view override returns (uint256[] memory ids) {\n    uint256 numSubs = s_subIds.length();\n    if (startIndex >= numSubs) revert IndexOutOfRange();\n    uint256 endIndex = startIndex + maxCount;\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\n    uint256 idsLength = endIndex - startIndex;\n    ids = new uint256[](idsLength);\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\n      ids[idx] = s_subIds.at(idx + startIndex);\n    }\n    return ids;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\n    // Generate a subscription id that is globally unique.\n    uint64 currentSubNonce = s_currentSubNonce;\n    subId = uint256(\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\n    );\n    // Increment the subscription nonce counter.\n    s_currentSubNonce = currentSubNonce + 1;\n    // Initialize storage variables.\n    address[] memory consumers = new address[](0);\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\n      owner: msg.sender,\n      requestedOwner: address(0),\n      consumers: consumers\n    });\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\n    s_subIds.add(subId);\n\n    emit SubscriptionCreated(subId, msg.sender);\n    return subId;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function requestSubscriptionOwnerTransfer(\n    uint256 subId,\n    address newOwner\n  ) external override onlySubOwner(subId) nonReentrant {\n    // Proposing to address(0) would never be claimable so don't need to check.\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\n    if (subscriptionConfig.requestedOwner != newOwner) {\n      subscriptionConfig.requestedOwner = newOwner;\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\n    }\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\n    address oldOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(oldOwner);\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\n    }\n    s_subscriptionConfigs[subId].owner = msg.sender;\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\n    if (consumerConfig.active) {\n      // Idempotence - do nothing if already added.\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\n      return;\n    }\n    // Already maxed, cannot add any more consumers.\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\n    if (consumers.length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\n    // otherwise, consumerConfig.nonce is non-zero\n    // in both cases, use consumerConfig.nonce as is and set active status to true\n    consumerConfig.active = true;\n    consumers.push(consumer);\n\n    emit SubscriptionConsumerAdded(subId, consumer);\n  }\n\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\n    balance = s_subscriptions[subId].balance;\n    nativeBalance = s_subscriptions[subId].nativeBalance;\n    // Note bounded by MAX_CONSUMERS;\n    // If no consumers, does nothing.\n    uint256 consumersLength = consumers.length;\n    for (uint256 i = 0; i < consumersLength; ++i) {\n      delete s_consumers[consumers[i]][subId];\n    }\n    delete s_subscriptionConfigs[subId];\n    delete s_subscriptions[subId];\n    s_subIds.remove(subId);\n    if (balance != 0) {\n      s_totalBalance -= balance;\n    }\n    if (nativeBalance != 0) {\n      s_totalNativeBalance -= nativeBalance;\n    }\n    return (balance, nativeBalance);\n  }\n\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\n\n    // Only withdraw LINK if the token is active and there is a balance.\n    if (address(LINK) != address(0) && balance != 0) {\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\n    }\n\n    // send native to the \"to\" address using call\n    _mustSendNative(to, uint256(nativeBalance));\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\n  }\n\n  modifier onlySubOwner(uint256 subId) {\n    _onlySubOwner(subId);\n    _;\n  }\n\n  function _onlySubOwner(uint256 subId) internal view {\n    address subOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(subOwner);\n    if (msg.sender != subOwner) {\n      revert MustBeSubOwner(subOwner);\n    }\n  }\n\n  function _mustSendNative(address to, uint256 amount) internal {\n    (bool success, ) = to.call{value: amount}(\"\");\n    if (!success) {\n      revert FailedToSendNative();\n    }\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2_5.\npragma solidity ^0.8.19;\n\n// solhint-disable-next-line no-unused-import\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \"../dev/interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {VRFV2PlusClient} from \"../dev/libraries/VRFV2PlusClient.sol\";\nimport {SubscriptionAPI} from \"../dev/SubscriptionAPI.sol\";\nimport {VRFConsumerBaseV2Plus} from \"../dev/VRFConsumerBaseV2Plus.sol\";\n\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\n  uint96 public immutable i_base_fee;\n  uint96 public immutable i_gas_price;\n  int256 public immutable i_wei_per_unit_link;\n\n  error InvalidRequest();\n  error InvalidRandomWords();\n  error InvalidExtraArgsTag();\n  error NotImplemented();\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint256 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    bytes extraArgs,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(\n    uint256 indexed requestId,\n    uint256 outputSeed,\n    uint256 indexed subId,\n    uint96 payment,\n    bool nativePayment,\n    bool success,\n    bool onlyPremium\n  );\n  event ConfigSet();\n\n\n  uint64 internal s_currentSubId;\n  uint256 internal s_nextRequestId = 1;\n  uint256 internal s_nextPreSeed = 100;\n\n  struct Request {\n    uint256 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\n    i_base_fee = _baseFee;\n    i_gas_price = _gasPrice;\n    i_wei_per_unit_link = _weiPerUnitLink;\n    setConfig();\n  }\n\n  /**\n   * @notice Sets the configuration of the vrfv2 mock coordinator\n   */\n  function setConfig() public onlyOwner {\n    s_config = Config({\n      minimumRequestConfirmations: 0,\n      maxGasLimit: 0,\n      stalenessSeconds: 0,\n      gasAfterPaymentCalculation: 0,\n      reentrancyLock: false,\n      fulfillmentFlatFeeNativePPM: 0,\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\n      nativePremiumPercentage: 0,\n      linkPremiumPercentage: 0\n    });\n    emit ConfigSet();\n  }\n\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\n    return s_consumers[_consumer][_subId].active;\n  }\n\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\n    if (!consumerIsAdded(_subId, _consumer)) {\n      revert InvalidConsumer(_subId, _consumer);\n    }\n    _;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\n  }\n\n  /**\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   * @param _words user-provided random words\n   */\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert InvalidRequest();\n    }\n    Request memory req = s_requests[_requestId];\n\n    if (_words.length == 0) {\n      _words = new uint256[](req.numWords);\n      for (uint256 i = 0; i < req.numWords; i++) {\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n      }\n    } else if (_words.length != req.numWords) {\n      revert InvalidRandomWords();\n    }\n\n    VRFConsumerBaseV2Plus v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\n    s_config.reentrancyLock = true;\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n    s_config.reentrancyLock = false;\n\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\n\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\n    if (!nativePayment) {\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\n    }\n    uint96 payment = uint96(rawPayment);\n\n    // _chargePayment(payment, nativePayment, req.subId);\n\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\n  }\n\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\n    Subscription storage subcription = s_subscriptions[subId];\n    if (nativePayment) {\n      uint96 prevBal = subcription.nativeBalance;\n      if (prevBal < payment) {\n        revert InsufficientBalance();\n      }\n      subcription.nativeBalance = prevBal - payment;\n      s_withdrawableNative += payment;\n    } else {\n      uint96 prevBal = subcription.balance;\n      if (prevBal < payment) {\n        revert InsufficientBalance();\n      }\n      subcription.balance = prevBal - payment;\n      s_withdrawableTokens += payment;\n    }\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint256 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += uint96(_amount);\n    s_totalBalance += uint96(_amount);\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  /// @dev Convert the extra args bytes into a struct\n  /// @param extraArgs The extra args bytes\n  /// @return The extra args struct\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\n    if (extraArgs.length == 0) {\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\n    }\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\n  }\n\n  function requestRandomWords(\n    VRFV2PlusClient.RandomWordsRequest calldata _req\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\n    uint256 subId = _req.subId;\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\n    s_requests[requestId] = Request({\n      subId: _req.subId,\n      callbackGasLimit: _req.callbackGasLimit,\n      numWords: _req.numWords,\n      extraArgs: _req.extraArgs\n    });\n\n    emit RandomWordsRequested(\n      _req.keyHash,\n      requestId,\n      preSeed,\n      _req.subId,\n      _req.requestConfirmations,\n      _req.callbackGasLimit,\n      _req.numWords,\n      extraArgsBytes,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function removeConsumer(\n    uint256 _subId,\n    address _consumer\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\n    if (!s_consumers[_consumer][_subId].active) {\n      revert InvalidConsumer(_subId, _consumer);\n    }\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\n    uint256 lastConsumerIndex = consumers.length - 1;\n    for (uint256 i = 0; i < consumers.length; ++i) {\n      if (consumers[i] == _consumer) {\n        address last = consumers[lastConsumerIndex];\n        s_subscriptionConfigs[_subId].consumers[i] = last;\n        s_subscriptionConfigs[_subId].consumers.pop();\n        break;\n      }\n    }\n    s_consumers[_consumer][_subId].active = false;\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\n\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\"\");\n    if (!success) {\n      revert FailedToSendNative();\n    }\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\n  }\n\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\n    revert NotImplemented();\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.4;\n\nimport {VRFCoordinatorV2Interface} from \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport {VRFConsumerBaseV2} from \"../VRFConsumerBaseV2.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n// solhint-disable chainlink-solidity/prefix-immutable-variables-with-i\n// solhint-disable gas-custom-errors\n// solhint-disable avoid-low-level-calls\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n  uint16 public immutable MAX_CONSUMERS = 100;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n  error TooManyConsumers();\n  error InvalidConsumer();\n  error InvalidRandomWords();\n  error Reentrant();\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n  event ConsumerAdded(uint64 indexed subId, address consumer);\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\n  event ConfigSet();\n\n  struct Config {\n    // Reentrancy protection.\n    bool reentrancyLock;\n  }\n  Config private s_config;\n  uint64 internal s_currentSubId;\n  uint256 internal s_nextRequestId = 1;\n  uint256 internal s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) internal s_subscriptions; /* subId */ /* subscription */\n  mapping(uint64 => address[]) internal s_consumers; /* subId */ /* consumers */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) ConfirmedOwner(msg.sender) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n    setConfig();\n  }\n\n  /**\n   * @notice Sets the configuration of the vrfv2 mock coordinator\n   */\n  function setConfig() public onlyOwner {\n    s_config = Config({reentrancyLock: false});\n    emit ConfigSet();\n  }\n\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\n    address[] memory consumers = s_consumers[_subId];\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == _consumer) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\n    if (!consumerIsAdded(_subId, _consumer)) {\n      revert InvalidConsumer();\n    }\n    _;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\n  }\n\n  /**\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   * @param _words user-provided random words\n   */\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    if (_words.length == 0) {\n      _words = new uint256[](req.numWords);\n      for (uint256 i = 0; i < req.numWords; i++) {\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n      }\n    } else if (_words.length != req.numWords) {\n      revert InvalidRandomWords();\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\n    s_config.reentrancyLock = true;\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n    s_config.reentrancyLock = false;\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override nonReentrant onlyValidConsumer(_subId, msg.sender) returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(\n    uint64 _subId\n  ) external view override returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig() external pure override returns (uint16, uint32, bytes32[] memory) {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n\n    if (consumerIsAdded(_subId, _consumer)) {\n      return;\n    }\n\n    s_consumers[_subId].push(_consumer);\n    emit ConsumerAdded(_subId, _consumer);\n  }\n\n  function removeConsumer(\n    uint64 _subId,\n    address _consumer\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\n    address[] storage consumers = s_consumers[_subId];\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == _consumer) {\n        address last = consumers[consumers.length - 1];\n        consumers[i] = last;\n        consumers.pop();\n        break;\n      }\n    }\n\n    emit ConsumerRemoved(_subId, _consumer);\n  }\n\n  function getConfig()\n    external\n    pure\n    returns (\n      uint16 minimumRequestConfirmations,\n      uint32 maxGasLimit,\n      uint32 stalenessSeconds,\n      uint32 gasAfterPaymentCalculation\n    )\n  {\n    return (4, 2_500_000, 2_700, 33285);\n  }\n\n  function getFeeConfig()\n    external\n    pure\n    returns (\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\n      uint24 reqsForTier2,\n      uint24 reqsForTier3,\n      uint24 reqsForTier4,\n      uint24 reqsForTier5\n    )\n  {\n    return (\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      0,\n      0,\n      0,\n      0\n    );\n  }\n\n  modifier nonReentrant() {\n    if (s_config.reentrancyLock) {\n      revert Reentrant();\n    }\n    _;\n  }\n\n  function getFallbackWeiPerUnitLink() external pure returns (int256) {\n    return 4000000000000000; // 0.004 Ether\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 /*_subId*/, address /*_newOwner*/) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 /*_subId*/) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function pendingRequestExists(uint64 /*subId*/) public pure override returns (bool) {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/Lottery.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7 ;\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport {VRFConsumerBaseV2Plus} from \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\nimport \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\n\nerror Lottery__NotEnoughETHforTicket();\nerror Lottery__TransactionFailed();\nerror Lottery__Closed();\nerror Lottery__upKeepNotNeeded(\n    uint256 currentBal,\n    uint256 numberOfPlayers,\n    uint256 lotteryState\n);\n\n/**\n * @title A Ethereum Lottery Smart Contract\n * @author Harigovind M G\n * @notice This is a smart contract for creating a Fair and Random Lottery\n * @dev This implements Chainlink VRF for ensuring the randomness and Chainlink Keepers for the automation of the Lottery\n */\n\ncontract Lottery is VRFConsumerBaseV2Plus, AutomationCompatibleInterface {\n    /* enums */\n    enum LotteryState {\n        OPEN,\n        CALCULATING\n    }\n\n    /* State variables */\n    uint256 private immutable i_ticketPrice;\n    address payable[] private s_players;\n    bytes32 private immutable i_keyHash;\n    uint256 private immutable i_subscriptionId;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATION = 3;\n    uint32 private constant NUM_WORDS = 1;\n    uint256 private s_lastTimeStamp;\n    uint256 private immutable i_interval;\n\n    /*  Lottery Variables */\n    address private s_recentWinner;\n    LotteryState private s_LotteryState;\n\n    /* Events */\n    event LotteryEnter(address indexed player);\n    event RequestedLotteryWinner(uint256 indexed requestId);\n    event WinnerPicked(address indexed winner);\n\n    /* Functions */\n\n    constructor(\n        address vrfCoordinatorV2,\n        uint256 ticketPrice,\n        bytes32 keyHash,\n        uint256 subscriptionId,\n        uint32 callbackGasLimit,\n        uint256 interval\n    ) VRFConsumerBaseV2Plus(vrfCoordinatorV2) {\n        i_ticketPrice = ticketPrice;\n        // i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_keyHash = keyHash;\n        i_subscriptionId = subscriptionId;\n        i_callbackGasLimit = callbackGasLimit;\n        s_LotteryState = LotteryState.OPEN;\n        s_lastTimeStamp=block.timestamp;\n        i_interval= interval;\n    }\n\n    function checkUpkeep(\n        bytes memory /* checkData */\n    )\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory /* performData */)\n    {   \n        bool isOpen = (s_LotteryState == LotteryState.OPEN);\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\n        bool hasPlayers = (s_players.length > 0);\n        bool hasBalance = address(this).balance > 0;\n        upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\n        return (upkeepNeeded, \"0x0\");\n    }\n\n    function performUpkeep(bytes calldata /* performData */) external override {\n       // (bool upkeepNeeded,) = checkUpkeep(\"\");\n        // if (!upkeepNeeded) {\n        //     revert Lottery__upKeepNotNeeded(\n        //         address(this).balance,\n        //         s_players.length,\n        //         uint256(s_LotteryState)\n        //     );\n        // }\n        s_LotteryState = LotteryState.CALCULATING;\n        uint256 requestId = s_vrfCoordinator.requestRandomWords(\n            VRFV2PlusClient.RandomWordsRequest({\n            keyHash: i_keyHash,\n            subId: i_subscriptionId,\n            requestConfirmations : REQUEST_CONFIRMATION,\n            callbackGasLimit: i_callbackGasLimit,\n            numWords:NUM_WORDS,\n            extraArgs:VRFV2PlusClient._argsToBytes(\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: true})\n            )\n        })\n        );\n        emit RequestedLotteryWinner(requestId);\n    }\n\n    function EnterLottery() public payable {\n        if (msg.value < i_ticketPrice) {\n            revert Lottery__NotEnoughETHforTicket();\n        }\n        if (s_LotteryState != LotteryState.OPEN) {\n            revert Lottery__Closed();\n        }\n        s_players.push(payable(msg.sender));\n        emit LotteryEnter(msg.sender);\n    }\n\n    function fulfillRandomWords(\n        uint256 /*requestId*/,\n        uint256[] calldata randomWords\n    ) internal override  {\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\n        address payable recentWinner = s_players[indexOfWinner];\n        s_recentWinner = recentWinner;\n        (bool callSuc, ) = recentWinner.call{value: address(this).balance}(\"\");\n        s_LotteryState = LotteryState.OPEN;\n        s_players = new address payable[](0);\n        s_lastTimeStamp = block.timestamp;\n        if (!callSuc) {\n            revert Lottery__TransactionFailed();\n        }\n        emit WinnerPicked(recentWinner);\n    }\n    receive() external payable {}\n\n    // function getvrfCoordinatorV2Mock() public view returns(address){\n    //     return address(i_vrfCoordinator);\n    // }\n\n    function getTicketPrice() public view returns (uint256) {\n        return i_ticketPrice;\n    }\n\n    function getPlayers(uint256 index) public view returns (address) {\n        return s_players[index];\n    }\n\n    function getRecentWinner() public view returns (address) {\n        return s_recentWinner;\n    }\n\n    function getLotteryState() public view returns (LotteryState){\n        return s_LotteryState;\n    }\n\n    function getNumPlayers() public view returns(uint256){\n        return s_players.length;\n    }\n    \n    function getLatestTimestamp() public view returns(uint256){\n        return uint256(s_lastTimeStamp);\n    }\n\n    function getInterval() public view returns(uint256){\n        return i_interval;\n    }\n    \n    function getkeyHash() public view returns(bytes32){\n        return i_keyHash;\n    }\n\n    function getsubscriptionId() public view returns(uint256){\n        return i_subscriptionId;\n    }\n\n    function getcallbackGasLimit() public view returns(uint32){\n        return i_callbackGasLimit;  \n    }\n\n    function getNumWords() public pure returns(uint32){\n        return NUM_WORDS;\n    }\n\n    function getRequestConfirmations() public pure returns(uint16){\n        return REQUEST_CONFIRMATION;\n    }\n\n}\n"},"contracts/mocks/VRFCoordinatorV2_5Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\";"},"contracts/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol\";"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[18]},"id":19,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":18,"linearizedBaseContracts":[18],"name":"AutomationCompatibleInterface","nameLocation":"120:29:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"154:985:0","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:0","nodeType":"VariableDeclaration","scope":11,"src":"1163:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:0","nodeType":"VariableDeclaration","scope":11,"src":"1207:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"performData","nameLocation":"1239:11:0","nodeType":"VariableDeclaration","scope":11,"src":"1226:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:0"},"scope":18,"src":"1142:110:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"1256:1003:0","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":17,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"performData","nameLocation":"2300:11:0","nodeType":"VariableDeclaration","scope":17,"src":"2285:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2321:0:0"},"scope":18,"src":"2262:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":19,"src":"110:2214:0","usedErrors":[]}],"src":"32:2293:0"},"id":0},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[39],"ConfirmedOwnerWithProposal":[202]},"id":40,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":20,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":40,"sourceUnit":203,"src":"57:76:1","symbolAliases":[{"foreign":{"id":21,"name":"ConfirmedOwnerWithProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"65:26:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":24,"name":"ConfirmedOwnerWithProposal","nameLocations":["267:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"267:26:1"},"id":25,"nodeType":"InheritanceSpecifier","src":"267:26:1"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"135:105:1","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":39,"linearizedBaseContracts":[39,202,276],"name":"ConfirmedOwner","nameLocation":"249:14:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":37,"nodeType":"Block","src":"377:2:1","statements":[]},"id":38,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":30,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"355:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:1","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":35,"kind":"baseConstructorSpecifier","modifierName":{"id":29,"name":"ConfirmedOwnerWithProposal","nameLocations":["328:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"328:26:1"},"nodeType":"ModifierInvocation","src":"328:48:1"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"newOwner","nameLocation":"318:8:1","nodeType":"VariableDeclaration","scope":38,"src":"310:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:18:1"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[],"src":"377:0:1"},"scope":39,"src":"298:81:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":40,"src":"240:141:1","usedErrors":[]}],"src":"32:350:1"},"id":1},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[202],"IOwnable":[276]},"id":203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":41,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":203,"sourceUnit":277,"src":"57:52:2","symbolAliases":[{"foreign":{"id":42,"name":"IOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"65:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":45,"name":"IOwnable","nameLocations":["255:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":276,"src":"255:8:2"},"id":46,"nodeType":"InheritanceSpecifier","src":"255:8:2"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"111:105:2","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":202,"linearizedBaseContracts":[202,276],"name":"ConfirmedOwnerWithProposal","nameLocation":"225:26:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":48,"mutability":"mutable","name":"s_owner","nameLocation":"284:7:2","nodeType":"VariableDeclaration","scope":202,"src":"268:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":50,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"311:14:2","nodeType":"VariableDeclaration","scope":202,"src":"295:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":56,"name":"OwnershipTransferRequested","nameLocation":"336:26:2","nodeType":"EventDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"379:4:2","nodeType":"VariableDeclaration","scope":56,"src":"363:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":54,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"401:2:2","nodeType":"VariableDeclaration","scope":56,"src":"385:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"362:42:2"},"src":"330:75:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":62,"name":"OwnershipTransferred","nameLocation":"414:20:2","nodeType":"EventDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"451:4:2","nodeType":"VariableDeclaration","scope":62,"src":"435:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"473:2:2","nodeType":"VariableDeclaration","scope":62,"src":"457:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:42:2"},"src":"408:69:2"},{"body":{"id":95,"nodeType":"Block","src":"533:230:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"598:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"610:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:2","typeDescriptions":{}}},"id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"610:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"598:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"622:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":69,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"590:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":78,"nodeType":"ExpressionStatement","src":"590:59:2"},{"expression":{"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":79,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"656:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":80,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"666:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"656:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":82,"nodeType":"ExpressionStatement","src":"656:18:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":83,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"684:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"700:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:2","typeDescriptions":{}}},"id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"700:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"684:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":94,"nodeType":"IfStatement","src":"680:79:2","trueBody":{"id":93,"nodeType":"Block","src":"712:47:2","statements":[{"expression":{"arguments":[{"id":90,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"739:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":89,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"720:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"720:32:2"}]}}]},"id":96,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"newOwner","nameLocation":"501:8:2","nodeType":"VariableDeclaration","scope":96,"src":"493:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"pendingOwner","nameLocation":"519:12:2","nodeType":"VariableDeclaration","scope":96,"src":"511:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:40:2"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"533:0:2"},"scope":202,"src":"481:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[272],"body":{"id":109,"nodeType":"Block","src":"912:33:2","statements":[{"expression":{"arguments":[{"id":106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"937:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"918:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":108,"nodeType":"ExpressionStatement","src":"918:22:2"}]},"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"767:77:2","text":"@notice Allows an owner to begin transferring ownership to a new address."},"functionSelector":"f2fde38b","id":110,"implemented":true,"kind":"function","modifiers":[{"id":103,"kind":"modifierInvocation","modifierName":{"id":102,"name":"onlyOwner","nameLocations":["902:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"902:9:2"},"nodeType":"ModifierInvocation","src":"902:9:2"}],"name":"transferOwnership","nameLocation":"856:17:2","nodeType":"FunctionDefinition","overrides":{"id":101,"nodeType":"OverrideSpecifier","overrides":[],"src":"893:8:2"},"parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"to","nameLocation":"882:2:2","nodeType":"VariableDeclaration","scope":110,"src":"874:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"873:12:2"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"912:0:2"},"scope":202,"src":"847:98:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[275],"body":{"id":145,"nodeType":"Block","src":"1071:271:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":116,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1136:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1136:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":118,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1150:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1136:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:24:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1128:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1128:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"1128:63:2"},{"assignments":[124],"declarations":[{"constant":false,"id":124,"mutability":"mutable","name":"oldOwner","nameLocation":"1206:8:2","nodeType":"VariableDeclaration","scope":145,"src":"1198:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":126,"initialValue":{"id":125,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1217:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1198:26:2"},{"expression":{"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":127,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1230:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1240:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1240:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":131,"nodeType":"ExpressionStatement","src":"1230:20:2"},{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":132,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1256:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1281:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1273:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:2","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1256:27:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":138,"nodeType":"ExpressionStatement","src":"1256:27:2"},{"eventCall":{"arguments":[{"id":140,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1316:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1326:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1330:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1326:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1295:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"1290:47:2"}]},"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"949:74:2","text":"@notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1035:15:2","nodeType":"FunctionDefinition","overrides":{"id":113,"nodeType":"OverrideSpecifier","overrides":[],"src":"1062:8:2"},"parameters":{"id":112,"nodeType":"ParameterList","parameters":[],"src":"1050:2:2"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"1071:0:2"},"scope":202,"src":"1026:316:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[267],"body":{"id":155,"nodeType":"Block","src":"1438:25:2","statements":[{"expression":{"id":153,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1451:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":152,"id":154,"nodeType":"Return","src":"1444:14:2"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1346:33:2","text":"@notice Get the current owner"},"functionSelector":"8da5cb5b","id":156,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1391:5:2","nodeType":"FunctionDefinition","overrides":{"id":149,"nodeType":"OverrideSpecifier","overrides":[],"src":"1411:8:2"},"parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"1396:2:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":156,"src":"1429:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:9:2"},"scope":202,"src":"1382:81:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":179,"nodeType":"Block","src":"1584:191:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1655:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1659:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1655:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1649:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1641:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"ExpressionStatement","src":"1641:52:2"},{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":170,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1700:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":171,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1717:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1700:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":173,"nodeType":"ExpressionStatement","src":"1700:19:2"},{"eventCall":{"arguments":[{"id":175,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1758:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":176,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1767:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":174,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1731:26:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"EmitStatement","src":"1726:44:2"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"1467:66:2","text":"@notice validate, transfer ownership, and emit relevant events"},"id":180,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1545:18:2","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"to","nameLocation":"1572:2:2","nodeType":"VariableDeclaration","scope":180,"src":"1564:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1563:12:2"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1584:0:2"},"scope":202,"src":"1536:239:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":192,"nodeType":"Block","src":"1853:118:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1918:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1922:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1918:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":187,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1932:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1941:24:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1910:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"1910:56:2"}]},"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"1779:27:2","text":"@notice validate access"},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1818:18:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"1836:2:2"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"1853:0:2"},"scope":202,"src":"1809:162:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":200,"nodeType":"Block","src":"2069:38:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":196,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2075:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"ExpressionStatement","src":"2075:20:2"},{"id":199,"nodeType":"PlaceholderStatement","src":"2101:1:2"}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"1975:70:2","text":"@notice Reverts if called by anyone other than the contract owner."},"id":201,"name":"onlyOwner","nameLocation":"2057:9:2","nodeType":"ModifierDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"2066:2:2"},"src":"2048:59:2","virtual":false,"visibility":"internal"}],"scope":203,"src":"216:1893:2","usedErrors":[]}],"src":"32:2078:2"},"id":2},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[248]},"id":249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"AggregatorV3Interface","nameLocation":"120:21:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"155:8:3","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"163:2:3"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"189:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":206,"name":"uint8","nodeType":"ElementaryTypeName","src":"189:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"188:7:3"},"scope":248,"src":"146:50:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"209:11:3","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"220:2:3"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"246:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":211,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"245:15:3"},"scope":248,"src":"200:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"274:7:3","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"281:2:3"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"307:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:3"},"scope":248,"src":"265:51:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":234,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"329:12:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"_roundId","nameLocation":"354:8:3","nodeType":"VariableDeclaration","scope":234,"src":"347:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":220,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"341:25:3"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"roundId","nameLocation":"397:7:3","nodeType":"VariableDeclaration","scope":234,"src":"390:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":223,"name":"uint80","nodeType":"ElementaryTypeName","src":"390:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"answer","nameLocation":"413:6:3","nodeType":"VariableDeclaration","scope":234,"src":"406:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":225,"name":"int256","nodeType":"ElementaryTypeName","src":"406:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"startedAt","nameLocation":"429:9:3","nodeType":"VariableDeclaration","scope":234,"src":"421:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"updatedAt","nameLocation":"448:9:3","nodeType":"VariableDeclaration","scope":234,"src":"440:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"answeredInRound","nameLocation":"466:15:3","nodeType":"VariableDeclaration","scope":234,"src":"459:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":231,"name":"uint80","nodeType":"ElementaryTypeName","src":"459:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"389:93:3"},"scope":248,"src":"320:163:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"496:15:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"511:2:3"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"roundId","nameLocation":"556:7:3","nodeType":"VariableDeclaration","scope":247,"src":"549:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":236,"name":"uint80","nodeType":"ElementaryTypeName","src":"549:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"answer","nameLocation":"572:6:3","nodeType":"VariableDeclaration","scope":247,"src":"565:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":238,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"startedAt","nameLocation":"588:9:3","nodeType":"VariableDeclaration","scope":247,"src":"580:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"updatedAt","nameLocation":"607:9:3","nodeType":"VariableDeclaration","scope":247,"src":"599:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"answeredInRound","nameLocation":"625:15:3","nodeType":"VariableDeclaration","scope":247,"src":"618:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":244,"name":"uint80","nodeType":"ElementaryTypeName","src":"618:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"548:93:3"},"scope":248,"src":"487:155:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":249,"src":"110:534:3","usedErrors":[]}],"src":"32:613:3"},"id":3},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","exportedSymbols":{"IERC677Receiver":[260]},"id":261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC677Receiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":260,"linearizedBaseContracts":[260],"name":"IERC677Receiver","nameLocation":"67:15:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a4c0ed36","id":259,"implemented":false,"kind":"function","modifiers":[],"name":"onTokenTransfer","nameLocation":"96:15:4","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"120:6:4","nodeType":"VariableDeclaration","scope":259,"src":"112:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"amount","nameLocation":"136:6:4","nodeType":"VariableDeclaration","scope":259,"src":"128:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"128:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"data","nameLocation":"159:4:4","nodeType":"VariableDeclaration","scope":259,"src":"144:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":255,"name":"bytes","nodeType":"ElementaryTypeName","src":"144:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:53:4"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"173:0:4"},"scope":260,"src":"87:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":261,"src":"57:119:4","usedErrors":[]}],"src":"32:145:4"},"id":4},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[276]},"id":277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":262,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":276,"linearizedBaseContracts":[276],"name":"IOwnable","nameLocation":"67:8:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":267,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:5","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"94:2:5"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"115:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:5"},"scope":276,"src":"80:44:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:5","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"recipient","nameLocation":"163:9:5","nodeType":"VariableDeclaration","scope":272,"src":"155:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:5"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"182:0:5"},"scope":276,"src":"128:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":275,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:5","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"211:2:5"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"222:0:5"},"scope":276,"src":"187:36:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":277,"src":"57:168:5","usedErrors":[]}],"src":"32:194:5"},"id":5},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[371]},"id":372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":278,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":371,"linearizedBaseContracts":[371],"name":"LinkTokenInterface","nameLocation":"120:18:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":287,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"152:9:6","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"owner","nameLocation":"170:5:6","nodeType":"VariableDeclaration","scope":287,"src":"162:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"162:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"spender","nameLocation":"185:7:6","nodeType":"VariableDeclaration","scope":287,"src":"177:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"177:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"161:32:6"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"remaining","nameLocation":"225:9:6","nodeType":"VariableDeclaration","scope":287,"src":"217:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"216:19:6"},"scope":371,"src":"143:93:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"249:7:6","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"spender","nameLocation":"265:7:6","nodeType":"VariableDeclaration","scope":296,"src":"257:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"value","nameLocation":"282:5:6","nodeType":"VariableDeclaration","scope":296,"src":"274:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"256:32:6"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"success","nameLocation":"312:7:6","nodeType":"VariableDeclaration","scope":296,"src":"307:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:14:6"},"scope":371,"src":"240:81:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":303,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"334:9:6","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"owner","nameLocation":"352:5:6","nodeType":"VariableDeclaration","scope":303,"src":"344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"343:15:6"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"balance","nameLocation":"390:7:6","nodeType":"VariableDeclaration","scope":303,"src":"382:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"381:17:6"},"scope":371,"src":"325:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":308,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"412:8:6","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[],"src":"420:2:6"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"decimalPlaces","nameLocation":"452:13:6","nodeType":"VariableDeclaration","scope":308,"src":"446:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":305,"name":"uint8","nodeType":"ElementaryTypeName","src":"446:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"445:21:6"},"scope":371,"src":"403:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":317,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"480:16:6","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"spender","nameLocation":"505:7:6","nodeType":"VariableDeclaration","scope":317,"src":"497:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"addedValue","nameLocation":"522:10:6","nodeType":"VariableDeclaration","scope":317,"src":"514:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:37:6"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"success","nameLocation":"557:7:6","nodeType":"VariableDeclaration","scope":317,"src":"552:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"552:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"551:14:6"},"scope":371,"src":"471:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":324,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"579:16:6","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"spender","nameLocation":"604:7:6","nodeType":"VariableDeclaration","scope":324,"src":"596:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"subtractedValue","nameLocation":"621:15:6","nodeType":"VariableDeclaration","scope":324,"src":"613:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:42:6"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"646:0:6"},"scope":371,"src":"570:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"660:4:6","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"664:2:6"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"tokenName","nameLocation":"704:9:6","nodeType":"VariableDeclaration","scope":329,"src":"690:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":326,"name":"string","nodeType":"ElementaryTypeName","src":"690:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"689:25:6"},"scope":371,"src":"651:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":334,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"728:6:6","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"734:2:6"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"tokenSymbol","nameLocation":"774:11:6","nodeType":"VariableDeclaration","scope":334,"src":"760:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":331,"name":"string","nodeType":"ElementaryTypeName","src":"760:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"759:27:6"},"scope":371,"src":"719:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":339,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"800:11:6","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"811:2:6"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"845:17:6","nodeType":"VariableDeclaration","scope":339,"src":"837:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"836:27:6"},"scope":371,"src":"791:73:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":348,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"877:8:6","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"to","nameLocation":"894:2:6","nodeType":"VariableDeclaration","scope":348,"src":"886:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"value","nameLocation":"906:5:6","nodeType":"VariableDeclaration","scope":348,"src":"898:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"885:27:6"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"success","nameLocation":"936:7:6","nodeType":"VariableDeclaration","scope":348,"src":"931:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":345,"name":"bool","nodeType":"ElementaryTypeName","src":"931:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"930:14:6"},"scope":371,"src":"868:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"958:15:6","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"to","nameLocation":"982:2:6","nodeType":"VariableDeclaration","scope":359,"src":"974:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"value","nameLocation":"994:5:6","nodeType":"VariableDeclaration","scope":359,"src":"986:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"data","nameLocation":"1016:4:6","nodeType":"VariableDeclaration","scope":359,"src":"1001:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":353,"name":"bytes","nodeType":"ElementaryTypeName","src":"1001:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"973:48:6"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"success","nameLocation":"1045:7:6","nodeType":"VariableDeclaration","scope":359,"src":"1040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":356,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:14:6"},"scope":371,"src":"949:105:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1067:12:6","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"from","nameLocation":"1088:4:6","nodeType":"VariableDeclaration","scope":370,"src":"1080:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"to","nameLocation":"1102:2:6","nodeType":"VariableDeclaration","scope":370,"src":"1094:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"value","nameLocation":"1114:5:6","nodeType":"VariableDeclaration","scope":370,"src":"1106:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1106:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:41:6"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"success","nameLocation":"1144:7:6","nodeType":"VariableDeclaration","scope":370,"src":"1139:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"1139:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1138:14:6"},"scope":371,"src":"1058:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":372,"src":"110:1045:6","usedErrors":[]}],"src":"32:1124:6"},"id":6},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[984]},"id":985,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":373,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"230:1087:7","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":984,"linearizedBaseContracts":[984],"name":"EnumerableSet","nameLocation":"1326:13:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":382,"members":[{"constant":false,"id":377,"mutability":"mutable","name":"_values","nameLocation":"1850:7:7","nodeType":"VariableDeclaration","scope":382,"src":"1840:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1840:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":376,"nodeType":"ArrayTypeName","src":"1840:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_indexes","nameLocation":"2018:8:7","nodeType":"VariableDeclaration","scope":382,"src":"1990:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":380,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1990:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1793:3:7","nodeType":"StructDefinition","scope":984,"src":"1786:247:7","visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"2272:335:7","statements":[{"condition":{"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2286:22:7","subExpression":{"arguments":[{"id":394,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2297:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2302:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":393,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2287:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":421,"nodeType":"Block","src":"2564:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2585:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":392,"id":420,"nodeType":"Return","src":"2578:12:7"}]},"id":422,"nodeType":"IfStatement","src":"2282:319:7","trueBody":{"id":418,"nodeType":"Block","src":"2310:248:7","statements":[{"expression":{"arguments":[{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2341:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":398,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2324:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2328:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"2324:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2336:4:7","memberName":"push","nodeType":"MemberAccess","src":"2324:16:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"2324:23:7"},{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2482:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2486:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"2482:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":410,"indexExpression":{"id":408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2495:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":411,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2504:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"2504:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2516:6:7","memberName":"length","nodeType":"MemberAccess","src":"2504:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2482:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":415,"nodeType":"ExpressionStatement","src":"2482:40:7"},{"expression":{"hexValue":"74727565","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2543:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":392,"id":417,"nodeType":"Return","src":"2536:11:7"}]}}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"2039:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":424,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2212:4:7","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"set","nameLocation":"2229:3:7","nodeType":"VariableDeclaration","scope":424,"src":"2217:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":385,"nodeType":"UserDefinedTypeName","pathNode":{"id":384,"name":"Set","nameLocations":["2217:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"2217:3:7"},"referencedDeclaration":382,"src":"2217:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"2242:5:7","nodeType":"VariableDeclaration","scope":424,"src":"2234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2234:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2216:32:7"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":424,"src":"2266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"2266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2265:6:7"},"scope":984,"src":"2203:404:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":507,"nodeType":"Block","src":"2847:1316:7","statements":[{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"valueIndex","nameLocation":"2965:10:7","nodeType":"VariableDeclaration","scope":507,"src":"2957:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2957:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":441,"initialValue":{"baseExpression":{"expression":{"id":437,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2978:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2982:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"2978:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":440,"indexExpression":{"id":439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2991:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2978:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2957:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3012:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3026:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3012:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":505,"nodeType":"Block","src":"4120:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4141:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":434,"id":504,"nodeType":"Return","src":"4134:12:7"}]},"id":506,"nodeType":"IfStatement","src":"3008:1149:7","trueBody":{"id":502,"nodeType":"Block","src":"3029:1085:7","statements":[{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3389:13:7","nodeType":"VariableDeclaration","scope":502,"src":"3381:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":450,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3405:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3418:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3405:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3381:38:7"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"lastIndex","nameLocation":"3441:9:7","nodeType":"VariableDeclaration","scope":502,"src":"3433:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":458,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":453,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3453:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3457:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3453:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3465:6:7","memberName":"length","nodeType":"MemberAccess","src":"3453:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3474:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3453:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3433:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3494:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":460,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3507:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3494:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":486,"nodeType":"IfStatement","src":"3490:398:7","trueBody":{"id":485,"nodeType":"Block","src":"3522:366:7","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"lastValue","nameLocation":"3548:9:7","nodeType":"VariableDeclaration","scope":485,"src":"3540:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":468,"initialValue":{"baseExpression":{"expression":{"id":464,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3560:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3560:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":467,"indexExpression":{"id":466,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3572:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3560:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3540:42:7"},{"expression":{"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":469,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3682:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3686:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3682:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":473,"indexExpression":{"id":471,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3694:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3682:26:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":474,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3711:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3682:38:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":476,"nodeType":"ExpressionStatement","src":"3682:38:7"},{"expression":{"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":477,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3794:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3798:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"3794:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":481,"indexExpression":{"id":479,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3807:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3794:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":482,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3820:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3794:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"nodeType":"ExpressionStatement","src":"3794:36:7"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":487,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3966:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3966:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3978:3:7","memberName":"pop","nodeType":"MemberAccess","src":"3966:15:7","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3966:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"3966:17:7"},{"expression":{"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4051:26:7","subExpression":{"baseExpression":{"expression":{"id":494,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4058:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4062:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"4058:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":497,"indexExpression":{"id":496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4071:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4058:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"4051:26:7"},{"expression":{"hexValue":"74727565","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4099:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":434,"id":501,"nodeType":"Return","src":"4092:11:7"}]}}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2613:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":508,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2784:7:7","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"set","nameLocation":"2804:3:7","nodeType":"VariableDeclaration","scope":508,"src":"2792:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"Set","nameLocations":["2792:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"2792:3:7"},"referencedDeclaration":382,"src":"2792:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"value","nameLocation":"2817:5:7","nodeType":"VariableDeclaration","scope":508,"src":"2809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2809:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2791:32:7"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"2841:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":432,"name":"bool","nodeType":"ElementaryTypeName","src":"2841:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2840:6:7"},"scope":984,"src":"2775:1388:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":526,"nodeType":"Block","src":"4323:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":519,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"4340:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4344:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"4340:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":522,"indexExpression":{"id":521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4353:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4340:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4363:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4340:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":518,"id":525,"nodeType":"Return","src":"4333:31:7"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"4169:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4253:9:7","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"set","nameLocation":"4275:3:7","nodeType":"VariableDeclaration","scope":527,"src":"4263:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":511,"nodeType":"UserDefinedTypeName","pathNode":{"id":510,"name":"Set","nameLocations":["4263:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"4263:3:7"},"referencedDeclaration":382,"src":"4263:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"4288:5:7","nodeType":"VariableDeclaration","scope":527,"src":"4280:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4280:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4262:32:7"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"4317:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":516,"name":"bool","nodeType":"ElementaryTypeName","src":"4317:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4316:6:7"},"scope":984,"src":"4244:127:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":540,"nodeType":"Block","src":"4517:42:7","statements":[{"expression":{"expression":{"expression":{"id":536,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4534:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4538:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"4534:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4546:6:7","memberName":"length","nodeType":"MemberAccess","src":"4534:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":535,"id":539,"nodeType":"Return","src":"4527:25:7"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"4377:70:7","text":" @dev Returns the number of values on the set. O(1)."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4461:7:7","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"set","nameLocation":"4481:3:7","nodeType":"VariableDeclaration","scope":541,"src":"4469:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"Set","nameLocations":["4469:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"4469:3:7"},"referencedDeclaration":382,"src":"4469:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4468:17:7"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"4508:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4508:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4507:9:7"},"scope":984,"src":"4452:107:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":557,"nodeType":"Block","src":"4977:42:7","statements":[{"expression":{"baseExpression":{"expression":{"id":552,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4994:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4998:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"4994:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":555,"indexExpression":{"id":554,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5006:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:18:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":551,"id":556,"nodeType":"Return","src":"4987:25:7"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"4565:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4910:3:7","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"set","nameLocation":"4926:3:7","nodeType":"VariableDeclaration","scope":558,"src":"4914:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"Set","nameLocations":["4914:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"4914:3:7"},"referencedDeclaration":382,"src":"4914:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"index","nameLocation":"4939:5:7","nodeType":"VariableDeclaration","scope":558,"src":"4931:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4913:32:7"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"4968:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4968:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4967:9:7"},"scope":984,"src":"4901:118:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":571,"nodeType":"Block","src":"5633:35:7","statements":[{"expression":{"expression":{"id":568,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"5650:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5654:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"5650:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":567,"id":570,"nodeType":"Return","src":"5643:18:7"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"5025:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":572,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5568:7:7","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"set","nameLocation":"5588:3:7","nodeType":"VariableDeclaration","scope":572,"src":"5576:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":561,"nodeType":"UserDefinedTypeName","pathNode":{"id":560,"name":"Set","nameLocations":["5576:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"5576:3:7"},"referencedDeclaration":382,"src":"5576:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5575:17:7"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"5615:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5615:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":565,"nodeType":"ArrayTypeName","src":"5615:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5614:18:7"},"scope":984,"src":"5559:109:7","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":576,"members":[{"constant":false,"id":575,"mutability":"mutable","name":"_inner","nameLocation":"5725:6:7","nodeType":"VariableDeclaration","scope":576,"src":"5721:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":574,"nodeType":"UserDefinedTypeName","pathNode":{"id":573,"name":"Set","nameLocations":["5721:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"5721:3:7"},"referencedDeclaration":382,"src":"5721:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5700:10:7","nodeType":"StructDefinition","scope":984,"src":"5693:45:7","visibility":"public"},{"body":{"id":593,"nodeType":"Block","src":"5984:47:7","statements":[{"expression":{"arguments":[{"expression":{"id":588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6006:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6010:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6006:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6018:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":587,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6001:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6001:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":586,"id":592,"nodeType":"Return","src":"5994:30:7"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"5744:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5917:3:7","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"set","nameLocation":"5940:3:7","nodeType":"VariableDeclaration","scope":594,"src":"5921:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"Bytes32Set","nameLocations":["5921:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"5921:10:7"},"referencedDeclaration":576,"src":"5921:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"value","nameLocation":"5953:5:7","nodeType":"VariableDeclaration","scope":594,"src":"5945:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5945:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5920:39:7"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"5978:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"5978:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5977:6:7"},"scope":984,"src":"5908:123:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":611,"nodeType":"Block","src":"6278:50:7","statements":[{"expression":{"arguments":[{"expression":{"id":606,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6303:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6307:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6303:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6315:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":605,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"6295:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":604,"id":610,"nodeType":"Return","src":"6288:33:7"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"6037:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":612,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6208:6:7","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"set","nameLocation":"6234:3:7","nodeType":"VariableDeclaration","scope":612,"src":"6215:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":597,"nodeType":"UserDefinedTypeName","pathNode":{"id":596,"name":"Bytes32Set","nameLocations":["6215:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"6215:10:7"},"referencedDeclaration":576,"src":"6215:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"value","nameLocation":"6247:5:7","nodeType":"VariableDeclaration","scope":612,"src":"6239:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6239:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6214:39:7"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"6272:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"6272:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6271:6:7"},"scope":984,"src":"6199:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":629,"nodeType":"Block","src":"6495:52:7","statements":[{"expression":{"arguments":[{"expression":{"id":624,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6522:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6526:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6522:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6534:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":623,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6512:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6512:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":622,"id":628,"nodeType":"Return","src":"6505:35:7"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"6334:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":630,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6418:8:7","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"set","nameLocation":"6446:3:7","nodeType":"VariableDeclaration","scope":630,"src":"6427:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":615,"nodeType":"UserDefinedTypeName","pathNode":{"id":614,"name":"Bytes32Set","nameLocations":["6427:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"6427:10:7"},"referencedDeclaration":576,"src":"6427:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"value","nameLocation":"6459:5:7","nodeType":"VariableDeclaration","scope":630,"src":"6451:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6451:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6426:39:7"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"6489:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":620,"name":"bool","nodeType":"ElementaryTypeName","src":"6489:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6488:6:7"},"scope":984,"src":"6409:138:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":644,"nodeType":"Block","src":"6700:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":640,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6725:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6729:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6725:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":639,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"6717:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":638,"id":643,"nodeType":"Return","src":"6710:26:7"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"6553:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":645,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6637:6:7","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"set","nameLocation":"6663:3:7","nodeType":"VariableDeclaration","scope":645,"src":"6644:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"Bytes32Set","nameLocations":["6644:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"6644:10:7"},"referencedDeclaration":576,"src":"6644:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6643:24:7"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"6691:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6691:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6690:9:7"},"scope":984,"src":"6628:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"7168:46:7","statements":[{"expression":{"arguments":[{"expression":{"id":657,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7189:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7193:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7189:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":659,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7201:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7185:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7185:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":655,"id":661,"nodeType":"Return","src":"7178:29:7"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"6749:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7094:2:7","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"set","nameLocation":"7116:3:7","nodeType":"VariableDeclaration","scope":663,"src":"7097:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":648,"nodeType":"UserDefinedTypeName","pathNode":{"id":647,"name":"Bytes32Set","nameLocations":["7097:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"7097:10:7"},"referencedDeclaration":576,"src":"7097:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"index","nameLocation":"7129:5:7","nodeType":"VariableDeclaration","scope":663,"src":"7121:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7096:39:7"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"7159:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7159:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7158:9:7"},"scope":984,"src":"7085:129:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":692,"nodeType":"Block","src":"7835:219:7","statements":[{"assignments":[677],"declarations":[{"constant":false,"id":677,"mutability":"mutable","name":"store","nameLocation":"7862:5:7","nodeType":"VariableDeclaration","scope":692,"src":"7845:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7845:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":676,"nodeType":"ArrayTypeName","src":"7845:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":682,"initialValue":{"arguments":[{"expression":{"id":679,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7878:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7882:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7878:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":678,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"7870:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7870:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7845:44:7"},{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"result","nameLocation":"7916:6:7","nodeType":"VariableDeclaration","scope":692,"src":"7899:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":686,"nodeType":"ArrayTypeName","src":"7899:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":688,"nodeType":"VariableDeclarationStatement","src":"7899:23:7"},{"AST":{"nodeType":"YulBlock","src":"7985:39:7","statements":[{"nodeType":"YulAssignment","src":"7999:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"8009:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7999:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":687,"isOffset":false,"isSlot":false,"src":"7999:6:7","valueSize":1},{"declaration":677,"isOffset":false,"isSlot":false,"src":"8009:5:7","valueSize":1}],"id":689,"nodeType":"InlineAssembly","src":"7976:48:7"},{"expression":{"id":690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8041:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":672,"id":691,"nodeType":"Return","src":"8034:13:7"}]},"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"7220:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":693,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7763:6:7","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"set","nameLocation":"7789:3:7","nodeType":"VariableDeclaration","scope":693,"src":"7770:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":666,"nodeType":"UserDefinedTypeName","pathNode":{"id":665,"name":"Bytes32Set","nameLocations":["7770:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"7770:10:7"},"referencedDeclaration":576,"src":"7770:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7769:24:7"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"7817:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7817:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":670,"nodeType":"ArrayTypeName","src":"7817:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7816:18:7"},"scope":984,"src":"7754:300:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":697,"members":[{"constant":false,"id":696,"mutability":"mutable","name":"_inner","nameLocation":"8111:6:7","nodeType":"VariableDeclaration","scope":697,"src":"8107:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":695,"nodeType":"UserDefinedTypeName","pathNode":{"id":694,"name":"Set","nameLocations":["8107:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"8107:3:7"},"referencedDeclaration":382,"src":"8107:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8086:10:7","nodeType":"StructDefinition","scope":984,"src":"8079:45:7","visibility":"public"},{"body":{"id":723,"nodeType":"Block","src":"8370:74:7","statements":[{"expression":{"arguments":[{"expression":{"id":709,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"8392:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8396:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"8392:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8428:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8420:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":715,"name":"uint160","nodeType":"ElementaryTypeName","src":"8420:7:7","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8412:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"8412:7:7","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8412:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8404:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8404:7:7","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":708,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"8387:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8387:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":707,"id":722,"nodeType":"Return","src":"8380:57:7"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8130:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8303:3:7","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"set","nameLocation":"8326:3:7","nodeType":"VariableDeclaration","scope":724,"src":"8307:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"AddressSet","nameLocations":["8307:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"8307:10:7"},"referencedDeclaration":697,"src":"8307:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"value","nameLocation":"8339:5:7","nodeType":"VariableDeclaration","scope":724,"src":"8331:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"8331:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8306:39:7"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"8364:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":705,"name":"bool","nodeType":"ElementaryTypeName","src":"8364:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8363:6:7"},"scope":984,"src":"8294:150:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":750,"nodeType":"Block","src":"8691:77:7","statements":[{"expression":{"arguments":[{"expression":{"id":736,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"8716:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8720:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"8716:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"8752:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8744:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":742,"name":"uint160","nodeType":"ElementaryTypeName","src":"8744:7:7","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8744:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8736:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8736:7:7","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8728:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8728:7:7","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8728:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":735,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8708:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8708:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":734,"id":749,"nodeType":"Return","src":"8701:60:7"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"8450:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":751,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8621:6:7","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"set","nameLocation":"8647:3:7","nodeType":"VariableDeclaration","scope":751,"src":"8628:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":727,"nodeType":"UserDefinedTypeName","pathNode":{"id":726,"name":"AddressSet","nameLocations":["8628:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"8628:10:7"},"referencedDeclaration":697,"src":"8628:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"value","nameLocation":"8660:5:7","nodeType":"VariableDeclaration","scope":751,"src":"8652:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8627:39:7"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":751,"src":"8685:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":732,"name":"bool","nodeType":"ElementaryTypeName","src":"8685:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8684:6:7"},"scope":984,"src":"8612:156:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":777,"nodeType":"Block","src":"8935:79:7","statements":[{"expression":{"arguments":[{"expression":{"id":763,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"8962:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8966:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"8962:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8998:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8990:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":769,"name":"uint160","nodeType":"ElementaryTypeName","src":"8990:7:7","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8990:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8982:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"8982:7:7","typeDescriptions":{}}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8982:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8974:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8974:7:7","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":762,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8952:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":761,"id":776,"nodeType":"Return","src":"8945:62:7"}]},"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"8774:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8858:8:7","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"set","nameLocation":"8886:3:7","nodeType":"VariableDeclaration","scope":778,"src":"8867:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":754,"nodeType":"UserDefinedTypeName","pathNode":{"id":753,"name":"AddressSet","nameLocations":["8867:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"8867:10:7"},"referencedDeclaration":697,"src":"8867:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"8899:5:7","nodeType":"VariableDeclaration","scope":778,"src":"8891:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"8891:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8866:39:7"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"8929:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"8929:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8928:6:7"},"scope":984,"src":"8849:165:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"9167:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":788,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9192:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9196:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"9192:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":787,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9184:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9184:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":786,"id":791,"nodeType":"Return","src":"9177:26:7"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"9020:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9104:6:7","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"set","nameLocation":"9130:3:7","nodeType":"VariableDeclaration","scope":793,"src":"9111:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":781,"nodeType":"UserDefinedTypeName","pathNode":{"id":780,"name":"AddressSet","nameLocations":["9111:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"9111:10:7"},"referencedDeclaration":697,"src":"9111:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9110:24:7"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"9158:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9157:9:7"},"scope":984,"src":"9095:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"9635:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":811,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9680:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9684:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"9680:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":813,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9692:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9676:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9676:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9668:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"9668:7:7","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9668:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9660:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":806,"name":"uint160","nodeType":"ElementaryTypeName","src":"9660:7:7","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9660:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9652:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"9652:7:7","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9652:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":803,"id":818,"nodeType":"Return","src":"9645:56:7"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"9216:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9561:2:7","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"set","nameLocation":"9583:3:7","nodeType":"VariableDeclaration","scope":820,"src":"9564:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":796,"nodeType":"UserDefinedTypeName","pathNode":{"id":795,"name":"AddressSet","nameLocations":["9564:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"9564:10:7"},"referencedDeclaration":697,"src":"9564:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"index","nameLocation":"9596:5:7","nodeType":"VariableDeclaration","scope":820,"src":"9588:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9563:39:7"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"9626:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"9626:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9625:9:7"},"scope":984,"src":"9552:156:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"10329:219:7","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"store","nameLocation":"10356:5:7","nodeType":"VariableDeclaration","scope":849,"src":"10339:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10339:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":833,"nodeType":"ArrayTypeName","src":"10339:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[{"expression":{"id":836,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"10372:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"10372:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":835,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"10364:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10364:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10339:44:7"},{"assignments":[844],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"result","nameLocation":"10410:6:7","nodeType":"VariableDeclaration","scope":849,"src":"10393:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"10393:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":843,"nodeType":"ArrayTypeName","src":"10393:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":845,"nodeType":"VariableDeclarationStatement","src":"10393:23:7"},{"AST":{"nodeType":"YulBlock","src":"10479:39:7","statements":[{"nodeType":"YulAssignment","src":"10493:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"10503:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10493:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":844,"isOffset":false,"isSlot":false,"src":"10493:6:7","valueSize":1},{"declaration":834,"isOffset":false,"isSlot":false,"src":"10503:5:7","valueSize":1}],"id":846,"nodeType":"InlineAssembly","src":"10470:48:7"},{"expression":{"id":847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"10535:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":829,"id":848,"nodeType":"Return","src":"10528:13:7"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"9714:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10257:6:7","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"set","nameLocation":"10283:3:7","nodeType":"VariableDeclaration","scope":850,"src":"10264:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"AddressSet","nameLocations":["10264:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"10264:10:7"},"referencedDeclaration":697,"src":"10264:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10263:24:7"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"10311:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"10311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":827,"nodeType":"ArrayTypeName","src":"10311:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10310:18:7"},"scope":984,"src":"10248:300:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":854,"members":[{"constant":false,"id":853,"mutability":"mutable","name":"_inner","nameLocation":"10599:6:7","nodeType":"VariableDeclaration","scope":854,"src":"10595:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":852,"nodeType":"UserDefinedTypeName","pathNode":{"id":851,"name":"Set","nameLocations":["10595:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"10595:3:7"},"referencedDeclaration":382,"src":"10595:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10577:7:7","nodeType":"StructDefinition","scope":984,"src":"10570:42:7","visibility":"public"},{"body":{"id":874,"nodeType":"Block","src":"10855:56:7","statements":[{"expression":{"arguments":[{"expression":{"id":866,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"10877:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10881:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"10877:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"10897:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10889:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10889:7:7","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":865,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"10872:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":864,"id":873,"nodeType":"Return","src":"10865:39:7"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"10618:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10791:3:7","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"set","nameLocation":"10811:3:7","nodeType":"VariableDeclaration","scope":875,"src":"10795:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":857,"nodeType":"UserDefinedTypeName","pathNode":{"id":856,"name":"UintSet","nameLocations":["10795:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"10795:7:7"},"referencedDeclaration":854,"src":"10795:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"value","nameLocation":"10824:5:7","nodeType":"VariableDeclaration","scope":875,"src":"10816:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10794:36:7"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"10849:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":862,"name":"bool","nodeType":"ElementaryTypeName","src":"10849:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10848:6:7"},"scope":984,"src":"10782:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"11155:59:7","statements":[{"expression":{"arguments":[{"expression":{"id":887,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11180:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11184:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11180:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"11200:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11192:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11192:7:7","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":886,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"11172:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11172:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":885,"id":894,"nodeType":"Return","src":"11165:42:7"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"10917:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11088:6:7","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"set","nameLocation":"11111:3:7","nodeType":"VariableDeclaration","scope":896,"src":"11095:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":878,"nodeType":"UserDefinedTypeName","pathNode":{"id":877,"name":"UintSet","nameLocations":["11095:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11095:7:7"},"referencedDeclaration":854,"src":"11095:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"value","nameLocation":"11124:5:7","nodeType":"VariableDeclaration","scope":896,"src":"11116:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"11116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11094:36:7"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"11149:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":883,"name":"bool","nodeType":"ElementaryTypeName","src":"11149:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11148:6:7"},"scope":984,"src":"11079:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"11378:61:7","statements":[{"expression":{"arguments":[{"expression":{"id":908,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"11405:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11409:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11405:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"11425:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11417:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11417:7:7","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":907,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11395:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11395:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":906,"id":915,"nodeType":"Return","src":"11388:44:7"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"11220:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11304:8:7","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"set","nameLocation":"11329:3:7","nodeType":"VariableDeclaration","scope":917,"src":"11313:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":899,"nodeType":"UserDefinedTypeName","pathNode":{"id":898,"name":"UintSet","nameLocations":["11313:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11313:7:7"},"referencedDeclaration":854,"src":"11313:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"value","nameLocation":"11342:5:7","nodeType":"VariableDeclaration","scope":917,"src":"11334:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"11334:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11312:36:7"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"11372:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":904,"name":"bool","nodeType":"ElementaryTypeName","src":"11372:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11371:6:7"},"scope":984,"src":"11295:144:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"11589:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":927,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11614:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11618:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11614:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":926,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"11606:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11606:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":925,"id":930,"nodeType":"Return","src":"11599:26:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"11445:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11529:6:7","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"set","nameLocation":"11552:3:7","nodeType":"VariableDeclaration","scope":932,"src":"11536:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":920,"nodeType":"UserDefinedTypeName","pathNode":{"id":919,"name":"UintSet","nameLocations":["11536:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11536:7:7"},"referencedDeclaration":854,"src":"11536:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11535:21:7"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"11580:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11579:9:7"},"scope":984,"src":"11520:112:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"12054:55:7","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":946,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"12083:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12087:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"12083:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":948,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"12095:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":945,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"12079:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12079:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12071:7:7","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12071:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":942,"id":951,"nodeType":"Return","src":"12064:38:7"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"11638:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11983:2:7","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"set","nameLocation":"12002:3:7","nodeType":"VariableDeclaration","scope":953,"src":"11986:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":935,"nodeType":"UserDefinedTypeName","pathNode":{"id":934,"name":"UintSet","nameLocations":["11986:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11986:7:7"},"referencedDeclaration":854,"src":"11986:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"index","nameLocation":"12015:5:7","nodeType":"VariableDeclaration","scope":953,"src":"12007:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11985:36:7"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"12045:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"12045:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12044:9:7"},"scope":984,"src":"11974:135:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":982,"nodeType":"Block","src":"12727:219:7","statements":[{"assignments":[967],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"store","nameLocation":"12754:5:7","nodeType":"VariableDeclaration","scope":982,"src":"12737:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12737:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":966,"nodeType":"ArrayTypeName","src":"12737:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":972,"initialValue":{"arguments":[{"expression":{"id":969,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"12770:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12774:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"12770:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":968,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"12762:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12762:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12737:44:7"},{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"result","nameLocation":"12808:6:7","nodeType":"VariableDeclaration","scope":982,"src":"12791:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":976,"nodeType":"ArrayTypeName","src":"12791:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":978,"nodeType":"VariableDeclarationStatement","src":"12791:23:7"},{"AST":{"nodeType":"YulBlock","src":"12877:39:7","statements":[{"nodeType":"YulAssignment","src":"12891:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"12901:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12891:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":977,"isOffset":false,"isSlot":false,"src":"12891:6:7","valueSize":1},{"declaration":967,"isOffset":false,"isSlot":false,"src":"12901:5:7","valueSize":1}],"id":979,"nodeType":"InlineAssembly","src":"12868:48:7"},{"expression":{"id":980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12933:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":962,"id":981,"nodeType":"Return","src":"12926:13:7"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"12115:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":983,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12658:6:7","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"set","nameLocation":"12681:3:7","nodeType":"VariableDeclaration","scope":983,"src":"12665:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":956,"nodeType":"UserDefinedTypeName","pathNode":{"id":955,"name":"UintSet","nameLocations":["12665:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"12665:7:7"},"referencedDeclaration":854,"src":"12665:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12664:21:7"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":983,"src":"12709:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"12709:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":960,"nodeType":"ArrayTypeName","src":"12709:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12708:18:7"},"scope":984,"src":"12649:297:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":985,"src":"1318:11630:7","usedErrors":[]}],"src":"205:12744:7"},"id":7},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[1042]},"id":1043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":986,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"57:5275:8","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":1042,"linearizedBaseContracts":[1042],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:8","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":993,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:8","nodeType":"ErrorDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"have","nameLocation":"5413:4:8","nodeType":"VariableDeclaration","scope":993,"src":"5405:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"want","nameLocation":"5427:4:8","nodeType":"VariableDeclaration","scope":993,"src":"5419:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:8"},"src":"5373:60:8"},{"constant":false,"id":995,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:8","nodeType":"VariableDeclaration","scope":1042,"src":"5520:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1005,"nodeType":"Block","src":"5677:43:8","statements":[{"expression":{"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1001,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5683:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1002,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"5700:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1004,"nodeType":"ExpressionStatement","src":"5683:32:8"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"5565:72:8","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":1006,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:8","nodeType":"VariableDeclaration","scope":1006,"src":"5652:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:8"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"5677:0:8"},"scope":1042,"src":"5640:80:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"5724:686:8","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:8","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:8","nodeType":"VariableDeclaration","scope":1015,"src":"6533:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:8","nodeType":"VariableDeclaration","scope":1015,"src":"6552:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ArrayTypeName","src":"6552:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:8"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"6598:0:8"},"scope":1042,"src":"6505:94:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1040,"nodeType":"Block","src":"6883:167:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1023,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6897:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6893:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1025,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6907:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1034,"nodeType":"IfStatement","src":"6889:109:8","trueBody":{"id":1033,"nodeType":"Block","src":"6923:75:8","statements":[{"errorCall":{"arguments":[{"expression":{"id":1028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6968:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6964:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6976:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1027,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6938:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6938:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"RevertStatement","src":"6931:60:8"}]}},{"expression":{"arguments":[{"id":1036,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"7022:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1037,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7033:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1035,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7003:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1039,"nodeType":"ExpressionStatement","src":"7003:42:8"}]},"functionSelector":"1fe543e3","id":1041,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:8","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:8","nodeType":"VariableDeclaration","scope":1041,"src":"6825:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:8","nodeType":"VariableDeclaration","scope":1041,"src":"6844:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"6844:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:8"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"6883:0:8"},"scope":1042,"src":"6794:256:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1043,"src":"5333:1719:8","usedErrors":[993]}],"src":"32:7021:8"},"id":8},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol","exportedSymbols":{"AggregatorV3Interface":[248],"ConfirmedOwner":[39],"EnumerableSet":[984],"IERC677Receiver":[260],"IVRFSubscriptionV2Plus":[2641],"LinkTokenInterface":[371],"SubscriptionAPI":[2357]},"id":2358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1044,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","file":"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","id":1046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":985,"src":"57:114:9","symbolAliases":[{"foreign":{"id":1045,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"65:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","file":"../../shared/interfaces/LinkTokenInterface.sol","id":1048,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":372,"src":"172:82:9","symbolAliases":[{"foreign":{"id":1047,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"180:18:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":1050,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":40,"src":"255:70:9","symbolAliases":[{"foreign":{"id":1049,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"263:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"../../shared/interfaces/AggregatorV3Interface.sol","id":1052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":249,"src":"326:88:9","symbolAliases":[{"foreign":{"id":1051,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"334:21:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","file":"../../shared/interfaces/IERC677Receiver.sol","id":1054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":261,"src":"415:76:9","symbolAliases":[{"foreign":{"id":1053,"name":"IERC677Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"423:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./interfaces/IVRFSubscriptionV2Plus.sol","id":1056,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":2642,"src":"492:79:9","symbolAliases":[{"foreign":{"id":1055,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"500:22:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1057,"name":"ConfirmedOwner","nameLocations":["610:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"610:14:9"},"id":1058,"nodeType":"InheritanceSpecifier","src":"610:14:9"},{"baseName":{"id":1059,"name":"IERC677Receiver","nameLocations":["626:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":260,"src":"626:15:9"},"id":1060,"nodeType":"InheritanceSpecifier","src":"626:15:9"},{"baseName":{"id":1061,"name":"IVRFSubscriptionV2Plus","nameLocations":["643:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":2641,"src":"643:22:9"},"id":1062,"nodeType":"InheritanceSpecifier","src":"643:22:9"}],"canonicalName":"SubscriptionAPI","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2357,"linearizedBaseContracts":[2357,2641,260,39,202,276],"name":"SubscriptionAPI","nameLocation":"591:15:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1066,"libraryName":{"id":1063,"name":"EnumerableSet","nameLocations":["676:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"676:13:9"},"nodeType":"UsingForDirective","src":"670:46:9","typeName":{"id":1065,"nodeType":"UserDefinedTypeName","pathNode":{"id":1064,"name":"EnumerableSet.UintSet","nameLocations":["694:13:9","708:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"694:21:9"},"referencedDeclaration":854,"src":"694:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"constant":false,"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"720:89:9","text":"@dev may not be provided upon construction on some chains due to lack of availability"},"functionSelector":"1b6b6d23","id":1070,"mutability":"mutable","name":"LINK","nameLocation":"838:4:9","nodeType":"VariableDeclaration","scope":2357,"src":"812:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"},"typeName":{"id":1069,"nodeType":"UserDefinedTypeName","pathNode":{"id":1068,"name":"LinkTokenInterface","nameLocations":["812:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":371,"src":"812:18:9"},"referencedDeclaration":371,"src":"812:18:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"visibility":"public"},{"constant":false,"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"846:89:9","text":"@dev may not be provided upon construction on some chains due to lack of availability"},"functionSelector":"72e9d565","id":1074,"mutability":"mutable","name":"LINK_NATIVE_FEED","nameLocation":"967:16:9","nodeType":"VariableDeclaration","scope":2357,"src":"938:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1073,"nodeType":"UserDefinedTypeName","pathNode":{"id":1072,"name":"AggregatorV3Interface","nameLocations":["938:21:9"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"938:21:9"},"referencedDeclaration":248,"src":"938:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"constant":true,"functionSelector":"64d51a2a","id":1077,"mutability":"constant","name":"MAX_CONSUMERS","nameLocation":"1212:13:9","nodeType":"VariableDeclaration","scope":2357,"src":"1189:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1075,"name":"uint16","nodeType":"ElementaryTypeName","src":"1189:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1228:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"errorSelector":"05a48e0f","id":1079,"name":"TooManyConsumers","nameLocation":"1241:16:9","nodeType":"ErrorDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"1257:2:9"},"src":"1235:25:9"},{"errorSelector":"f4d678b8","id":1081,"name":"InsufficientBalance","nameLocation":"1269:19:9","nodeType":"ErrorDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"1288:2:9"},"src":"1263:28:9"},{"errorSelector":"79bfd401","id":1087,"name":"InvalidConsumer","nameLocation":"1300:15:9","nodeType":"ErrorDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"subId","nameLocation":"1324:5:9","nodeType":"VariableDeclaration","scope":1087,"src":"1316:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"consumer","nameLocation":"1339:8:9","nodeType":"VariableDeclaration","scope":1087,"src":"1331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"1331:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:33:9"},"src":"1294:55:9"},{"errorSelector":"1f6a65b6","id":1089,"name":"InvalidSubscription","nameLocation":"1358:19:9","nodeType":"ErrorDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"1377:2:9"},"src":"1352:28:9"},{"errorSelector":"44b0e3c3","id":1091,"name":"OnlyCallableFromLink","nameLocation":"1389:20:9","nodeType":"ErrorDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"1409:2:9"},"src":"1383:29:9"},{"errorSelector":"8129bbcd","id":1093,"name":"InvalidCalldata","nameLocation":"1421:15:9","nodeType":"ErrorDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[],"src":"1436:2:9"},"src":"1415:24:9"},{"errorSelector":"d8a3fb52","id":1097,"name":"MustBeSubOwner","nameLocation":"1448:14:9","nodeType":"ErrorDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"owner","nameLocation":"1471:5:9","nodeType":"VariableDeclaration","scope":1097,"src":"1463:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:15:9"},"src":"1442:36:9"},{"errorSelector":"b42f66e8","id":1099,"name":"PendingRequestExists","nameLocation":"1487:20:9","nodeType":"ErrorDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"1507:2:9"},"src":"1481:29:9"},{"errorSelector":"d084e975","id":1103,"name":"MustBeRequestedOwner","nameLocation":"1519:20:9","nodeType":"ErrorDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"proposedOwner","nameLocation":"1548:13:9","nodeType":"VariableDeclaration","scope":1103,"src":"1540:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1540:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1539:23:9"},"src":"1513:50:9"},{"errorSelector":"a99da302","id":1109,"name":"BalanceInvariantViolated","nameLocation":"1572:24:9","nodeType":"ErrorDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"internalBalance","nameLocation":"1605:15:9","nodeType":"VariableDeclaration","scope":1109,"src":"1597:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"externalBalance","nameLocation":"1630:15:9","nodeType":"VariableDeclaration","scope":1109,"src":"1622:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:50:9"},"src":"1566:81:9"},{"anonymous":false,"eventSelector":"59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600","id":1115,"name":"FundsRecovered","nameLocation":"1679:14:9","nodeType":"EventDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1702:2:9","nodeType":"VariableDeclaration","scope":1115,"src":"1694:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1714:6:9","nodeType":"VariableDeclaration","scope":1115,"src":"1706:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:28:9"},"src":"1673:49:9"},{"anonymous":false,"eventSelector":"4aed7c8eed0496c8c19ea2681fcca25741c1602342e38b045d9f1e8e905d2e9c","id":1121,"name":"NativeFundsRecovered","nameLocation":"1731:20:9","nodeType":"EventDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1760:2:9","nodeType":"VariableDeclaration","scope":1121,"src":"1752:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1772:6:9","nodeType":"VariableDeclaration","scope":1121,"src":"1764:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1751:28:9"},"src":"1725:55:9"},{"errorSelector":"2d118a6e","id":1123,"name":"LinkAlreadySet","nameLocation":"1789:14:9","nodeType":"ErrorDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"1803:2:9"},"src":"1783:23:9"},{"errorSelector":"950b2479","id":1125,"name":"FailedToSendNative","nameLocation":"1815:18:9","nodeType":"ErrorDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"1833:2:9"},"src":"1809:27:9"},{"errorSelector":"7c07fc4c","id":1127,"name":"FailedToTransferLink","nameLocation":"1845:20:9","nodeType":"ErrorDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"1865:2:9"},"src":"1839:29:9"},{"errorSelector":"1390f2a1","id":1129,"name":"IndexOutOfRange","nameLocation":"1877:15:9","nodeType":"ErrorDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"1892:2:9"},"src":"1871:24:9"},{"errorSelector":"c1f0c0a1","id":1131,"name":"LinkNotSet","nameLocation":"1904:10:9","nodeType":"ErrorDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"1914:2:9"},"src":"1898:19:9"},{"canonicalName":"SubscriptionAPI.Subscription","id":1138,"members":[{"constant":false,"id":1133,"mutability":"mutable","name":"balance","nameLocation":"2130:7:9","nodeType":"VariableDeclaration","scope":1138,"src":"2123:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1132,"name":"uint96","nodeType":"ElementaryTypeName","src":"2123:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"nativeBalance","nameLocation":"2355:13:9","nodeType":"VariableDeclaration","scope":1138,"src":"2348:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1134,"name":"uint96","nodeType":"ElementaryTypeName","src":"2348:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"reqCount","nameLocation":"2438:8:9","nodeType":"VariableDeclaration","scope":1138,"src":"2431:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1136,"name":"uint64","nodeType":"ElementaryTypeName","src":"2431:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1999:12:9","nodeType":"StructDefinition","scope":2357,"src":"1992:459:9","visibility":"public"},{"canonicalName":"SubscriptionAPI.SubscriptionConfig","id":1146,"members":[{"constant":false,"id":1140,"mutability":"mutable","name":"owner","nameLocation":"2535:5:9","nodeType":"VariableDeclaration","scope":1146,"src":"2527:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"requestedOwner","nameLocation":"2597:14:9","nodeType":"VariableDeclaration","scope":1146,"src":"2589:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"consumers","nameLocation":"3071:9:9","nodeType":"VariableDeclaration","scope":1146,"src":"3061:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1144,"nodeType":"ArrayTypeName","src":"3061:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"SubscriptionConfig","nameLocation":"2502:18:9","nodeType":"StructDefinition","scope":2357,"src":"2495:590:9","visibility":"public"},{"canonicalName":"SubscriptionAPI.ConsumerConfig","id":1153,"members":[{"constant":false,"id":1148,"mutability":"mutable","name":"active","nameLocation":"3121:6:9","nodeType":"VariableDeclaration","scope":1153,"src":"3116:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1147,"name":"bool","nodeType":"ElementaryTypeName","src":"3116:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"nonce","nameLocation":"3140:5:9","nodeType":"VariableDeclaration","scope":1153,"src":"3133:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1149,"name":"uint64","nodeType":"ElementaryTypeName","src":"3133:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"pendingReqCount","nameLocation":"3158:15:9","nodeType":"VariableDeclaration","scope":1153,"src":"3151:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1151,"name":"uint64","nodeType":"ElementaryTypeName","src":"3151:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"ConsumerConfig","nameLocation":"3095:14:9","nodeType":"StructDefinition","scope":2357,"src":"3088:90:9","visibility":"public"},{"constant":false,"id":1160,"mutability":"mutable","name":"s_consumers","nameLocation":"3388:11:9","nodeType":"VariableDeclaration","scope":2357,"src":"3265:134:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))"},"typeName":{"id":1159,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3265:54:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1158,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3292:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3284:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"nodeType":"UserDefinedTypeName","pathNode":{"id":1156,"name":"ConsumerConfig","nameLocations":["3303:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":1153,"src":"3303:14:9"},"referencedDeclaration":1153,"src":"3303:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"}}}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"s_subscriptionConfigs","nameLocation":"3488:21:9","nodeType":"VariableDeclaration","scope":2357,"src":"3403:106:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)"},"typeName":{"id":1164,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3411:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3403:38:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"nodeType":"UserDefinedTypeName","pathNode":{"id":1162,"name":"SubscriptionConfig","nameLocations":["3422:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"3422:18:9"},"referencedDeclaration":1146,"src":"3422:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"}}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"s_subscriptions","nameLocation":"3586:15:9","nodeType":"VariableDeclaration","scope":2357,"src":"3513:88:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription)"},"typeName":{"id":1169,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3513:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1168,"nodeType":"UserDefinedTypeName","pathNode":{"id":1167,"name":"Subscription","nameLocations":["3532:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"3532:12:9"},"referencedDeclaration":1138,"src":"3532:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"}}},"visibility":"internal"},{"constant":false,"functionSelector":"9d40a6fd","id":1172,"mutability":"mutable","name":"s_currentSubNonce","nameLocation":"3688:17:9","nodeType":"VariableDeclaration","scope":2357,"src":"3674:31:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1171,"name":"uint64","nodeType":"ElementaryTypeName","src":"3674:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"id":1175,"mutability":"mutable","name":"s_subIds","nameLocation":"4183:8:9","nodeType":"VariableDeclaration","scope":2357,"src":"4152:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1174,"nodeType":"UserDefinedTypeName","pathNode":{"id":1173,"name":"EnumerableSet.UintSet","nameLocations":["4152:13:9","4166:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"4152:21:9"},"referencedDeclaration":854,"src":"4152:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"functionSelector":"86fe91c7","id":1177,"mutability":"mutable","name":"s_totalBalance","nameLocation":"4490:14:9","nodeType":"VariableDeclaration","scope":2357,"src":"4476:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1176,"name":"uint96","nodeType":"ElementaryTypeName","src":"4476:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"18e3dd27","id":1179,"mutability":"mutable","name":"s_totalNativeBalance","nameLocation":"4826:20:9","nodeType":"VariableDeclaration","scope":2357,"src":"4812:34:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1178,"name":"uint96","nodeType":"ElementaryTypeName","src":"4812:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"id":1181,"mutability":"mutable","name":"s_withdrawableTokens","nameLocation":"4866:20:9","nodeType":"VariableDeclaration","scope":2357,"src":"4850:36:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1180,"name":"uint96","nodeType":"ElementaryTypeName","src":"4850:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"s_withdrawableNative","nameLocation":"4906:20:9","nodeType":"VariableDeclaration","scope":2357,"src":"4890:36:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1182,"name":"uint96","nodeType":"ElementaryTypeName","src":"4890:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1d3015d7ba850fa198dc7b1a3f5d42779313a681035f77c8c03764c61005518d","id":1189,"name":"SubscriptionCreated","nameLocation":"4937:19:9","nodeType":"EventDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4973:5:9","nodeType":"VariableDeclaration","scope":1189,"src":"4957:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1187,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"4988:5:9","nodeType":"VariableDeclaration","scope":1189,"src":"4980:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4956:38:9"},"src":"4931:64:9"},{"anonymous":false,"eventSelector":"1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a","id":1197,"name":"SubscriptionFunded","nameLocation":"5004:18:9","nodeType":"EventDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5039:5:9","nodeType":"VariableDeclaration","scope":1197,"src":"5023:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"5054:10:9","nodeType":"VariableDeclaration","scope":1197,"src":"5046:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"5046:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1195,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"5074:10:9","nodeType":"VariableDeclaration","scope":1197,"src":"5066:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5066:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5022:63:9"},"src":"4998:88:9"},{"anonymous":false,"eventSelector":"7603b205d03651ee812f803fccde89f1012e545a9c99f0abfea9cedd0fd8e902","id":1205,"name":"SubscriptionFundedWithNative","nameLocation":"5095:28:9","nodeType":"EventDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5140:5:9","nodeType":"VariableDeclaration","scope":1205,"src":"5124:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1201,"indexed":false,"mutability":"mutable","name":"oldNativeBalance","nameLocation":"5155:16:9","nodeType":"VariableDeclaration","scope":1205,"src":"5147:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5147:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1203,"indexed":false,"mutability":"mutable","name":"newNativeBalance","nameLocation":"5181:16:9","nodeType":"VariableDeclaration","scope":1205,"src":"5173:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"5173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5123:75:9"},"src":"5089:110:9"},{"anonymous":false,"eventSelector":"1e980d04aa7648e205713e5e8ea3808672ac163d10936d36f91b2c88ac1575e1","id":1211,"name":"SubscriptionConsumerAdded","nameLocation":"5208:25:9","nodeType":"EventDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5250:5:9","nodeType":"VariableDeclaration","scope":1211,"src":"5234:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1209,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"5265:8:9","nodeType":"VariableDeclaration","scope":1211,"src":"5257:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"5257:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5233:41:9"},"src":"5202:73:9"},{"anonymous":false,"eventSelector":"32158c6058347c1601b2d12bc696ac6901d8a9a9aa3ba10c27ab0a983e8425a7","id":1217,"name":"SubscriptionConsumerRemoved","nameLocation":"5284:27:9","nodeType":"EventDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5328:5:9","nodeType":"VariableDeclaration","scope":1217,"src":"5312:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"5343:8:9","nodeType":"VariableDeclaration","scope":1217,"src":"5335:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5311:41:9"},"src":"5278:75:9"},{"anonymous":false,"eventSelector":"8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c4","id":1227,"name":"SubscriptionCanceled","nameLocation":"5362:20:9","nodeType":"EventDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5399:5:9","nodeType":"VariableDeclaration","scope":1227,"src":"5383:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5383:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1221,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5414:2:9","nodeType":"VariableDeclaration","scope":1227,"src":"5406:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"5406:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"indexed":false,"mutability":"mutable","name":"amountLink","nameLocation":"5426:10:9","nodeType":"VariableDeclaration","scope":1227,"src":"5418:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5418:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"indexed":false,"mutability":"mutable","name":"amountNative","nameLocation":"5446:12:9","nodeType":"VariableDeclaration","scope":1227,"src":"5438:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5382:77:9"},"src":"5356:104:9"},{"anonymous":false,"eventSelector":"21a4dad170a6bf476c31bbcf4a16628295b0e450672eec25d7c93308e05344a1","id":1235,"name":"SubscriptionOwnerTransferRequested","nameLocation":"5469:34:9","nodeType":"EventDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5520:5:9","nodeType":"VariableDeclaration","scope":1235,"src":"5504:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5504:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"5535:4:9","nodeType":"VariableDeclaration","scope":1235,"src":"5527:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"5527:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5549:2:9","nodeType":"VariableDeclaration","scope":1235,"src":"5541:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"5541:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5503:49:9"},"src":"5463:90:9"},{"anonymous":false,"eventSelector":"d4114ab6e9af9f597c52041f32d62dc57c5c4e4c0d4427006069635e216c9386","id":1243,"name":"SubscriptionOwnerTransferred","nameLocation":"5562:28:9","nodeType":"EventDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5607:5:9","nodeType":"VariableDeclaration","scope":1243,"src":"5591:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"5622:4:9","nodeType":"VariableDeclaration","scope":1243,"src":"5614:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5636:2:9","nodeType":"VariableDeclaration","scope":1243,"src":"5628:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5590:49:9"},"src":"5556:84:9"},{"canonicalName":"SubscriptionAPI.Config","id":1262,"members":[{"constant":false,"id":1245,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"5671:27:9","nodeType":"VariableDeclaration","scope":1262,"src":"5664:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1244,"name":"uint16","nodeType":"ElementaryTypeName","src":"5664:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"maxGasLimit","nameLocation":"5711:11:9","nodeType":"VariableDeclaration","scope":1262,"src":"5704:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1246,"name":"uint32","nodeType":"ElementaryTypeName","src":"5704:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"reentrancyLock","nameLocation":"5763:14:9","nodeType":"VariableDeclaration","scope":1262,"src":"5758:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"5758:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"5919:16:9","nodeType":"VariableDeclaration","scope":1262,"src":"5912:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1250,"name":"uint32","nodeType":"ElementaryTypeName","src":"5912:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"6843:26:9","nodeType":"VariableDeclaration","scope":1262,"src":"6836:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1252,"name":"uint32","nodeType":"ElementaryTypeName","src":"6836:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"fulfillmentFlatFeeNativePPM","nameLocation":"6986:27:9","nodeType":"VariableDeclaration","scope":1262,"src":"6979:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1254,"name":"uint32","nodeType":"ElementaryTypeName","src":"6979:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"fulfillmentFlatFeeLinkDiscountPPM","nameLocation":"7215:33:9","nodeType":"VariableDeclaration","scope":1262,"src":"7208:40:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1256,"name":"uint32","nodeType":"ElementaryTypeName","src":"7208:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"nativePremiumPercentage","nameLocation":"7501:23:9","nodeType":"VariableDeclaration","scope":1262,"src":"7495:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1258,"name":"uint8","nodeType":"ElementaryTypeName","src":"7495:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"linkPremiumPercentage","nameLocation":"7767:21:9","nodeType":"VariableDeclaration","scope":1262,"src":"7761:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1260,"name":"uint8","nodeType":"ElementaryTypeName","src":"7761:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Config","nameLocation":"5651:6:9","nodeType":"StructDefinition","scope":2357,"src":"5644:2149:9","visibility":"public"},{"constant":false,"functionSelector":"088070f5","id":1265,"mutability":"mutable","name":"s_config","nameLocation":"7810:8:9","nodeType":"VariableDeclaration","scope":2357,"src":"7796:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage","typeString":"struct SubscriptionAPI.Config"},"typeName":{"id":1264,"nodeType":"UserDefinedTypeName","pathNode":{"id":1263,"name":"Config","nameLocations":["7796:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"7796:6:9"},"referencedDeclaration":1262,"src":"7796:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage_ptr","typeString":"struct SubscriptionAPI.Config"}},"visibility":"public"},{"errorSelector":"ed3ba6a6","id":1267,"name":"Reentrant","nameLocation":"7829:9:9","nodeType":"ErrorDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"7838:2:9"},"src":"7823:18:9"},{"body":{"id":1273,"nodeType":"Block","src":"7868:33:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1269,"name":"_nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"7874:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7874:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"ExpressionStatement","src":"7874:15:9"},{"id":1272,"nodeType":"PlaceholderStatement","src":"7895:1:9"}]},"id":1274,"name":"nonReentrant","nameLocation":"7853:12:9","nodeType":"ModifierDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"7865:2:9"},"src":"7844:57:9","virtual":false,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"7944:72:9","statements":[{"condition":{"expression":{"id":1277,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"7954:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7963:14:9","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"7954:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1283,"nodeType":"IfStatement","src":"7950:62:9","trueBody":{"id":1282,"nodeType":"Block","src":"7979:33:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1279,"name":"Reentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7994:9:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7994:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"RevertStatement","src":"7987:18:9"}]}}]},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrant","nameLocation":"7914:13:9","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[],"src":"7927:2:9"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"7944:0:9"},"scope":2357,"src":"7905:111:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"8085:69:9","statements":[{"condition":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8095:10:9","subExpression":{"id":1290,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8096:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1296,"nodeType":"IfStatement","src":"8091:59:9","trueBody":{"id":1295,"nodeType":"Block","src":"8107:43:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1292,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8122:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"RevertStatement","src":"8115:28:9"}]}}]},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_requireSufficientBalance","nameLocation":"8029:25:9","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"condition","nameLocation":"8060:9:9","nodeType":"VariableDeclaration","scope":1298,"src":"8055:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1286,"name":"bool","nodeType":"ElementaryTypeName","src":"8055:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8054:16:9"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"8085:0:9"},"scope":2357,"src":"8020:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"8225:81:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8235:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8255:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8247:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"8247:7:9","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8235:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1313,"nodeType":"IfStatement","src":"8231:71:9","trueBody":{"id":1312,"nodeType":"Block","src":"8259:43:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1309,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"8274:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8274:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"RevertStatement","src":"8267:28:9"}]}}]},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"_requireValidSubscription","nameLocation":"8167:25:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"subOwner","nameLocation":"8201:8:9","nodeType":"VariableDeclaration","scope":1315,"src":"8193:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"8193:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8192:18:9"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"8225:0:9"},"scope":2357,"src":"8158:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1322,"nodeType":"Block","src":"8350:2:9","statements":[]},"id":1323,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8338:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8342:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8338:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1320,"kind":"baseConstructorSpecifier","modifierName":{"id":1317,"name":"ConfirmedOwner","nameLocations":["8323:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"8323:14:9"},"nodeType":"ModifierInvocation","src":"8323:26:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[],"src":"8320:2:9"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"8350:0:9"},"scope":2357,"src":"8309:43:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1359,"nodeType":"Block","src":"8657:263:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1335,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8758:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:9","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8767:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"8767:7:9","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8767:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8750:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"IfStatement","src":"8746:71:9","trueBody":{"id":1345,"nodeType":"Block","src":"8779:38:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1342,"name":"LinkAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8794:14:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8794:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"RevertStatement","src":"8787:23:9"}]}},{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1347,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8822:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1349,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"8848:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1348,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"8829:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$371_$","typeString":"type(contract LinkTokenInterface)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8829:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"src":"8822:31:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1352,"nodeType":"ExpressionStatement","src":"8822:31:9"},{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1353,"name":"LINK_NATIVE_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"8859:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1355,"name":"linkNativeFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"8900:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1354,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"8878:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$248_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"src":"8859:56:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"id":1358,"nodeType":"ExpressionStatement","src":"8859:56:9"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"8356:207:9","text":" @notice set the LINK token contract and link native feed to be\n used by this coordinator\n @param link - address of link token\n @param linkNativeFeed address of the link native feed"},"functionSelector":"65982744","id":1360,"implemented":true,"kind":"function","modifiers":[{"id":1331,"kind":"modifierInvocation","modifierName":{"id":1330,"name":"onlyOwner","nameLocations":["8647:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"8647:9:9"},"nodeType":"ModifierInvocation","src":"8647:9:9"}],"name":"setLINKAndLINKNativeFeed","nameLocation":"8575:24:9","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"link","nameLocation":"8608:4:9","nodeType":"VariableDeclaration","scope":1360,"src":"8600:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"8600:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"linkNativeFeed","nameLocation":"8622:14:9","nodeType":"VariableDeclaration","scope":1360,"src":"8614:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8599:38:9"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"8657:0:9"},"scope":2357,"src":"8566:354:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1384,"nodeType":"Block","src":"9236:153:9","statements":[{"assignments":[1369],"declarations":[{"constant":false,"id":1369,"mutability":"mutable","name":"subOwner","nameLocation":"9250:8:9","nodeType":"VariableDeclaration","scope":1384,"src":"9242:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"9242:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1374,"initialValue":{"expression":{"baseExpression":{"id":1370,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"9261:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1372,"indexExpression":{"id":1371,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9283:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9261:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9290:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"9261:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9242:53:9"},{"expression":{"arguments":[{"id":1376,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"9327:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1375,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"9301:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9301:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"9301:35:9"},{"expression":{"arguments":[{"id":1380,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9368:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1381,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"9375:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1379,"name":"_cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"9342:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9342:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"9342:42:9"}]},"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"8924:242:9","text":" @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n @param subId subscription id\n @dev notably can be called even if there are pending requests, outstanding ones may fail onchain"},"functionSelector":"aa433aff","id":1385,"implemented":true,"kind":"function","modifiers":[{"id":1366,"kind":"modifierInvocation","modifierName":{"id":1365,"name":"onlyOwner","nameLocations":["9226:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"9226:9:9"},"nodeType":"ModifierInvocation","src":"9226:9:9"}],"name":"ownerCancelSubscription","nameLocation":"9178:23:9","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"subId","nameLocation":"9210:5:9","nodeType":"VariableDeclaration","scope":1385,"src":"9202:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"9202:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9201:15:9"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"9236:0:9"},"scope":2357,"src":"9169:220:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1461,"nodeType":"Block","src":"9570:835:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1395,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"9816:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9808:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"9808:7:9","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9808:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9833:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9825:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"9825:7:9","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9825:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9808:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1406,"nodeType":"IfStatement","src":"9804:67:9","trueBody":{"id":1405,"nodeType":"Block","src":"9837:34:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1402,"name":"LinkNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"9852:10:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"RevertStatement","src":"9845:19:9"}]}},{"assignments":[1408],"declarations":[{"constant":false,"id":1408,"mutability":"mutable","name":"externalBalance","nameLocation":"9885:15:9","nodeType":"VariableDeclaration","scope":1461,"src":"9877:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[{"arguments":[{"id":1413,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9926:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2357","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2357","typeString":"contract SubscriptionAPI"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9918:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"9918:7:9","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9918:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1409,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"9903:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9908:9:9","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":303,"src":"9903:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9877:55:9"},{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"internalBalance","nameLocation":"9946:15:9","nodeType":"VariableDeclaration","scope":1461,"src":"9938:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"9938:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"arguments":[{"id":1421,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"9972:14:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9964:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"9964:7:9","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9964:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9938:49:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1424,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9997:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1425,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10015:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1433,"nodeType":"IfStatement","src":"9993:119:9","trueBody":{"id":1432,"nodeType":"Block","src":"10032:80:9","statements":[{"errorCall":{"arguments":[{"id":1428,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"10072:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1429,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10089:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1427,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"10047:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10047:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"RevertStatement","src":"10040:65:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"10121:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1435,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10139:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10121:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1460,"nodeType":"IfStatement","src":"10117:230:9","trueBody":{"id":1459,"nodeType":"Block","src":"10156:191:9","statements":[{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"amount","nameLocation":"10172:6:9","nodeType":"VariableDeclaration","scope":1459,"src":"10164:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10164:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10181:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1440,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"10199:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10181:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10164:50:9"},{"condition":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10226:26:9","subExpression":{"arguments":[{"id":1445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"10241:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10245:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1443,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"10227:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10232:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":348,"src":"10227:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10227:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"nodeType":"IfStatement","src":"10222:80:9","trueBody":{"id":1452,"nodeType":"Block","src":"10254:48:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1449,"name":"FailedToTransferLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"10271:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10271:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"RevertStatement","src":"10264:29:9"}]}},{"eventCall":{"arguments":[{"id":1455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"10329:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10333:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"FundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10314:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10314:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"EmitStatement","src":"10309:31:9"}]}}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"9393:121:9","text":" @notice Recover link sent with transfer instead of transferAndCall.\n @param to address to send link to"},"functionSelector":"e72f6e30","id":1462,"implemented":true,"kind":"function","modifiers":[{"id":1391,"kind":"modifierInvocation","modifierName":{"id":1390,"name":"onlyOwner","nameLocations":["9560:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"9560:9:9"},"nodeType":"ModifierInvocation","src":"9560:9:9"}],"name":"recoverFunds","nameLocation":"9526:12:9","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"to","nameLocation":"9547:2:9","nodeType":"VariableDeclaration","scope":1462,"src":"9539:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"9539:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9538:12:9"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"9570:0:9"},"scope":2357,"src":"9517:888:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1527,"nodeType":"Block","src":"10615:565:9","statements":[{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"externalBalance","nameLocation":"10629:15:9","nodeType":"VariableDeclaration","scope":1527,"src":"10621:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"10621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1477,"initialValue":{"expression":{"arguments":[{"id":1474,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10655:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2357","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2357","typeString":"contract SubscriptionAPI"}],"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:9","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10661:7:9","memberName":"balance","nodeType":"MemberAccess","src":"10647:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10621:47:9"},{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"internalBalance","nameLocation":"10682:15:9","nodeType":"VariableDeclaration","scope":1527,"src":"10674:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"10674:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1484,"initialValue":{"arguments":[{"id":1482,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"10708:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10700:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10700:7:9","typeDescriptions":{}}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10674:55:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1485,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10739:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1486,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"10757:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10739:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1494,"nodeType":"IfStatement","src":"10735:119:9","trueBody":{"id":1493,"nodeType":"Block","src":"10774:80:9","statements":[{"errorCall":{"arguments":[{"id":1489,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10814:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1490,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"10831:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"10789:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"RevertStatement","src":"10782:65:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10863:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1496,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"10881:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10863:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"10859:263:9","trueBody":{"id":1525,"nodeType":"Block","src":"10898:224:9","statements":[{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"amount","nameLocation":"10914:6:9","nodeType":"VariableDeclaration","scope":1525,"src":"10906:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"10906:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"10923:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1501,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10941:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10923:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10906:50:9"},{"assignments":[1505,null],"declarations":[{"constant":false,"id":1505,"mutability":"mutable","name":"sent","nameLocation":"10970:4:9","nodeType":"VariableDeclaration","scope":1525,"src":"10965:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"10965:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1512,"initialValue":{"arguments":[{"hexValue":"","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11003:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"10980:2:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10983:4:9","memberName":"call","nodeType":"MemberAccess","src":"10980:7:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1508,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"10995:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10980:22:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10980:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10964:42:9"},{"condition":{"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11018:5:9","subExpression":{"id":1513,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"11019:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1519,"nodeType":"IfStatement","src":"11014:57:9","trueBody":{"id":1518,"nodeType":"Block","src":"11025:46:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1515,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"11042:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"RevertStatement","src":"11035:27:9"}]}},{"eventCall":{"arguments":[{"id":1521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"11104:2:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"11108:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"NativeFundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"11083:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11083:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"EmitStatement","src":"11078:37:9"}]}}]},"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"10409:136:9","text":" @notice Recover native sent with transfer/call/send instead of fundSubscription.\n @param to address to send native to"},"functionSelector":"8402595e","id":1528,"implemented":true,"kind":"function","modifiers":[{"id":1468,"kind":"modifierInvocation","modifierName":{"id":1467,"name":"onlyOwner","nameLocations":["10605:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"10605:9:9"},"nodeType":"ModifierInvocation","src":"10605:9:9"}],"name":"recoverNativeFunds","nameLocation":"10557:18:9","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"to","nameLocation":"10592:2:9","nodeType":"VariableDeclaration","scope":1528,"src":"10576:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"10576:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"10575:20:9"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"10615:0:9"},"scope":2357,"src":"10548:632:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1577,"nodeType":"Block","src":"11410:287:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1539,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11428:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"11420:7:9","typeDescriptions":{}}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11437:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"11437:7:9","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11420:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"11416:67:9","trueBody":{"id":1549,"nodeType":"Block","src":"11449:34:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1546,"name":"LinkNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"11464:10:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11464:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"RevertStatement","src":"11457:19:9"}]}},{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"amount","nameLocation":"11495:6:9","nodeType":"VariableDeclaration","scope":1577,"src":"11488:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1551,"name":"uint96","nodeType":"ElementaryTypeName","src":"11488:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1554,"initialValue":{"id":1553,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"11504:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"11488:36:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"11556:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11565:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11556:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1555,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"11530:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11530:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"11530:37:9"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"11573:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11573:24:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1564,"nodeType":"ExpressionStatement","src":"11573:24:9"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1565,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"11603:14:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"11621:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11603:24:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1568,"nodeType":"ExpressionStatement","src":"11603:24:9"},{"expression":{"arguments":[{"arguments":[{"id":1572,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"11673:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"11684:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"id":1570,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11659:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11664:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":348,"src":"11659:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11659:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1569,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"11633:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11633:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"11633:59:9"}]},"functionSelector":"51cff8d9","id":1578,"implemented":true,"kind":"function","modifiers":[{"id":1533,"kind":"modifierInvocation","modifierName":{"id":1532,"name":"nonReentrant","nameLocations":["11387:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"11387:12:9"},"nodeType":"ModifierInvocation","src":"11387:12:9"},{"id":1535,"kind":"modifierInvocation","modifierName":{"id":1534,"name":"onlyOwner","nameLocations":["11400:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"11400:9:9"},"nodeType":"ModifierInvocation","src":"11400:9:9"}],"name":"withdraw","nameLocation":"11350:8:9","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"recipient","nameLocation":"11367:9:9","nodeType":"VariableDeclaration","scope":1578,"src":"11359:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11358:19:9"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"11410:0:9"},"scope":2357,"src":"11341:356:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1610,"nodeType":"Block","src":"11943:258:9","statements":[{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"amount","nameLocation":"11956:6:9","nodeType":"VariableDeclaration","scope":1610,"src":"11949:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1587,"name":"uint96","nodeType":"ElementaryTypeName","src":"11949:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1590,"initialValue":{"id":1589,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"11965:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"11949:36:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"12017:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12026:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12017:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1591,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"11991:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11991:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"ExpressionStatement","src":"11991:37:9"},{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"12096:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12119:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12096:24:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1600,"nodeType":"ExpressionStatement","src":"12096:24:9"},{"expression":{"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1601,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"12126:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1602,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"12150:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12126:30:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1604,"nodeType":"ExpressionStatement","src":"12126:30:9"},{"expression":{"arguments":[{"id":1606,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"12178:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1607,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"12189:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1605,"name":"_mustSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"12162:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12162:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"12162:34:9"}]},"functionSelector":"2f622e6b","id":1611,"implemented":true,"kind":"function","modifiers":[{"id":1583,"kind":"modifierInvocation","modifierName":{"id":1582,"name":"nonReentrant","nameLocations":["11920:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"11920:12:9"},"nodeType":"ModifierInvocation","src":"11920:12:9"},{"id":1585,"kind":"modifierInvocation","modifierName":{"id":1584,"name":"onlyOwner","nameLocations":["11933:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"11933:9:9"},"nodeType":"ModifierInvocation","src":"11933:9:9"}],"name":"withdrawNative","nameLocation":"11869:14:9","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"recipient","nameLocation":"11900:9:9","nodeType":"VariableDeclaration","scope":1611,"src":"11884:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"11884:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11883:27:9"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"11943:0:9"},"scope":2357,"src":"11860:341:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[259],"body":{"id":1693,"nodeType":"Block","src":"12320:593:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12330:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12334:6:9","memberName":"sender","nodeType":"MemberAccess","src":"12330:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1627,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12352:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12344:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"12344:7:9","typeDescriptions":{}}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12344:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12330:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"12326:77:9","trueBody":{"id":1633,"nodeType":"Block","src":"12359:44:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1630,"name":"OnlyCallableFromLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"12374:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"RevertStatement","src":"12367:29:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1635,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"12412:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12417:6:9","memberName":"length","nodeType":"MemberAccess","src":"12412:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3332","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12427:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12412:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1643,"nodeType":"IfStatement","src":"12408:62:9","trueBody":{"id":1642,"nodeType":"Block","src":"12431:39:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1639,"name":"InvalidCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"12446:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12446:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"RevertStatement","src":"12439:24:9"}]}},{"assignments":[1645],"declarations":[{"constant":false,"id":1645,"mutability":"mutable","name":"subId","nameLocation":"12483:5:9","nodeType":"VariableDeclaration","scope":1693,"src":"12475:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"12475:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1653,"initialValue":{"arguments":[{"id":1648,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"12502:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12509:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"12509:7:9","typeDescriptions":{}}}],"id":1651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12508:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":1646,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12491:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12495:6:9","memberName":"decode","nodeType":"MemberAccess","src":"12491:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12491:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12475:43:9"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1655,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"12550:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1657,"indexExpression":{"id":1656,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"12572:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12550:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12579:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"12550:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1654,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"12524:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12524:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"12524:61:9"},{"assignments":[1662],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"oldBalance","nameLocation":"12704:10:9","nodeType":"VariableDeclaration","scope":1693,"src":"12696:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"12696:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"expression":{"baseExpression":{"id":1663,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"12717:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1665,"indexExpression":{"id":1664,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"12733:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12717:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12740:7:9","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"12717:30:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"12696:51:9"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1668,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"12753:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1670,"indexExpression":{"id":1669,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"12769:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12753:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12776:7:9","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"12753:30:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12794:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12787:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1672,"name":"uint96","nodeType":"ElementaryTypeName","src":"12787:6:9","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12787:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12753:48:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1677,"nodeType":"ExpressionStatement","src":"12753:48:9"},{"expression":{"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1678,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"12807:14:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12832:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12825:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1679,"name":"uint96","nodeType":"ElementaryTypeName","src":"12825:6:9","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12825:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12807:32:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1684,"nodeType":"ExpressionStatement","src":"12807:32:9"},{"eventCall":{"arguments":[{"id":1686,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"12869:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1687,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"12876:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"12888:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12901:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12888:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1685,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12850:18:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"EmitStatement","src":"12845:63:9"}]},"functionSelector":"a4c0ed36","id":1694,"implemented":true,"kind":"function","modifiers":[{"id":1621,"kind":"modifierInvocation","modifierName":{"id":1620,"name":"nonReentrant","nameLocations":["12307:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"12307:12:9"},"nodeType":"ModifierInvocation","src":"12307:12:9"}],"name":"onTokenTransfer","nameLocation":"12214:15:9","nodeType":"FunctionDefinition","overrides":{"id":1619,"nodeType":"OverrideSpecifier","overrides":[],"src":"12298:8:9"},"parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"12230:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"12230:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1615,"mutability":"mutable","name":"amount","nameLocation":"12260:6:9","nodeType":"VariableDeclaration","scope":1694,"src":"12252:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"12252:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"data","nameLocation":"12283:4:9","nodeType":"VariableDeclaration","scope":1694,"src":"12268:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1616,"name":"bytes","nodeType":"ElementaryTypeName","src":"12268:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12229:59:9"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[],"src":"12320:0:9"},"scope":2357,"src":"12205:708:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2640],"body":{"id":1745,"nodeType":"Block","src":"13059:585:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1704,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"13091:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1706,"indexExpression":{"id":1705,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"13113:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13091:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13120:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"13091:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1703,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"13065:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"13065:61:9"},{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"oldNativeBalance","nameLocation":"13380:16:9","nodeType":"VariableDeclaration","scope":1745,"src":"13372:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"13372:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1716,"initialValue":{"expression":{"baseExpression":{"id":1712,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13399:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1714,"indexExpression":{"id":1713,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"13415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13399:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13422:13:9","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"13399:36:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"13372:63:9"},{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1717,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13441:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1719,"indexExpression":{"id":1718,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"13457:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13441:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13464:13:9","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"13441:36:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13488:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13492:5:9","memberName":"value","nodeType":"MemberAccess","src":"13488:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13481:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1721,"name":"uint96","nodeType":"ElementaryTypeName","src":"13481:6:9","typeDescriptions":{}}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13481:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13441:57:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1727,"nodeType":"ExpressionStatement","src":"13441:57:9"},{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"13504:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13535:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13539:5:9","memberName":"value","nodeType":"MemberAccess","src":"13535:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13528:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1729,"name":"uint96","nodeType":"ElementaryTypeName","src":"13528:6:9","typeDescriptions":{}}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13528:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13504:41:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1735,"nodeType":"ExpressionStatement","src":"13504:41:9"},{"eventCall":{"arguments":[{"id":1737,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"13585:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1738,"name":"oldNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"13592:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"oldNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"13610:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13629:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13633:5:9","memberName":"value","nodeType":"MemberAccess","src":"13629:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13610:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"SubscriptionFundedWithNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"13556:28:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13556:83:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"EmitStatement","src":"13551:88:9"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"12917:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"95b55cfc","id":1746,"implemented":true,"kind":"function","modifiers":[{"id":1701,"kind":"modifierInvocation","modifierName":{"id":1700,"name":"nonReentrant","nameLocations":["13046:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"13046:12:9"},"nodeType":"ModifierInvocation","src":"13046:12:9"}],"name":"fundSubscriptionWithNative","nameLocation":"12978:26:9","nodeType":"FunctionDefinition","overrides":{"id":1699,"nodeType":"OverrideSpecifier","overrides":[],"src":"13037:8:9"},"parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"subId","nameLocation":"13013:5:9","nodeType":"VariableDeclaration","scope":1746,"src":"13005:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"13005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13004:15:9"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"13059:0:9"},"scope":2357,"src":"12969:675:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2616],"body":{"id":1794,"nodeType":"Block","src":"13897:299:9","statements":[{"expression":{"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13903:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1765,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"13914:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1767,"indexExpression":{"id":1766,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"13936:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13914:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13943:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"13914:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13903:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1770,"nodeType":"ExpressionStatement","src":"13903:45:9"},{"expression":{"arguments":[{"id":1772,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13980:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1771,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"13954:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13954:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"13954:35:9"},{"expression":{"components":[{"expression":{"baseExpression":{"id":1775,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"14010:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1777,"indexExpression":{"id":1776,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14026:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14010:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14033:7:9","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"14010:30:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":1779,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"14048:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1781,"indexExpression":{"id":1780,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14064:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14048:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14071:13:9","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"14048:36:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":1783,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"14092:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1785,"indexExpression":{"id":1784,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14108:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14092:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14115:8:9","memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":1137,"src":"14092:31:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1787,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"14131:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1788,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"14147:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1790,"indexExpression":{"id":1789,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14169:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14147:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14176:9:9","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"14147:38:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":1792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14002:189:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$_t_uint64_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,uint96,uint64,address,address[] storage ref)"}},"functionReturnParameters":1763,"id":1793,"nodeType":"Return","src":"13995:196:9"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"13648:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"dc311dd3","id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"13709:15:9","nodeType":"FunctionDefinition","overrides":{"id":1751,"nodeType":"OverrideSpecifier","overrides":[],"src":"13772:8:9"},"parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"subId","nameLocation":"13738:5:9","nodeType":"VariableDeclaration","scope":1795,"src":"13730:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"13730:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13724:23:9"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"balance","nameLocation":"13801:7:9","nodeType":"VariableDeclaration","scope":1795,"src":"13794:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1752,"name":"uint96","nodeType":"ElementaryTypeName","src":"13794:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"nativeBalance","nameLocation":"13817:13:9","nodeType":"VariableDeclaration","scope":1795,"src":"13810:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1754,"name":"uint96","nodeType":"ElementaryTypeName","src":"13810:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"reqCount","nameLocation":"13839:8:9","nodeType":"VariableDeclaration","scope":1795,"src":"13832:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1756,"name":"uint64","nodeType":"ElementaryTypeName","src":"13832:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"subOwner","nameLocation":"13857:8:9","nodeType":"VariableDeclaration","scope":1795,"src":"13849:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"13849:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"consumers","nameLocation":"13884:9:9","nodeType":"VariableDeclaration","scope":1795,"src":"13867:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"13867:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1761,"nodeType":"ArrayTypeName","src":"13867:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13793:101:9"},"scope":2357,"src":"13700:496:9","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2634],"body":{"id":1878,"nodeType":"Block","src":"14390:427:9","statements":[{"assignments":[1808],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"numSubs","nameLocation":"14404:7:9","nodeType":"VariableDeclaration","scope":1878,"src":"14396:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"14396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1812,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1809,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"14414:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14423:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":932,"src":"14414:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$854_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14414:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14396:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14441:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1814,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"14455:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14441:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1819,"nodeType":"IfStatement","src":"14437:51:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1816,"name":"IndexOutOfRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"14471:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14471:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"RevertStatement","src":"14464:24:9"}},{"assignments":[1821],"declarations":[{"constant":false,"id":1821,"mutability":"mutable","name":"endIndex","nameLocation":"14502:8:9","nodeType":"VariableDeclaration","scope":1878,"src":"14494:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1825,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14513:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1823,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"14526:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14513:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14494:40:9"},{"expression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1826,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"14540:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"14551:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1828,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"14562:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14551:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"14573:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14573:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14551:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1835,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"14599:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14551:56:9","trueExpression":{"id":1834,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"14589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14540:67:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"14540:67:9"},{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"idsLength","nameLocation":"14621:9:9","nodeType":"VariableDeclaration","scope":1878,"src":"14613:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"14613:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1844,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"14633:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1842,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14644:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14633:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14613:41:9"},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1845,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14660:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1849,"name":"idsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"14680:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14666:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"14670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ArrayTypeName","src":"14670:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14666:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"14660:30:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1852,"nodeType":"ExpressionStatement","src":"14660:30:9"},{"body":{"id":1874,"nodeType":"Block","src":"14742:55:9","statements":[{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1863,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14750:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1865,"indexExpression":{"id":1864,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14754:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14750:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14773:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1869,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14779:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14773:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1866,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"14761:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14770:2:9","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":953,"src":"14761:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$854_storage_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14761:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14750:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1873,"nodeType":"ExpressionStatement","src":"14750:40:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14718:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1858,"name":"idsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"14724:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14718:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1875,"initializationExpression":{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"idx","nameLocation":"14709:3:9","nodeType":"VariableDeclaration","scope":1875,"src":"14701:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"14701:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1856,"initialValue":{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14715:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14701:15:9"},"loopExpression":{"expression":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14735:5:9","subExpression":{"id":1860,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14737:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1862,"nodeType":"ExpressionStatement","src":"14735:5:9"},"nodeType":"ForStatement","src":"14696:101:9"},{"expression":{"id":1876,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14809:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1806,"id":1877,"nodeType":"Return","src":"14802:10:9"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"14200:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"aefb212f","id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"14261:24:9","nodeType":"FunctionDefinition","overrides":{"id":1802,"nodeType":"OverrideSpecifier","overrides":[],"src":"14350:8:9"},"parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"startIndex","nameLocation":"14299:10:9","nodeType":"VariableDeclaration","scope":1879,"src":"14291:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"14291:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"maxCount","nameLocation":"14323:8:9","nodeType":"VariableDeclaration","scope":1879,"src":"14315:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"14315:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14285:50:9"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"ids","nameLocation":"14385:3:9","nodeType":"VariableDeclaration","scope":1879,"src":"14368:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"14368:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ArrayTypeName","src":"14368:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14367:22:9"},"scope":2357,"src":"14252:565:9","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2599],"body":{"id":1971,"nodeType":"Block","src":"14958:852:9","statements":[{"assignments":[1889],"declarations":[{"constant":false,"id":1889,"mutability":"mutable","name":"currentSubNonce","nameLocation":"15030:15:9","nodeType":"VariableDeclaration","scope":1971,"src":"15023:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1888,"name":"uint64","nodeType":"ElementaryTypeName","src":"15023:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1891,"initialValue":{"id":1890,"name":"s_currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"15048:17:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"15023:42:9"},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1892,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"15071:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1898,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15121:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15125:6:9","memberName":"sender","nodeType":"MemberAccess","src":"15121:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1901,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15143:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15149:6:9","memberName":"number","nodeType":"MemberAccess","src":"15143:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15158:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15143:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"15133:9:9","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1908,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15170:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2357","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2357","typeString":"contract SubscriptionAPI"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15162:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"15162:7:9","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15162:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1910,"name":"currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"15177:15:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":1896,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15104:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15108:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"15104:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15104:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1895,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15094:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:100:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15079:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"15079:7:9","typeDescriptions":{}}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15079:121:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15071:129:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"15071:129:9"},{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1916,"name":"s_currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"15255:17:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1917,"name":"currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"15275:15:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15275:19:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"15255:39:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1921,"nodeType":"ExpressionStatement","src":"15255:39:9"},{"assignments":[1926],"declarations":[{"constant":false,"id":1926,"mutability":"mutable","name":"consumers","nameLocation":"15354:9:9","nodeType":"VariableDeclaration","scope":1971,"src":"15337:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"15337:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1925,"nodeType":"ArrayTypeName","src":"15337:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1932,"initialValue":{"arguments":[{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15380:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15366:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"15370:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1928,"nodeType":"ArrayTypeName","src":"15370:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15366:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15337:45:9"},{"expression":{"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1933,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"15388:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1935,"indexExpression":{"id":1934,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"15404:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15388:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15436:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15454:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15467:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1936,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"15413:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$1138_storage_ptr_$","typeString":"type(struct SubscriptionAPI.Subscription storage pointer)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15427:7:9","15439:13:9","15457:8:9"],"names":["balance","nativeBalance","reqCount"],"nodeType":"FunctionCall","src":"15413:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_memory_ptr","typeString":"struct SubscriptionAPI.Subscription memory"}},"src":"15388:82:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1942,"nodeType":"ExpressionStatement","src":"15388:82:9"},{"expression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1943,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15476:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1945,"indexExpression":{"id":1944,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"15498:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15476:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1947,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15541:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15545:6:9","memberName":"sender","nodeType":"MemberAccess","src":"15541:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15583:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15575:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"15575:7:9","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"15604:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1946,"name":"SubscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"15507:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SubscriptionConfig_$1146_storage_ptr_$","typeString":"type(struct SubscriptionAPI.SubscriptionConfig storage pointer)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15534:5:9","15559:14:9","15593:9:9"],"names":["owner","requestedOwner","consumers"],"nodeType":"FunctionCall","src":"15507:113:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_memory_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig memory"}},"src":"15476:144:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1956,"nodeType":"ExpressionStatement","src":"15476:144:9"},{"expression":{"arguments":[{"id":1960,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"15731:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1957,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"15718:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15727:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":875,"src":"15718:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$854_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15718:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1962,"nodeType":"ExpressionStatement","src":"15718:19:9"},{"eventCall":{"arguments":[{"id":1964,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"15769:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15776:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15780:6:9","memberName":"sender","nodeType":"MemberAccess","src":"15776:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1963,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"15749:19:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15749:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"EmitStatement","src":"15744:43:9"},{"expression":{"id":1969,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"15800:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1887,"id":1970,"nodeType":"Return","src":"15793:12:9"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"14821:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"a21a23e4","id":1972,"implemented":true,"kind":"function","modifiers":[{"id":1884,"kind":"modifierInvocation","modifierName":{"id":1883,"name":"nonReentrant","nameLocations":["14921:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"14921:12:9"},"nodeType":"ModifierInvocation","src":"14921:12:9"}],"name":"createSubscription","nameLocation":"14882:18:9","nodeType":"FunctionDefinition","overrides":{"id":1882,"nodeType":"OverrideSpecifier","overrides":[],"src":"14912:8:9"},"parameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"14900:2:9"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"subId","nameLocation":"14951:5:9","nodeType":"VariableDeclaration","scope":1972,"src":"14943:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"14943:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14942:15:9"},"scope":2357,"src":"14873:937:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2593],"body":{"id":2012,"nodeType":"Block","src":"16004:358:9","statements":[{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"subscriptionConfig","nameLocation":"16117:18:9","nodeType":"VariableDeclaration","scope":2012,"src":"16090:45:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"},"typeName":{"id":1987,"nodeType":"UserDefinedTypeName","pathNode":{"id":1986,"name":"SubscriptionConfig","nameLocations":["16090:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"16090:18:9"},"referencedDeclaration":1146,"src":"16090:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"}},"visibility":"internal"}],"id":1992,"initialValue":{"baseExpression":{"id":1989,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"16138:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1991,"indexExpression":{"id":1990,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"16160:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16138:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16090:76:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1993,"name":"subscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"16176:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig storage pointer"}},"id":1994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16195:14:9","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1142,"src":"16176:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1995,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"16213:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16176:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2011,"nodeType":"IfStatement","src":"16172:186:9","trueBody":{"id":2010,"nodeType":"Block","src":"16223:135:9","statements":[{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1997,"name":"subscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"16231:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig storage pointer"}},"id":1999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16250:14:9","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1142,"src":"16231:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2000,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"16267:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16231:44:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2002,"nodeType":"ExpressionStatement","src":"16231:44:9"},{"eventCall":{"arguments":[{"id":2004,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"16323:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16330:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16334:6:9","memberName":"sender","nodeType":"MemberAccess","src":"16330:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2007,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"16342:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"SubscriptionOwnerTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"16288:34:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16288:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"EmitStatement","src":"16283:68:9"}]}}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"15814:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"dac83d29","id":2013,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1981,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"15984:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1982,"kind":"modifierInvocation","modifierName":{"id":1980,"name":"onlySubOwner","nameLocations":["15971:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2305,"src":"15971:12:9"},"nodeType":"ModifierInvocation","src":"15971:19:9"},{"id":1984,"kind":"modifierInvocation","modifierName":{"id":1983,"name":"nonReentrant","nameLocations":["15991:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"15991:12:9"},"nodeType":"ModifierInvocation","src":"15991:12:9"}],"name":"requestSubscriptionOwnerTransfer","nameLocation":"15875:32:9","nodeType":"FunctionDefinition","overrides":{"id":1979,"nodeType":"OverrideSpecifier","overrides":[],"src":"15962:8:9"},"parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"subId","nameLocation":"15921:5:9","nodeType":"VariableDeclaration","scope":2013,"src":"15913:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"15913:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"newOwner","nameLocation":"15940:8:9","nodeType":"VariableDeclaration","scope":2013,"src":"15932:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"15932:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15907:45:9"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"16004:0:9"},"scope":2357,"src":"15866:496:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2585],"body":{"id":2074,"nodeType":"Block","src":"16505:443:9","statements":[{"assignments":[2023],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"oldOwner","nameLocation":"16519:8:9","nodeType":"VariableDeclaration","scope":2074,"src":"16511:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"16511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2028,"initialValue":{"expression":{"baseExpression":{"id":2024,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"16530:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2026,"indexExpression":{"id":2025,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"16552:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16530:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16559:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"16530:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16511:53:9"},{"expression":{"arguments":[{"id":2030,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16596:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2029,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"16570:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16570:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2032,"nodeType":"ExpressionStatement","src":"16570:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2033,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"16615:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2035,"indexExpression":{"id":2034,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"16637:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16615:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16644:14:9","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1142,"src":"16615:43:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16662:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16666:6:9","memberName":"sender","nodeType":"MemberAccess","src":"16662:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16615:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"nodeType":"IfStatement","src":"16611:150:9","trueBody":{"id":2047,"nodeType":"Block","src":"16674:87:9","statements":[{"errorCall":{"arguments":[{"expression":{"baseExpression":{"id":2041,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"16710:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2043,"indexExpression":{"id":2042,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"16732:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16710:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16739:14:9","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1142,"src":"16710:43:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2040,"name":"MustBeRequestedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"16689:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"RevertStatement","src":"16682:72:9"}]}},{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2049,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"16766:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2051,"indexExpression":{"id":2050,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"16788:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16766:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16795:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"16766:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16803:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:9","memberName":"sender","nodeType":"MemberAccess","src":"16803:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16766:47:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2056,"nodeType":"ExpressionStatement","src":"16766:47:9"},{"expression":{"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2057,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"16819:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2059,"indexExpression":{"id":2058,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"16841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16819:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16848:14:9","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1142,"src":"16819:43:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16873:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16865:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"16865:7:9","typeDescriptions":{}}},"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16865:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16819:56:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2066,"nodeType":"ExpressionStatement","src":"16819:56:9"},{"eventCall":{"arguments":[{"id":2068,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"16915:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2069,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16922:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16932:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16936:6:9","memberName":"sender","nodeType":"MemberAccess","src":"16932:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2067,"name":"SubscriptionOwnerTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"16886:28:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16886:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2073,"nodeType":"EmitStatement","src":"16881:62:9"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"16366:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"b2a7cac5","id":2075,"implemented":true,"kind":"function","modifiers":[{"id":2020,"kind":"modifierInvocation","modifierName":{"id":2019,"name":"nonReentrant","nameLocations":["16492:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"16492:12:9"},"nodeType":"ModifierInvocation","src":"16492:12:9"}],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"16427:31:9","nodeType":"FunctionDefinition","overrides":{"id":2018,"nodeType":"OverrideSpecifier","overrides":[],"src":"16483:8:9"},"parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"subId","nameLocation":"16467:5:9","nodeType":"VariableDeclaration","scope":2075,"src":"16459:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"16459:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16458:15:9"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"16505:0:9"},"scope":2357,"src":"16418:530:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2563],"body":{"id":2139,"nodeType":"Block","src":"17109:807:9","statements":[{"assignments":[2091],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"consumerConfig","nameLocation":"17138:14:9","nodeType":"VariableDeclaration","scope":2139,"src":"17115:37:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"},"typeName":{"id":2090,"nodeType":"UserDefinedTypeName","pathNode":{"id":2089,"name":"ConsumerConfig","nameLocations":["17115:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":1153,"src":"17115:14:9"},"referencedDeclaration":1153,"src":"17115:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"}},"visibility":"internal"}],"id":2097,"initialValue":{"baseExpression":{"baseExpression":{"id":2092,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"17155:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2094,"indexExpression":{"id":2093,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"17167:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17155:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2096,"indexExpression":{"id":2095,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"17177:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17155:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17115:68:9"},{"condition":{"expression":{"id":2098,"name":"consumerConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"17193:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig storage pointer"}},"id":2099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17208:6:9","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1148,"src":"17193:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"17189:165:9","trueBody":{"id":2101,"nodeType":"Block","src":"17216:138:9","statements":[{"functionReturnParameters":2088,"id":2100,"nodeType":"Return","src":"17341:7:9"}]}},{"assignments":[2107],"declarations":[{"constant":false,"id":2107,"mutability":"mutable","name":"consumers","nameLocation":"17430:9:9","nodeType":"VariableDeclaration","scope":2139,"src":"17412:27:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"17412:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2106,"nodeType":"ArrayTypeName","src":"17412:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2112,"initialValue":{"expression":{"baseExpression":{"id":2108,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"17442:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2110,"indexExpression":{"id":2109,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"17464:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17442:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17471:9:9","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"17442:38:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17412:68:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2113,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"17490:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17500:6:9","memberName":"length","nodeType":"MemberAccess","src":"17490:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2115,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"17510:13:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"17490:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2121,"nodeType":"IfStatement","src":"17486:79:9","trueBody":{"id":2120,"nodeType":"Block","src":"17525:40:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2117,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"17540:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17540:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2119,"nodeType":"RevertStatement","src":"17533:25:9"}]}},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2122,"name":"consumerConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"17799:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig storage pointer"}},"id":2124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17814:6:9","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1148,"src":"17799:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17823:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"17799:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"ExpressionStatement","src":"17799:28:9"},{"expression":{"arguments":[{"id":2131,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"17848:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2128,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"17833:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17843:4:9","memberName":"push","nodeType":"MemberAccess","src":"17833:14:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17833:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"ExpressionStatement","src":"17833:24:9"},{"eventCall":{"arguments":[{"id":2135,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"17895:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2136,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"17902:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2134,"name":"SubscriptionConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"17869:25:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17869:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"EmitStatement","src":"17864:47:9"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"16952:49:9","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"bec4c08c","id":2140,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2084,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"17089:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2085,"kind":"modifierInvocation","modifierName":{"id":2083,"name":"onlySubOwner","nameLocations":["17076:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2305,"src":"17076:12:9"},"nodeType":"ModifierInvocation","src":"17076:19:9"},{"id":2087,"kind":"modifierInvocation","modifierName":{"id":2086,"name":"nonReentrant","nameLocations":["17096:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"17096:12:9"},"nodeType":"ModifierInvocation","src":"17096:12:9"}],"name":"addConsumer","nameLocation":"17013:11:9","nodeType":"FunctionDefinition","overrides":{"id":2082,"nodeType":"OverrideSpecifier","overrides":[],"src":"17067:8:9"},"parameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"subId","nameLocation":"17033:5:9","nodeType":"VariableDeclaration","scope":2140,"src":"17025:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"17025:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"consumer","nameLocation":"17048:8:9","nodeType":"VariableDeclaration","scope":2140,"src":"17040:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"17040:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17024:33:9"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"17109:0:9"},"scope":2357,"src":"17004:912:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2237,"nodeType":"Block","src":"18020:697:9","statements":[{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"consumers","nameLocation":"18044:9:9","nodeType":"VariableDeclaration","scope":2237,"src":"18026:27:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2152,"nodeType":"ArrayTypeName","src":"18026:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2158,"initialValue":{"expression":{"baseExpression":{"id":2154,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"18056:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2156,"indexExpression":{"id":2155,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18078:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18056:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18085:9:9","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"18056:38:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18026:68:9"},{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2159,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"18100:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2160,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"18110:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2162,"indexExpression":{"id":2161,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18126:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18110:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":2163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18133:7:9","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"18110:30:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18100:40:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2165,"nodeType":"ExpressionStatement","src":"18100:40:9"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2166,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"18146:13:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2167,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"18162:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2169,"indexExpression":{"id":2168,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18178:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18162:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18185:13:9","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"18162:36:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18146:52:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2172,"nodeType":"ExpressionStatement","src":"18146:52:9"},{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"consumersLength","nameLocation":"18288:15:9","nodeType":"VariableDeclaration","scope":2237,"src":"18280:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"18280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2177,"initialValue":{"expression":{"id":2175,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"18306:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18316:6:9","memberName":"length","nodeType":"MemberAccess","src":"18306:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18280:42:9"},{"body":{"id":2197,"nodeType":"Block","src":"18374:54:9","statements":[{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18382:39:9","subExpression":{"baseExpression":{"baseExpression":{"id":2188,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"18389:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2192,"indexExpression":{"baseExpression":{"id":2189,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"18401:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2191,"indexExpression":{"id":2190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"18411:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18401:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18389:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2194,"indexExpression":{"id":2193,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18389:32:9","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"18382:39:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"18348:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2183,"name":"consumersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"18352:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18348:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"initializationExpression":{"assignments":[2179],"declarations":[{"constant":false,"id":2179,"mutability":"mutable","name":"i","nameLocation":"18341:1:9","nodeType":"VariableDeclaration","scope":2198,"src":"18333:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"18333:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2181,"initialValue":{"hexValue":"30","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18345:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18333:13:9"},"loopExpression":{"expression":{"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18369:3:9","subExpression":{"id":2185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"18371:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2187,"nodeType":"ExpressionStatement","src":"18369:3:9"},"nodeType":"ForStatement","src":"18328:100:9"},{"expression":{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18433:35:9","subExpression":{"baseExpression":{"id":2199,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"18440:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2201,"indexExpression":{"id":2200,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18462:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18440:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"18433:35:9"},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18474:29:9","subExpression":{"baseExpression":{"id":2204,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"18481:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2206,"indexExpression":{"id":2205,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18497:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18481:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"18474:29:9"},{"expression":{"arguments":[{"id":2212,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18525:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2209,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"18509:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":2211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18518:6:9","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":896,"src":"18509:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$854_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18509:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"ExpressionStatement","src":"18509:22:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"18541:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18552:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18541:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"18537:58:9","trueBody":{"id":2222,"nodeType":"Block","src":"18555:40:9","statements":[{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"18563:14:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2219,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"18581:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18563:25:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2221,"nodeType":"ExpressionStatement","src":"18563:25:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"18604:13:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18621:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18604:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"18600:76:9","trueBody":{"id":2231,"nodeType":"Block","src":"18624:52:9","statements":[{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2227,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"18632:20:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2228,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"18656:13:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18632:37:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2230,"nodeType":"ExpressionStatement","src":"18632:37:9"}]}},{"expression":{"components":[{"id":2233,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"18689:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2234,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"18698:13:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18688:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"functionReturnParameters":2148,"id":2236,"nodeType":"Return","src":"18681:31:9"}]},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteSubscription","nameLocation":"17929:19:9","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"subId","nameLocation":"17957:5:9","nodeType":"VariableDeclaration","scope":2238,"src":"17949:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"17949:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17948:15:9"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"balance","nameLocation":"17989:7:9","nodeType":"VariableDeclaration","scope":2238,"src":"17982:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2144,"name":"uint96","nodeType":"ElementaryTypeName","src":"17982:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"nativeBalance","nameLocation":"18005:13:9","nodeType":"VariableDeclaration","scope":2238,"src":"17998:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2146,"name":"uint96","nodeType":"ElementaryTypeName","src":"17998:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"17981:38:9"},"scope":2357,"src":"17920:797:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"18792:449:9","statements":[{"assignments":[2246,2248],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"balance","nameLocation":"18806:7:9","nodeType":"VariableDeclaration","scope":2294,"src":"18799:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2245,"name":"uint96","nodeType":"ElementaryTypeName","src":"18799:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"nativeBalance","nameLocation":"18822:13:9","nodeType":"VariableDeclaration","scope":2294,"src":"18815:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2247,"name":"uint96","nodeType":"ElementaryTypeName","src":"18815:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2252,"initialValue":{"arguments":[{"id":2250,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"18859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2249,"name":"_deleteSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18839:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint96_$_t_uint96_$","typeString":"function (uint256) returns (uint96,uint96)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18839:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"nodeType":"VariableDeclarationStatement","src":"18798:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2255,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"18957:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18949:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"18949:7:9","typeDescriptions":{}}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18949:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18974:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18966:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"18966:7:9","typeDescriptions":{}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18966:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18949:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"18980:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18980:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18949:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"18945:126:9","trueBody":{"id":2277,"nodeType":"Block","src":"18994:77:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2269,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"19042:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2272,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"19054:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19046:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"19046:7:9","typeDescriptions":{}}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19046:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2267,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19028:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19033:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":348,"src":"19028:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19028:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2266,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"19002:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19002:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"ExpressionStatement","src":"19002:62:9"}]}},{"expression":{"arguments":[{"id":2280,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"19143:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2283,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"19155:13:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19147:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"19147:7:9","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19147:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2279,"name":"_mustSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"19127:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19127:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"ExpressionStatement","src":"19127:43:9"},{"eventCall":{"arguments":[{"id":2288,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"19202:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2289,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"19209:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2290,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"19213:7:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2291,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"19222:13:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2287,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"19181:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19181:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2293,"nodeType":"EmitStatement","src":"19176:60:9"}]},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"_cancelSubscriptionHelper","nameLocation":"18730:25:9","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"subId","nameLocation":"18764:5:9","nodeType":"VariableDeclaration","scope":2295,"src":"18756:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"18756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"to","nameLocation":"18779:2:9","nodeType":"VariableDeclaration","scope":2295,"src":"18771:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"18771:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18755:27:9"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"18792:0:9"},"scope":2357,"src":"18721:520:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"19282:38:9","statements":[{"expression":{"arguments":[{"id":2300,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"19302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2299,"name":"_onlySubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"19288:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19288:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2302,"nodeType":"ExpressionStatement","src":"19288:20:9"},{"id":2303,"nodeType":"PlaceholderStatement","src":"19314:1:9"}]},"id":2305,"name":"onlySubOwner","nameLocation":"19254:12:9","nodeType":"ModifierDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"subId","nameLocation":"19275:5:9","nodeType":"VariableDeclaration","scope":2305,"src":"19267:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"19267:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19266:15:9"},"src":"19245:75:9","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"19376:184:9","statements":[{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"subOwner","nameLocation":"19390:8:9","nodeType":"VariableDeclaration","scope":2331,"src":"19382:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"19382:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2316,"initialValue":{"expression":{"baseExpression":{"id":2312,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"19401:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2314,"indexExpression":{"id":2313,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"19423:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19401:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19430:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"19401:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19382:53:9"},{"expression":{"arguments":[{"id":2318,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"19467:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2317,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"19441:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19441:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2320,"nodeType":"ExpressionStatement","src":"19441:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2321,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19486:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19490:6:9","memberName":"sender","nodeType":"MemberAccess","src":"19486:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2323,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"19500:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19486:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2330,"nodeType":"IfStatement","src":"19482:74:9","trueBody":{"id":2329,"nodeType":"Block","src":"19510:46:9","statements":[{"errorCall":{"arguments":[{"id":2326,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"19540:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2325,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"19525:14:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19525:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"RevertStatement","src":"19518:31:9"}]}}]},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"_onlySubOwner","nameLocation":"19333:13:9","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"subId","nameLocation":"19355:5:9","nodeType":"VariableDeclaration","scope":2332,"src":"19347:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"19347:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19346:15:9"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"19376:0:9"},"scope":2357,"src":"19324:236:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"19626:117:9","statements":[{"assignments":[2340,null],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"success","nameLocation":"19638:7:9","nodeType":"VariableDeclaration","scope":2355,"src":"19633:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2339,"name":"bool","nodeType":"ElementaryTypeName","src":"19633:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2347,"initialValue":{"arguments":[{"hexValue":"","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19674:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"19651:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19654:4:9","memberName":"call","nodeType":"MemberAccess","src":"19651:7:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2343,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"19666:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"19651:22:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19651:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19632:45:9"},{"condition":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19687:8:9","subExpression":{"id":2348,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"19688:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2354,"nodeType":"IfStatement","src":"19683:56:9","trueBody":{"id":2353,"nodeType":"Block","src":"19697:42:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2350,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"19712:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19712:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2352,"nodeType":"RevertStatement","src":"19705:27:9"}]}}]},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"_mustSendNative","nameLocation":"19573:15:9","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"to","nameLocation":"19597:2:9","nodeType":"VariableDeclaration","scope":2356,"src":"19589:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"19589:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"amount","nameLocation":"19609:6:9","nodeType":"VariableDeclaration","scope":2356,"src":"19601:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"19601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19588:28:9"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[],"src":"19626:0:9"},"scope":2357,"src":"19564:179:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2358,"src":"573:19172:9","usedErrors":[1079,1081,1087,1089,1091,1093,1097,1099,1103,1109,1123,1125,1127,1129,1131,1267]}],"src":"32:19714:9"},"id":9},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","exportedSymbols":{"ConfirmedOwner":[39],"IVRFCoordinatorV2Plus":[2538],"IVRFMigratableConsumerV2Plus":[2552],"VRFConsumerBaseV2Plus":[2520]},"id":2521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2359,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"./interfaces/IVRFCoordinatorV2Plus.sol","id":2361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2521,"sourceUnit":2539,"src":"57:77:10","symbolAliases":[{"foreign":{"id":2360,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"65:21:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","file":"./interfaces/IVRFMigratableConsumerV2Plus.sol","id":2363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2521,"sourceUnit":2553,"src":"135:91:10","symbolAliases":[{"foreign":{"id":2362,"name":"IVRFMigratableConsumerV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"143:28:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":2365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2521,"sourceUnit":40,"src":"227:70:10","symbolAliases":[{"foreign":{"id":2364,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"235:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2367,"name":"IVRFMigratableConsumerV2Plus","nameLocations":["5712:28:10"],"nodeType":"IdentifierPath","referencedDeclaration":2552,"src":"5712:28:10"},"id":2368,"nodeType":"InheritanceSpecifier","src":"5712:28:10"},{"baseName":{"id":2369,"name":"ConfirmedOwner","nameLocations":["5742:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"5742:14:10"},"id":2370,"nodeType":"InheritanceSpecifier","src":"5742:14:10"}],"canonicalName":"VRFConsumerBaseV2Plus","contractDependencies":[],"contractKind":"contract","documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"299:5369:10","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2520,"linearizedBaseContracts":[2520,39,202,276,2552],"name":"VRFConsumerBaseV2Plus","nameLocation":"5687:21:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":2376,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5767:25:10","nodeType":"ErrorDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"have","nameLocation":"5801:4:10","nodeType":"VariableDeclaration","scope":2376,"src":"5793:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"want","nameLocation":"5815:4:10","nodeType":"VariableDeclaration","scope":2376,"src":"5807:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"5807:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5792:28:10"},"src":"5761:60:10"},{"errorSelector":"061db9c1","id":2384,"name":"OnlyOwnerOrCoordinator","nameLocation":"5830:22:10","nodeType":"ErrorDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"have","nameLocation":"5861:4:10","nodeType":"VariableDeclaration","scope":2384,"src":"5853:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"5853:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"owner","nameLocation":"5875:5:10","nodeType":"VariableDeclaration","scope":2384,"src":"5867:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"coordinator","nameLocation":"5890:11:10","nodeType":"VariableDeclaration","scope":2384,"src":"5882:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5852:50:10"},"src":"5824:79:10"},{"errorSelector":"d92e233d","id":2386,"name":"ZeroAddress","nameLocation":"5912:11:10","nodeType":"ErrorDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"5923:2:10"},"src":"5906:20:10"},{"constant":false,"functionSelector":"9eccacf6","id":2389,"mutability":"mutable","name":"s_vrfCoordinator","nameLocation":"6106:16:10","nodeType":"VariableDeclaration","scope":2520,"src":"6077:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"},"typeName":{"id":2388,"nodeType":"UserDefinedTypeName","pathNode":{"id":2387,"name":"IVRFCoordinatorV2Plus","nameLocations":["6077:21:10"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"6077:21:10"},"referencedDeclaration":2538,"src":"6077:21:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"visibility":"public"},{"body":{"id":2416,"nodeType":"Block","src":"6266:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2399,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"6276:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:10","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6276:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"6272:70:10","trueBody":{"id":2408,"nodeType":"Block","src":"6307:35:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2405,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"6322:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2407,"nodeType":"RevertStatement","src":"6315:20:10"}]}},{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2410,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"6347:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2412,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"6388:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2411,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"6366:21:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2538_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"6347:57:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2415,"nodeType":"ExpressionStatement","src":"6347:57:10"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"6127:72:10","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2417,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6254:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:6:10","memberName":"sender","nodeType":"MemberAccess","src":"6254:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2397,"kind":"baseConstructorSpecifier","modifierName":{"id":2394,"name":"ConfirmedOwner","nameLocations":["6239:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"6239:14:10"},"nodeType":"ModifierInvocation","src":"6239:26:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"6222:15:10","nodeType":"VariableDeclaration","scope":2417,"src":"6214:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2391,"name":"address","nodeType":"ElementaryTypeName","src":"6214:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6213:25:10"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[],"src":"6266:0:10"},"scope":2520,"src":"6202:207:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"6413:690:10","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2426,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7207:18:10","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"requestId","nameLocation":"7234:9:10","nodeType":"VariableDeclaration","scope":2426,"src":"7226:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"7226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"randomWords","nameLocation":"7264:11:10","nodeType":"VariableDeclaration","scope":2426,"src":"7245:30:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ArrayTypeName","src":"7245:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7225:51:10"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[],"src":"7293:0:10"},"scope":2520,"src":"7198:96:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"7580:189:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7590:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7594:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7590:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2438,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"7612:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7604:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:10","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7590:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"IfStatement","src":"7586:131:10","trueBody":{"id":2450,"nodeType":"Block","src":"7631:86:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":2442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7672:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7676:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7672:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2446,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"7692:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7684:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"7684:7:10","typeDescriptions":{}}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2441,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"7646:25:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"RevertStatement","src":"7639:71:10"}]}},{"expression":{"arguments":[{"id":2453,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"7741:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"7752:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2452,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"7722:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (uint256,uint256[] calldata)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7722:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"ExpressionStatement","src":"7722:42:10"}]},"functionSelector":"1fe543e3","id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"7498:21:10","nodeType":"FunctionDefinition","parameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"requestId","nameLocation":"7528:9:10","nodeType":"VariableDeclaration","scope":2458,"src":"7520:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"7520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"randomWords","nameLocation":"7558:11:10","nodeType":"VariableDeclaration","scope":2458,"src":"7539:30:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ArrayTypeName","src":"7539:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7519:51:10"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[],"src":"7580:0:10"},"scope":2520,"src":"7489:280:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2551],"body":{"id":2488,"nodeType":"Block","src":"7921:186:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"7931:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7958:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7950:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"7950:7:10","typeDescriptions":{}}},"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7950:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7931:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2477,"nodeType":"IfStatement","src":"7927:70:10","trueBody":{"id":2476,"nodeType":"Block","src":"7962:35:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2473,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"7977:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"RevertStatement","src":"7970:20:10"}]}},{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2478,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"8002:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2480,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"8043:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2479,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"8021:21:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2538_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"8002:57:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2483,"nodeType":"ExpressionStatement","src":"8002:57:10"},{"eventCall":{"arguments":[{"id":2485,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"8086:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2484,"name":"CoordinatorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"8071:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8071:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"EmitStatement","src":"8066:36:10"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"7773:55:10","text":" @inheritdoc IVRFMigratableConsumerV2Plus"},"functionSelector":"8ea98117","id":2489,"implemented":true,"kind":"function","modifiers":[{"id":2465,"kind":"modifierInvocation","modifierName":{"id":2464,"name":"onlyOwnerOrCoordinator","nameLocations":["7898:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"7898:22:10"},"nodeType":"ModifierInvocation","src":"7898:22:10"}],"name":"setCoordinator","nameLocation":"7840:14:10","nodeType":"FunctionDefinition","overrides":{"id":2463,"nodeType":"OverrideSpecifier","overrides":[],"src":"7889:8:10"},"parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"7863:15:10","nodeType":"VariableDeclaration","scope":2489,"src":"7855:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7854:25:10"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[],"src":"7921:0:10"},"scope":2520,"src":"7831:276:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2518,"nodeType":"Block","src":"8145:179:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8155:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8155:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2493,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"8169:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8169:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8155:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8180:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8184:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8180:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2500,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"8202:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:10","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8180:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8155:64:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2516,"nodeType":"IfStatement","src":"8151:162:10","trueBody":{"id":2515,"nodeType":"Block","src":"8221:92:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":2505,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8259:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8263:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8259:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2507,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"8271:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8271:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2511,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"8288:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8280:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"8280:7:10","typeDescriptions":{}}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2504,"name":"OnlyOwnerOrCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"8236:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:70:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2514,"nodeType":"RevertStatement","src":"8229:77:10"}]}},{"id":2517,"nodeType":"PlaceholderStatement","src":"8318:1:10"}]},"id":2519,"name":"onlyOwnerOrCoordinator","nameLocation":"8120:22:10","nodeType":"ModifierDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"8142:2:10"},"src":"8111:213:10","virtual":false,"visibility":"internal"}],"scope":2521,"src":"5669:2657:10","usedErrors":[2376,2384,2386]}],"src":"32:8295:10"},"id":10},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2538],"IVRFSubscriptionV2Plus":[2641],"VRFV2PlusClient":[2683]},"id":2539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2522,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../libraries/VRFV2PlusClient.sol","id":2524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2539,"sourceUnit":2684,"src":"57:65:11","symbolAliases":[{"foreign":{"id":2523,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"65:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./IVRFSubscriptionV2Plus.sol","id":2526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2539,"sourceUnit":2642,"src":"123:68:11","symbolAliases":[{"foreign":{"id":2525,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"131:22:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2527,"name":"IVRFSubscriptionV2Plus","nameLocations":["398:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":2641,"src":"398:22:11"},"id":2528,"nodeType":"InheritanceSpecifier","src":"398:22:11"}],"canonicalName":"IVRFCoordinatorV2Plus","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2538,"linearizedBaseContracts":[2538,2641],"name":"IVRFCoordinatorV2Plus","nameLocation":"373:21:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"425:1588:11","text":" @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"9b1c385e","id":2537,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2025:18:11","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"req","nameLocation":"2088:3:11","nodeType":"VariableDeclaration","scope":2537,"src":"2044:47:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":2531,"nodeType":"UserDefinedTypeName","pathNode":{"id":2530,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["2044:15:11","2060:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"2044:34:11"},"referencedDeclaration":2667,"src":"2044:34:11","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"2043:49:11"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:11","nodeType":"VariableDeclaration","scope":2537,"src":"2111:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:19:11"},"scope":2538,"src":"2016:114:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2539,"src":"363:1769:11","usedErrors":[]}],"src":"32:2101:11"},"id":11},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","exportedSymbols":{"IVRFMigratableConsumerV2Plus":[2552]},"id":2553,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFMigratableConsumerV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"57:211:12","text":"@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."},"fullyImplemented":false,"id":2552,"linearizedBaseContracts":[2552],"name":"IVRFMigratableConsumerV2Plus","nameLocation":"278:28:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6","id":2545,"name":"CoordinatorSet","nameLocation":"317:14:12","nodeType":"EventDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"indexed":false,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"340:14:12","nodeType":"VariableDeclaration","scope":2545,"src":"332:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:24:12"},"src":"311:45:12"},{"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"360:131:12","text":"@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"},"functionSelector":"8ea98117","id":2551,"implemented":false,"kind":"function","modifiers":[],"name":"setCoordinator","nameLocation":"503:14:12","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"526:14:12","nodeType":"VariableDeclaration","scope":2551,"src":"518:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:24:12"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"550:0:12"},"scope":2552,"src":"494:57:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2553,"src":"268:285:12","usedErrors":[]}],"src":"32:522:12"},"id":12},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","exportedSymbols":{"IVRFSubscriptionV2Plus":[2641]},"id":2642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2554,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFSubscriptionV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"57:141:13","text":"@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."},"fullyImplemented":false,"id":2641,"linearizedBaseContracts":[2641],"name":"IVRFSubscriptionV2Plus","nameLocation":"208:22:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"235:170:13","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"bec4c08c","id":2563,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"417:11:13","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"subId","nameLocation":"437:5:13","nodeType":"VariableDeclaration","scope":2563,"src":"429:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"consumer","nameLocation":"452:8:13","nodeType":"VariableDeclaration","scope":2563,"src":"444:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:33:13"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"470:0:13"},"scope":2641,"src":"408:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"475:172:13","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"cb631797","id":2571,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"659:14:13","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"subId","nameLocation":"682:5:13","nodeType":"VariableDeclaration","scope":2571,"src":"674:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"consumer","nameLocation":"697:8:13","nodeType":"VariableDeclaration","scope":2571,"src":"689:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:33:13"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[],"src":"715:0:13"},"scope":2641,"src":"650:66:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"720:140:13","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"0ae09540","id":2579,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"872:18:13","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"subId","nameLocation":"899:5:13","nodeType":"VariableDeclaration","scope":2579,"src":"891:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"to","nameLocation":"914:2:13","nodeType":"VariableDeclaration","scope":2579,"src":"906:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:13"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[],"src":"926:0:13"},"scope":2641,"src":"863:64:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"931:211:13","text":" @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"b2a7cac5","id":2585,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"1154:31:13","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"subId","nameLocation":"1194:5:13","nodeType":"VariableDeclaration","scope":2585,"src":"1186:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:15:13"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[],"src":"1209:0:13"},"scope":2641,"src":"1145:65:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"1214:164:13","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"dac83d29","id":2593,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"1390:32:13","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"subId","nameLocation":"1431:5:13","nodeType":"VariableDeclaration","scope":2593,"src":"1423:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"newOwner","nameLocation":"1446:8:13","nodeType":"VariableDeclaration","scope":2593,"src":"1438:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1422:33:13"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"1464:0:13"},"scope":2641,"src":"1381:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"1469:613:13","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"},"functionSelector":"a21a23e4","id":2599,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2094:18:13","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"2112:2:13"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"subId","nameLocation":"2141:5:13","nodeType":"VariableDeclaration","scope":2599,"src":"2133:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:15:13"},"scope":2641,"src":"2085:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"2152:422:13","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"dc311dd3","id":2616,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"2586:15:13","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"subId","nameLocation":"2615:5:13","nodeType":"VariableDeclaration","scope":2616,"src":"2607:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:23:13"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"balance","nameLocation":"2667:7:13","nodeType":"VariableDeclaration","scope":2616,"src":"2660:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2604,"name":"uint96","nodeType":"ElementaryTypeName","src":"2660:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"nativeBalance","nameLocation":"2683:13:13","nodeType":"VariableDeclaration","scope":2616,"src":"2676:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2606,"name":"uint96","nodeType":"ElementaryTypeName","src":"2676:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"reqCount","nameLocation":"2705:8:13","nodeType":"VariableDeclaration","scope":2616,"src":"2698:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2608,"name":"uint64","nodeType":"ElementaryTypeName","src":"2698:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"owner","nameLocation":"2723:5:13","nodeType":"VariableDeclaration","scope":2616,"src":"2715:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"consumers","nameLocation":"2747:9:13","nodeType":"VariableDeclaration","scope":2616,"src":"2730:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2613,"nodeType":"ArrayTypeName","src":"2730:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2659:98:13"},"scope":2641,"src":"2577:181:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41af6c87","id":2623,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"3063:20:13","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"subId","nameLocation":"3092:5:13","nodeType":"VariableDeclaration","scope":2623,"src":"3084:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:15:13"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2623,"src":"3122:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2620,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3121:6:13"},"scope":2641,"src":"3054:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"3132:427:13","text":" @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"},"functionSelector":"aefb212f","id":2634,"implemented":false,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"3571:24:13","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"startIndex","nameLocation":"3604:10:13","nodeType":"VariableDeclaration","scope":2634,"src":"3596:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"maxCount","nameLocation":"3624:8:13","nodeType":"VariableDeclaration","scope":2634,"src":"3616:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:38:13"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"3657:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"nodeType":"ArrayTypeName","src":"3657:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3656:18:13"},"scope":2641,"src":"3562:113:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"3679:175:13","text":" @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."},"functionSelector":"95b55cfc","id":2640,"implemented":false,"kind":"function","modifiers":[],"name":"fundSubscriptionWithNative","nameLocation":"3866:26:13","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"subId","nameLocation":"3901:5:13","nodeType":"VariableDeclaration","scope":2640,"src":"3893:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:15:13"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[],"src":"3924:0:13"},"scope":2641,"src":"3857:68:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2642,"src":"198:3729:13","usedErrors":[]}],"src":"32:3896:13"},"id":13},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","exportedSymbols":{"VRFV2PlusClient":[2683]},"id":2684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2643,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFV2PlusClient","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2683,"linearizedBaseContracts":[2683],"name":"VRFV2PlusClient","nameLocation":"90:15:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f7514ab4","id":2651,"mutability":"constant","name":"EXTRA_ARGS_V1_TAG","nameLocation":"184:17:14","nodeType":"VariableDeclaration","scope":2683,"src":"161:79:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2644,"name":"bytes4","nodeType":"ElementaryTypeName","src":"161:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"565246204578747261417267735631","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"221:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""},"value":"VRF ExtraArgsV1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""}],"id":2647,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"211:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"211:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"204:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2645,"name":"bytes4","nodeType":"ElementaryTypeName","src":"204:6:14","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"public"},{"canonicalName":"VRFV2PlusClient.ExtraArgsV1","id":2654,"members":[{"constant":false,"id":2653,"mutability":"mutable","name":"nativePayment","nameLocation":"274:13:14","nodeType":"VariableDeclaration","scope":2654,"src":"269:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2652,"name":"bool","nodeType":"ElementaryTypeName","src":"269:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExtraArgsV1","nameLocation":"251:11:14","nodeType":"StructDefinition","scope":2683,"src":"244:48:14","visibility":"public"},{"canonicalName":"VRFV2PlusClient.RandomWordsRequest","id":2667,"members":[{"constant":false,"id":2656,"mutability":"mutable","name":"keyHash","nameLocation":"336:7:14","nodeType":"VariableDeclaration","scope":2667,"src":"328:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"328:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"subId","nameLocation":"357:5:14","nodeType":"VariableDeclaration","scope":2667,"src":"349:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"requestConfirmations","nameLocation":"375:20:14","nodeType":"VariableDeclaration","scope":2667,"src":"368:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2659,"name":"uint16","nodeType":"ElementaryTypeName","src":"368:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"408:16:14","nodeType":"VariableDeclaration","scope":2667,"src":"401:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2661,"name":"uint32","nodeType":"ElementaryTypeName","src":"401:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"numWords","nameLocation":"437:8:14","nodeType":"VariableDeclaration","scope":2667,"src":"430:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2663,"name":"uint32","nodeType":"ElementaryTypeName","src":"430:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"extraArgs","nameLocation":"457:9:14","nodeType":"VariableDeclaration","scope":2667,"src":"451:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2665,"name":"bytes","nodeType":"ElementaryTypeName","src":"451:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RandomWordsRequest","nameLocation":"303:18:14","nodeType":"StructDefinition","scope":2683,"src":"296:175:14","visibility":"public"},{"body":{"id":2681,"nodeType":"Block","src":"568:70:14","statements":[{"expression":{"arguments":[{"id":2677,"name":"EXTRA_ARGS_V1_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"604:17:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2678,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"623:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":2675,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"581:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"585:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"581:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2674,"id":2680,"nodeType":"Return","src":"574:59:14"}]},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"_argsToBytes","nameLocation":"484:12:14","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"extraArgs","nameLocation":"516:9:14","nodeType":"VariableDeclaration","scope":2682,"src":"497:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":2669,"nodeType":"UserDefinedTypeName","pathNode":{"id":2668,"name":"ExtraArgsV1","nameLocations":["497:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2654,"src":"497:11:14"},"referencedDeclaration":2654,"src":"497:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"496:30:14"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"bts","nameLocation":"563:3:14","nodeType":"VariableDeclaration","scope":2682,"src":"550:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2672,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"549:18:14"},"scope":2683,"src":"475:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2684,"src":"82:558:14","usedErrors":[]}],"src":"32:609:14"},"id":14},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[2779]},"id":2780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2685,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2779,"linearizedBaseContracts":[2779],"name":"VRFCoordinatorV2Interface","nameLocation":"120:25:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"150:267:15","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":2696,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"429:16:15","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[],"src":"445:2:15"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"471:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2688,"name":"uint16","nodeType":"ElementaryTypeName","src":"471:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"479:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2690,"name":"uint32","nodeType":"ElementaryTypeName","src":"479:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"487:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"487:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2693,"nodeType":"ArrayTypeName","src":"487:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"470:34:15"},"scope":2779,"src":"420:85:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"509:1511:15","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":2712,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2032:18:15","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"keyHash","nameLocation":"2064:7:15","nodeType":"VariableDeclaration","scope":2712,"src":"2056:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2056:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"subId","nameLocation":"2084:5:15","nodeType":"VariableDeclaration","scope":2712,"src":"2077:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2700,"name":"uint64","nodeType":"ElementaryTypeName","src":"2077:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2102:27:15","nodeType":"VariableDeclaration","scope":2712,"src":"2095:34:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2702,"name":"uint16","nodeType":"ElementaryTypeName","src":"2095:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2142:16:15","nodeType":"VariableDeclaration","scope":2712,"src":"2135:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2704,"name":"uint32","nodeType":"ElementaryTypeName","src":"2135:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"numWords","nameLocation":"2171:8:15","nodeType":"VariableDeclaration","scope":2712,"src":"2164:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2706,"name":"uint32","nodeType":"ElementaryTypeName","src":"2164:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:133:15"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"requestId","nameLocation":"2210:9:15","nodeType":"VariableDeclaration","scope":2712,"src":"2202:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:19:15"},"scope":2779,"src":"2023:198:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"2225:384:15","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":2718,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2621:18:15","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"2639:2:15"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"subId","nameLocation":"2667:5:15","nodeType":"VariableDeclaration","scope":2718,"src":"2660:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2715,"name":"uint64","nodeType":"ElementaryTypeName","src":"2660:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2659:14:15"},"scope":2779,"src":"2612:62:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"2678:381:15","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":2733,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3071:15:15","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"subId","nameLocation":"3099:5:15","nodeType":"VariableDeclaration","scope":2733,"src":"3092:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2720,"name":"uint64","nodeType":"ElementaryTypeName","src":"3092:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3086:22:15"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"balance","nameLocation":"3139:7:15","nodeType":"VariableDeclaration","scope":2733,"src":"3132:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2723,"name":"uint96","nodeType":"ElementaryTypeName","src":"3132:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:15","nodeType":"VariableDeclaration","scope":2733,"src":"3148:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2725,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"owner","nameLocation":"3173:5:15","nodeType":"VariableDeclaration","scope":2733,"src":"3165:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"consumers","nameLocation":"3197:9:15","nodeType":"VariableDeclaration","scope":2733,"src":"3180:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2730,"nodeType":"ArrayTypeName","src":"3180:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3131:76:15"},"scope":2779,"src":"3062:146:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"3212:164:15","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":2741,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3388:32:15","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"subId","nameLocation":"3428:5:15","nodeType":"VariableDeclaration","scope":2741,"src":"3421:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2735,"name":"uint64","nodeType":"ElementaryTypeName","src":"3421:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"newOwner","nameLocation":"3443:8:15","nodeType":"VariableDeclaration","scope":2741,"src":"3435:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"3435:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3420:32:15"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[],"src":"3461:0:15"},"scope":2779,"src":"3379:83:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"3466:212:15","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":2747,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3690:31:15","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"subId","nameLocation":"3729:5:15","nodeType":"VariableDeclaration","scope":2747,"src":"3722:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2743,"name":"uint64","nodeType":"ElementaryTypeName","src":"3722:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3721:14:15"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[],"src":"3744:0:15"},"scope":2779,"src":"3681:64:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"3749:170:15","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":2755,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3931:11:15","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"subId","nameLocation":"3950:5:15","nodeType":"VariableDeclaration","scope":2755,"src":"3943:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2749,"name":"uint64","nodeType":"ElementaryTypeName","src":"3943:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"consumer","nameLocation":"3965:8:15","nodeType":"VariableDeclaration","scope":2755,"src":"3957:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3942:32:15"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"3983:0:15"},"scope":2779,"src":"3922:62:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"3988:172:15","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":2763,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4172:14:15","nodeType":"FunctionDefinition","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"subId","nameLocation":"4194:5:15","nodeType":"VariableDeclaration","scope":2763,"src":"4187:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2757,"name":"uint64","nodeType":"ElementaryTypeName","src":"4187:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2760,"mutability":"mutable","name":"consumer","nameLocation":"4209:8:15","nodeType":"VariableDeclaration","scope":2763,"src":"4201:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4186:32:15"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"4227:0:15"},"scope":2779,"src":"4163:65:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"4232:140:15","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":2771,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4384:18:15","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"subId","nameLocation":"4410:5:15","nodeType":"VariableDeclaration","scope":2771,"src":"4403:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2765,"name":"uint64","nodeType":"ElementaryTypeName","src":"4403:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"to","nameLocation":"4425:2:15","nodeType":"VariableDeclaration","scope":2771,"src":"4417:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4402:26:15"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"4437:0:15"},"scope":2779,"src":"4375:63:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":2778,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4743:20:15","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"subId","nameLocation":"4771:5:15","nodeType":"VariableDeclaration","scope":2778,"src":"4764:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2772,"name":"uint64","nodeType":"ElementaryTypeName","src":"4764:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4763:14:15"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2778,"src":"4801:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2775,"name":"bool","nodeType":"ElementaryTypeName","src":"4801:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4800:6:15"},"scope":2779,"src":"4734:73:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2780,"src":"110:4699:15","usedErrors":[]}],"src":"32:4778:15"},"id":15},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"ConfirmedOwner":[39],"VRFConsumerBaseV2":[1042],"VRFCoordinatorV2Interface":[2779],"VRFCoordinatorV2Mock":[3711]},"id":3712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2781,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"92:23:16"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":2783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3712,"sourceUnit":2780,"src":"117:86:16","symbolAliases":[{"foreign":{"id":2782,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"125:25:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":2785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3712,"sourceUnit":1043,"src":"204:59:16","symbolAliases":[{"foreign":{"id":2784,"name":"VRFConsumerBaseV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"212:17:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":2787,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3712,"sourceUnit":40,"src":"264:70:16","symbolAliases":[{"foreign":{"id":2786,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"272:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2788,"name":"VRFCoordinatorV2Interface","nameLocations":["520:25:16"],"nodeType":"IdentifierPath","referencedDeclaration":2779,"src":"520:25:16"},"id":2789,"nodeType":"InheritanceSpecifier","src":"520:25:16"},{"baseName":{"id":2790,"name":"ConfirmedOwner","nameLocations":["547:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"547:14:16"},"id":2791,"nodeType":"InheritanceSpecifier","src":"547:14:16"}],"canonicalName":"VRFCoordinatorV2Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3711,"linearizedBaseContracts":[3711,39,202,276,2779],"name":"VRFCoordinatorV2Mock","nameLocation":"496:20:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":2793,"mutability":"immutable","name":"BASE_FEE","nameLocation":"590:8:16","nodeType":"VariableDeclaration","scope":3711,"src":"566:32:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2792,"name":"uint96","nodeType":"ElementaryTypeName","src":"566:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":2795,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"626:14:16","nodeType":"VariableDeclaration","scope":3711,"src":"602:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2794,"name":"uint96","nodeType":"ElementaryTypeName","src":"602:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"64d51a2a","id":2798,"mutability":"immutable","name":"MAX_CONSUMERS","nameLocation":"668:13:16","nodeType":"VariableDeclaration","scope":3711,"src":"644:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2796,"name":"uint16","nodeType":"ElementaryTypeName","src":"644:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"errorSelector":"1f6a65b6","id":2800,"name":"InvalidSubscription","nameLocation":"698:19:16","nodeType":"ErrorDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"717:2:16"},"src":"692:28:16"},{"errorSelector":"f4d678b8","id":2802,"name":"InsufficientBalance","nameLocation":"729:19:16","nodeType":"ErrorDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"748:2:16"},"src":"723:28:16"},{"errorSelector":"d8a3fb52","id":2806,"name":"MustBeSubOwner","nameLocation":"760:14:16","nodeType":"ErrorDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"owner","nameLocation":"783:5:16","nodeType":"VariableDeclaration","scope":2806,"src":"775:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:15:16"},"src":"754:36:16"},{"errorSelector":"05a48e0f","id":2808,"name":"TooManyConsumers","nameLocation":"799:16:16","nodeType":"ErrorDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"815:2:16"},"src":"793:25:16"},{"errorSelector":"71e83137","id":2810,"name":"InvalidConsumer","nameLocation":"827:15:16","nodeType":"ErrorDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[],"src":"842:2:16"},"src":"821:24:16"},{"errorSelector":"3f3df5b6","id":2812,"name":"InvalidRandomWords","nameLocation":"854:18:16","nodeType":"ErrorDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[],"src":"872:2:16"},"src":"848:27:16"},{"errorSelector":"ed3ba6a6","id":2814,"name":"Reentrant","nameLocation":"884:9:16","nodeType":"ErrorDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[],"src":"893:2:16"},"src":"878:18:16"},{"anonymous":false,"eventSelector":"63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a9772","id":2832,"name":"RandomWordsRequested","nameLocation":"906:20:16","nodeType":"EventDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"948:7:16","nodeType":"VariableDeclaration","scope":2832,"src":"932:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"932:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2818,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"969:9:16","nodeType":"VariableDeclaration","scope":2832,"src":"961:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2820,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"992:7:16","nodeType":"VariableDeclaration","scope":2832,"src":"984:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2822,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1020:5:16","nodeType":"VariableDeclaration","scope":2832,"src":"1005:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2821,"name":"uint64","nodeType":"ElementaryTypeName","src":"1005:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2824,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"1038:27:16","nodeType":"VariableDeclaration","scope":2832,"src":"1031:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2823,"name":"uint16","nodeType":"ElementaryTypeName","src":"1031:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2826,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1078:16:16","nodeType":"VariableDeclaration","scope":2832,"src":"1071:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2825,"name":"uint32","nodeType":"ElementaryTypeName","src":"1071:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2828,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"1107:8:16","nodeType":"VariableDeclaration","scope":2832,"src":"1100:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2827,"name":"uint32","nodeType":"ElementaryTypeName","src":"1100:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2830,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1137:6:16","nodeType":"VariableDeclaration","scope":2832,"src":"1121:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"926:221:16"},"src":"900:248:16"},{"anonymous":false,"eventSelector":"7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e4","id":2842,"name":"RandomWordsFulfilled","nameLocation":"1157:20:16","nodeType":"EventDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1194:9:16","nodeType":"VariableDeclaration","scope":2842,"src":"1178:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2836,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"1213:10:16","nodeType":"VariableDeclaration","scope":2842,"src":"1205:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2838,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"1232:7:16","nodeType":"VariableDeclaration","scope":2842,"src":"1225:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2837,"name":"uint96","nodeType":"ElementaryTypeName","src":"1225:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2840,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1246:7:16","nodeType":"VariableDeclaration","scope":2842,"src":"1241:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2839,"name":"bool","nodeType":"ElementaryTypeName","src":"1241:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1177:77:16"},"src":"1151:104:16"},{"anonymous":false,"eventSelector":"464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf","id":2848,"name":"SubscriptionCreated","nameLocation":"1264:19:16","nodeType":"EventDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1299:5:16","nodeType":"VariableDeclaration","scope":2848,"src":"1284:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2843,"name":"uint64","nodeType":"ElementaryTypeName","src":"1284:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2846,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1314:5:16","nodeType":"VariableDeclaration","scope":2848,"src":"1306:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"1306:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1283:37:16"},"src":"1258:63:16"},{"anonymous":false,"eventSelector":"d39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f8","id":2856,"name":"SubscriptionFunded","nameLocation":"1330:18:16","nodeType":"EventDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1364:5:16","nodeType":"VariableDeclaration","scope":2856,"src":"1349:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2849,"name":"uint64","nodeType":"ElementaryTypeName","src":"1349:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2852,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"1379:10:16","nodeType":"VariableDeclaration","scope":2856,"src":"1371:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"1399:10:16","nodeType":"VariableDeclaration","scope":2856,"src":"1391:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1348:62:16"},"src":"1324:87:16"},{"anonymous":false,"eventSelector":"e8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd49815","id":2864,"name":"SubscriptionCanceled","nameLocation":"1420:20:16","nodeType":"EventDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1456:5:16","nodeType":"VariableDeclaration","scope":2864,"src":"1441:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2857,"name":"uint64","nodeType":"ElementaryTypeName","src":"1441:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2860,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1471:2:16","nodeType":"VariableDeclaration","scope":2864,"src":"1463:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2862,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1483:6:16","nodeType":"VariableDeclaration","scope":2864,"src":"1475:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1440:50:16"},"src":"1414:77:16"},{"anonymous":false,"eventSelector":"752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc3","id":2870,"name":"ConsumerAdded","nameLocation":"1500:13:16","nodeType":"EventDefinition","parameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1529:5:16","nodeType":"VariableDeclaration","scope":2870,"src":"1514:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2865,"name":"uint64","nodeType":"ElementaryTypeName","src":"1514:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2868,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"1544:8:16","nodeType":"VariableDeclaration","scope":2870,"src":"1536:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1513:40:16"},"src":"1494:60:16"},{"anonymous":false,"eventSelector":"f9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc","id":2876,"name":"ConsumerRemoved","nameLocation":"1563:15:16","nodeType":"EventDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1594:5:16","nodeType":"VariableDeclaration","scope":2876,"src":"1579:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2871,"name":"uint64","nodeType":"ElementaryTypeName","src":"1579:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2874,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"1609:8:16","nodeType":"VariableDeclaration","scope":2876,"src":"1601:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"1601:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1578:40:16"},"src":"1557:62:16"},{"anonymous":false,"eventSelector":"4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be","id":2878,"name":"ConfigSet","nameLocation":"1628:9:16","nodeType":"EventDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[],"src":"1637:2:16"},"src":"1622:18:16"},{"canonicalName":"VRFCoordinatorV2Mock.Config","id":2881,"members":[{"constant":false,"id":2880,"mutability":"mutable","name":"reentrancyLock","nameLocation":"1699:14:16","nodeType":"VariableDeclaration","scope":2881,"src":"1694:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2879,"name":"bool","nodeType":"ElementaryTypeName","src":"1694:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Config","nameLocation":"1651:6:16","nodeType":"StructDefinition","scope":3711,"src":"1644:74:16","visibility":"public"},{"constant":false,"id":2884,"mutability":"mutable","name":"s_config","nameLocation":"1736:8:16","nodeType":"VariableDeclaration","scope":3711,"src":"1721:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage","typeString":"struct VRFCoordinatorV2Mock.Config"},"typeName":{"id":2883,"nodeType":"UserDefinedTypeName","pathNode":{"id":2882,"name":"Config","nameLocations":["1721:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2881,"src":"1721:6:16"},"referencedDeclaration":2881,"src":"1721:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Config"}},"visibility":"private"},{"constant":false,"id":2886,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1764:14:16","nodeType":"VariableDeclaration","scope":3711,"src":"1748:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2885,"name":"uint64","nodeType":"ElementaryTypeName","src":"1748:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1799:15:16","nodeType":"VariableDeclaration","scope":3711,"src":"1782:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1817:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1839:13:16","nodeType":"VariableDeclaration","scope":3711,"src":"1822:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1855:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":2897,"members":[{"constant":false,"id":2894,"mutability":"mutable","name":"owner","nameLocation":"1896:5:16","nodeType":"VariableDeclaration","scope":2897,"src":"1888:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"1888:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"balance","nameLocation":"1914:7:16","nodeType":"VariableDeclaration","scope":2897,"src":"1907:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2895,"name":"uint96","nodeType":"ElementaryTypeName","src":"1907:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1869:12:16","nodeType":"StructDefinition","scope":3711,"src":"1862:64:16","visibility":"public"},{"constant":false,"id":2902,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1970:15:16","nodeType":"VariableDeclaration","scope":3711,"src":"1929:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":2901,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2898,"name":"uint64","nodeType":"ElementaryTypeName","src":"1937:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1929:31:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2900,"nodeType":"UserDefinedTypeName","pathNode":{"id":2899,"name":"Subscription","nameLocations":["1947:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2897,"src":"1947:12:16"},"referencedDeclaration":2897,"src":"1947:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"s_consumers","nameLocation":"2058:11:16","nodeType":"VariableDeclaration","scope":3711,"src":"2020:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[])"},"typeName":{"id":2906,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2903,"name":"uint64","nodeType":"ElementaryTypeName","src":"2028:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"2020:28:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2905,"nodeType":"ArrayTypeName","src":"2038:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":2914,"members":[{"constant":false,"id":2909,"mutability":"mutable","name":"subId","nameLocation":"2130:5:16","nodeType":"VariableDeclaration","scope":2914,"src":"2123:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2908,"name":"uint64","nodeType":"ElementaryTypeName","src":"2123:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2148:16:16","nodeType":"VariableDeclaration","scope":2914,"src":"2141:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2910,"name":"uint32","nodeType":"ElementaryTypeName","src":"2141:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"numWords","nameLocation":"2177:8:16","nodeType":"VariableDeclaration","scope":2914,"src":"2170:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2912,"name":"uint32","nodeType":"ElementaryTypeName","src":"2170:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"2109:7:16","nodeType":"StructDefinition","scope":3711,"src":"2102:88:16","visibility":"public"},{"constant":false,"id":2919,"mutability":"mutable","name":"s_requests","nameLocation":"2230:10:16","nodeType":"VariableDeclaration","scope":3711,"src":"2193:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2914_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":2918,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2193:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2914_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2917,"nodeType":"UserDefinedTypeName","pathNode":{"id":2916,"name":"Request","nameLocations":["2212:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2914,"src":"2212:7:16"},"referencedDeclaration":2914,"src":"2212:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":2941,"nodeType":"Block","src":"2353:83:16","statements":[{"expression":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2930,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"2359:8:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2931,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2370:8:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2359:19:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2933,"nodeType":"ExpressionStatement","src":"2359:19:16"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2384:14:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2935,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2401:13:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2384:30:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2937,"nodeType":"ExpressionStatement","src":"2384:30:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2938,"name":"setConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2420:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2940,"nodeType":"ExpressionStatement","src":"2420:11:16"}]},"id":2942,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2341:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2345:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2341:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2928,"kind":"baseConstructorSpecifier","modifierName":{"id":2925,"name":"ConfirmedOwner","nameLocations":["2326:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"2326:14:16"},"nodeType":"ModifierInvocation","src":"2326:26:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"_baseFee","nameLocation":"2294:8:16","nodeType":"VariableDeclaration","scope":2942,"src":"2287:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2920,"name":"uint96","nodeType":"ElementaryTypeName","src":"2287:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"2311:13:16","nodeType":"VariableDeclaration","scope":2942,"src":"2304:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2922,"name":"uint96","nodeType":"ElementaryTypeName","src":"2304:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2286:39:16"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[],"src":"2353:0:16"},"scope":3711,"src":"2275:161:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2957,"nodeType":"Block","src":"2556:75:16","statements":[{"expression":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2948,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2562:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage","typeString":"struct VRFCoordinatorV2Mock.Config storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"66616c7365","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2597:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2949,"name":"Config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2573:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Config_$2881_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Config storage pointer)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2581:14:16"],"names":["reentrancyLock"],"nodeType":"FunctionCall","src":"2573:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Config memory"}},"src":"2562:42:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage","typeString":"struct VRFCoordinatorV2Mock.Config storage ref"}},"id":2953,"nodeType":"ExpressionStatement","src":"2562:42:16"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2954,"name":"ConfigSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"2615:9:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2956,"nodeType":"EmitStatement","src":"2610:16:16"}]},"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"2440:75:16","text":" @notice Sets the configuration of the vrfv2 mock coordinator"},"functionSelector":"8b673e7a","id":2958,"implemented":true,"kind":"function","modifiers":[{"id":2946,"kind":"modifierInvocation","modifierName":{"id":2945,"name":"onlyOwner","nameLocations":["2546:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"2546:9:16"},"nodeType":"ModifierInvocation","src":"2546:9:16"}],"name":"setConfig","nameLocation":"2527:9:16","nodeType":"FunctionDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[],"src":"2536:2:16"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[],"src":"2556:0:16"},"scope":3711,"src":"2518:113:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3000,"nodeType":"Block","src":"2721:204:16","statements":[{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"consumers","nameLocation":"2744:9:16","nodeType":"VariableDeclaration","scope":3000,"src":"2727:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2970,"nodeType":"ArrayTypeName","src":"2727:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2975,"initialValue":{"baseExpression":{"id":2972,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2756:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":2974,"indexExpression":{"id":2973,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"2768:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2756:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2727:48:16"},{"body":{"id":2996,"nodeType":"Block","src":"2828:75:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2987,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2840:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2989,"indexExpression":{"id":2988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2850:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2840:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2990,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"2856:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2840:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"nodeType":"IfStatement","src":"2836:61:16","trueBody":{"id":2994,"nodeType":"Block","src":"2867:30:16","statements":[{"expression":{"hexValue":"74727565","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2884:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2966,"id":2993,"nodeType":"Return","src":"2877:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2801:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2981,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2805:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:16","memberName":"length","nodeType":"MemberAccess","src":"2805:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2801:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2997,"initializationExpression":{"assignments":[2977],"declarations":[{"constant":false,"id":2977,"mutability":"mutable","name":"i","nameLocation":"2794:1:16","nodeType":"VariableDeclaration","scope":2997,"src":"2786:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2786:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2979,"initialValue":{"hexValue":"30","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2798:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2786:13:16"},"loopExpression":{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2823:3:16","subExpression":{"id":2984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2823:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ExpressionStatement","src":"2823:3:16"},"nodeType":"ForStatement","src":"2781:122:16"},{"expression":{"hexValue":"66616c7365","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2915:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2966,"id":2999,"nodeType":"Return","src":"2908:12:16"}]},"functionSelector":"ed5eb06d","id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"consumerIsAdded","nameLocation":"2644:15:16","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"_subId","nameLocation":"2667:6:16","nodeType":"VariableDeclaration","scope":3001,"src":"2660:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2959,"name":"uint64","nodeType":"ElementaryTypeName","src":"2660:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"_consumer","nameLocation":"2683:9:16","nodeType":"VariableDeclaration","scope":3001,"src":"2675:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2659:34:16"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"2715:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2964,"name":"bool","nodeType":"ElementaryTypeName","src":"2715:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2714:6:16"},"scope":3711,"src":"2635:290:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3018,"nodeType":"Block","src":"2990:97:16","statements":[{"condition":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3000:35:16","subExpression":{"arguments":[{"id":3008,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3017:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3009,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3025:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3007,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3001:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,address) view returns (bool)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3016,"nodeType":"IfStatement","src":"2996:80:16","trueBody":{"id":3015,"nodeType":"Block","src":"3037:39:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3012,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3052:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"RevertStatement","src":"3045:24:16"}]}},{"id":3017,"nodeType":"PlaceholderStatement","src":"3081:1:16"}]},"id":3019,"name":"onlyValidConsumer","nameLocation":"2938:17:16","nodeType":"ModifierDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"_subId","nameLocation":"2963:6:16","nodeType":"VariableDeclaration","scope":3019,"src":"2956:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3002,"name":"uint64","nodeType":"ElementaryTypeName","src":"2956:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"_consumer","nameLocation":"2979:9:16","nodeType":"VariableDeclaration","scope":3019,"src":"2971:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3004,"name":"address","nodeType":"ElementaryTypeName","src":"2971:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2955:34:16"},"src":"2929:158:16","virtual":false,"visibility":"internal"},{"body":{"id":3039,"nodeType":"Block","src":"3730:82:16","statements":[{"expression":{"arguments":[{"id":3030,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"3767:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3031,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"3779:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3804:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3790:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"3794:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"nodeType":"ArrayTypeName","src":"3794:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3790:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3029,"name":"fulfillRandomWordsWithOverride","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"3736:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[] memory)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3736:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3038,"nodeType":"ExpressionStatement","src":"3736:71:16"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"3091:547:16","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":3040,"implemented":true,"kind":"function","modifiers":[{"id":3027,"kind":"modifierInvocation","modifierName":{"id":3026,"name":"nonReentrant","nameLocations":["3717:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3665,"src":"3717:12:16"},"nodeType":"ModifierInvocation","src":"3717:12:16"}],"name":"fulfillRandomWords","nameLocation":"3650:18:16","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"_requestId","nameLocation":"3677:10:16","nodeType":"VariableDeclaration","scope":3040,"src":"3669:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"3669:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"_consumer","nameLocation":"3697:9:16","nodeType":"VariableDeclaration","scope":3040,"src":"3689:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3023,"name":"address","nodeType":"ElementaryTypeName","src":"3689:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3668:39:16"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[],"src":"3730:0:16"},"scope":3711,"src":"3641:171:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3214,"nodeType":"Block","src":"4203:1088:16","statements":[{"assignments":[3052],"declarations":[{"constant":false,"id":3052,"mutability":"mutable","name":"startGas","nameLocation":"4217:8:16","nodeType":"VariableDeclaration","scope":3214,"src":"4209:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4209:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3055,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3053,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4228:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4228:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4209:28:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3056,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4247:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2914_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":3058,"indexExpression":{"id":3057,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"4258:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4247:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":3059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4270:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"4247:28:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4279:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4247:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3067,"nodeType":"IfStatement","src":"4243:83:16","trueBody":{"id":3066,"nodeType":"Block","src":"4282:44:16","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4297:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":3062,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4290:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4290:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3065,"nodeType":"ExpressionStatement","src":"4290:29:16"}]}},{"assignments":[3070],"declarations":[{"constant":false,"id":3070,"mutability":"mutable","name":"req","nameLocation":"4346:3:16","nodeType":"VariableDeclaration","scope":3214,"src":"4331:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":3069,"nodeType":"UserDefinedTypeName","pathNode":{"id":3068,"name":"Request","nameLocations":["4331:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2914,"src":"4331:7:16"},"referencedDeclaration":2914,"src":"4331:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":3074,"initialValue":{"baseExpression":{"id":3071,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4352:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2914_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":3073,"indexExpression":{"id":3072,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"4363:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4352:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4331:43:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3075,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4385:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4392:6:16","memberName":"length","nodeType":"MemberAccess","src":"4385:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4402:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4385:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3117,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4592:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4599:6:16","memberName":"length","nodeType":"MemberAccess","src":"4592:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3119,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4609:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":3120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4613:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"4609:12:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4592:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"4588:77:16","trueBody":{"id":3125,"nodeType":"Block","src":"4623:42:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3122,"name":"InvalidRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"4638:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"RevertStatement","src":"4631:27:16"}]}},"id":3127,"nodeType":"IfStatement","src":"4381:284:16","trueBody":{"id":3116,"nodeType":"Block","src":"4405:177:16","statements":[{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3079,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4413:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3083,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4436:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":3084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4440:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"4436:12:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4422:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ArrayTypeName","src":"4426:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"4413:36:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3087,"nodeType":"ExpressionStatement","src":"4413:36:16"},{"body":{"id":3114,"nodeType":"Block","src":"4500:76:16","statements":[{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3099,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4510:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3101,"indexExpression":{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"4517:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4510:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3107,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"4551:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"4563:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3105,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4540:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4544:6:16","memberName":"encode","nodeType":"MemberAccess","src":"4540:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3104,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4530:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4522:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"4522:7:16","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4522:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4510:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3113,"nodeType":"ExpressionStatement","src":"4510:57:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"4477:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3093,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4481:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4485:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"4481:12:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4477:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3115,"initializationExpression":{"assignments":[3089],"declarations":[{"constant":false,"id":3089,"mutability":"mutable","name":"i","nameLocation":"4470:1:16","nodeType":"VariableDeclaration","scope":3115,"src":"4462:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4462:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3091,"initialValue":{"hexValue":"30","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4474:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4462:13:16"},"loopExpression":{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4495:3:16","subExpression":{"id":3096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"4495:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"4495:3:16"},"nodeType":"ForStatement","src":"4457:119:16"}]}},{"assignments":[3130],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"v","nameLocation":"4689:1:16","nodeType":"VariableDeclaration","scope":3214,"src":"4671:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$1042","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":3129,"nodeType":"UserDefinedTypeName","pathNode":{"id":3128,"name":"VRFConsumerBaseV2","nameLocations":["4671:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":1042,"src":"4671:17:16"},"referencedDeclaration":1042,"src":"4671:17:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$1042","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":3131,"nodeType":"VariableDeclarationStatement","src":"4671:19:16"},{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"callReq","nameLocation":"4709:7:16","nodeType":"VariableDeclaration","scope":3214,"src":"4696:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"4696:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3142,"initialValue":{"arguments":[{"expression":{"expression":{"id":3136,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"4742:1:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$1042","typeString":"contract VRFConsumerBaseV2"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4744:21:16","memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":1041,"src":"4742:23:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:8:16","memberName":"selector","nodeType":"MemberAccess","src":"4742:32:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3139,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"4776:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3140,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4788:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":3134,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4719:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4723:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4719:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4719:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4696:99:16"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3143,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4801:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage","typeString":"struct VRFCoordinatorV2Mock.Config storage ref"}},"id":3145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4810:14:16","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2880,"src":"4801:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4827:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4801:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"ExpressionStatement","src":"4801:30:16"},{"assignments":[3150,null],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"success","nameLocation":"4843:7:16","nodeType":"VariableDeclaration","scope":3214,"src":"4838:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3149,"name":"bool","nodeType":"ElementaryTypeName","src":"4838:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3158,"initialValue":{"arguments":[{"id":3156,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"4898:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3151,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"4856:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4866:4:16","memberName":"call","nodeType":"MemberAccess","src":"4856:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3153,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4876:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":3154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4880:16:16","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2911,"src":"4876:20:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"4856:41:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4837:69:16"},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3159,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4912:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage","typeString":"struct VRFCoordinatorV2Mock.Config storage ref"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4921:14:16","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2880,"src":"4912:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4938:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4912:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3164,"nodeType":"ExpressionStatement","src":"4912:31:16"},{"assignments":[3166],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"payment","nameLocation":"4957:7:16","nodeType":"VariableDeclaration","scope":3214,"src":"4950:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3165,"name":"uint96","nodeType":"ElementaryTypeName","src":"4950:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3180,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"4974:8:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"4987:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3171,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4998:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4987:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4986:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3175,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"5011:14:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4986:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4985:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4974:52:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4967:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3167,"name":"uint96","nodeType":"ElementaryTypeName","src":"4967:6:16","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4967:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4950:77:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3181,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5037:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3184,"indexExpression":{"expression":{"id":3182,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"5053:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":3183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5057:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"5053:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5037:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5064:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2896,"src":"5037:34:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3186,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5074:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5037:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3192,"nodeType":"IfStatement","src":"5033:93:16","trueBody":{"id":3191,"nodeType":"Block","src":"5083:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3188,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"5098:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3190,"nodeType":"RevertStatement","src":"5091:28:16"}]}},{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3193,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5131:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3196,"indexExpression":{"expression":{"id":3194,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"5147:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5151:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"5147:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5131:26:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5158:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2896,"src":"5131:34:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3198,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5169:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5131:45:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3200,"nodeType":"ExpressionStatement","src":"5131:45:16"},{"expression":{"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5182:31:16","subExpression":{"components":[{"baseExpression":{"id":3201,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5190:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2914_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":3203,"indexExpression":{"id":3202,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5201:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5190:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":3204,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5189:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3206,"nodeType":"ExpressionStatement","src":"5182:31:16"},{"eventCall":{"arguments":[{"id":3208,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5245:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3209,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5257:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3210,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5269:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3211,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"5278:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3207,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"5224:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3213,"nodeType":"EmitStatement","src":"5219:67:16"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"3816:273:16","text":" @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"},"functionSelector":"08e3898e","id":3215,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWordsWithOverride","nameLocation":"4101:30:16","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"_requestId","nameLocation":"4140:10:16","nodeType":"VariableDeclaration","scope":3215,"src":"4132:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4132:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"_consumer","nameLocation":"4160:9:16","nodeType":"VariableDeclaration","scope":3215,"src":"4152:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"4152:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"_words","nameLocation":"4188:6:16","nodeType":"VariableDeclaration","scope":3215,"src":"4171:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ArrayTypeName","src":"4171:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4131:64:16"},"returnParameters":{"id":3050,"nodeType":"ParameterList","parameters":[],"src":"4203:0:16"},"scope":3711,"src":"4092:1199:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3259,"nodeType":"Block","src":"5557:278:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3223,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5567:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3225,"indexExpression":{"id":3224,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5583:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5567:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5591:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"5567:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5608:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5600:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"5600:7:16","typeDescriptions":{}}},"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5600:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5567:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"5563:92:16","trueBody":{"id":3235,"nodeType":"Block","src":"5612:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3232,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"5627:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3234,"nodeType":"RevertStatement","src":"5620:28:16"}]}},{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"oldBalance","nameLocation":"5667:10:16","nodeType":"VariableDeclaration","scope":3259,"src":"5660:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3237,"name":"uint96","nodeType":"ElementaryTypeName","src":"5660:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3243,"initialValue":{"expression":{"baseExpression":{"id":3239,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5680:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3241,"indexExpression":{"id":3240,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5696:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5680:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2896,"src":"5680:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5660:51:16"},{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3244,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5717:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3246,"indexExpression":{"id":3245,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5733:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5717:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5741:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2896,"src":"5717:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3248,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"5752:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5717:42:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3250,"nodeType":"ExpressionStatement","src":"5717:42:16"},{"eventCall":{"arguments":[{"id":3252,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5789:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3253,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"5797:10:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"5809:10:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3255,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"5822:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5809:20:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3251,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5770:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5770:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3258,"nodeType":"EmitStatement","src":"5765:65:16"}]},"documentation":{"id":3216,"nodeType":"StructuredDocumentation","src":"5295:195:16","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"5502:16:16","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"_subId","nameLocation":"5526:6:16","nodeType":"VariableDeclaration","scope":3260,"src":"5519:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3217,"name":"uint64","nodeType":"ElementaryTypeName","src":"5519:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"_amount","nameLocation":"5541:7:16","nodeType":"VariableDeclaration","scope":3260,"src":"5534:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3219,"name":"uint96","nodeType":"ElementaryTypeName","src":"5534:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"5518:31:16"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[],"src":"5557:0:16"},"scope":3711,"src":"5493:342:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2712],"body":{"id":3331,"nodeType":"Block","src":"6092:516:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3283,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"6102:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3285,"indexExpression":{"id":3284,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"6118:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6102:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6126:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"6102:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6143:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6135:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"6135:7:16","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6102:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"6098:92:16","trueBody":{"id":3295,"nodeType":"Block","src":"6147:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3292,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"6162:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"RevertStatement","src":"6155:28:16"}]}},{"assignments":[3298],"declarations":[{"constant":false,"id":3298,"mutability":"mutable","name":"requestId","nameLocation":"6204:9:16","nodeType":"VariableDeclaration","scope":3331,"src":"6196:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"6196:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3301,"initialValue":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6216:17:16","subExpression":{"id":3299,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"6216:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6196:37:16"},{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"preSeed","nameLocation":"6247:7:16","nodeType":"VariableDeclaration","scope":3331,"src":"6239:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"6239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3306,"initialValue":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6257:15:16","subExpression":{"id":3304,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"6257:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6239:33:16"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3307,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"6279:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2914_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":3309,"indexExpression":{"id":3308,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6290:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6279:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3311,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"6319:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3312,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"6345:17:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3313,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6374:9:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3310,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"6303:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$2914_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6312:5:16","6327:16:16","6364:8:16"],"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"6303:82:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"6279:106:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2914_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":3316,"nodeType":"ExpressionStatement","src":"6279:106:16"},{"eventCall":{"arguments":[{"id":3318,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6425:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3319,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6441:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3320,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"6458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3321,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"6473:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3322,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"6487:28:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3323,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"6523:17:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3324,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6548:9:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6565:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6569:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6565:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3317,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"6397:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:184:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3328,"nodeType":"EmitStatement","src":"6392:189:16"},{"expression":{"id":3329,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6594:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3282,"id":3330,"nodeType":"Return","src":"6587:16:16"}]},"functionSelector":"5d3b1d30","id":3332,"implemented":true,"kind":"function","modifiers":[{"id":3274,"kind":"modifierInvocation","modifierName":{"id":3273,"name":"nonReentrant","nameLocations":["6023:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3665,"src":"6023:12:16"},"nodeType":"ModifierInvocation","src":"6023:12:16"},{"arguments":[{"id":3276,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"6054:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6062:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6066:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6062:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3279,"kind":"modifierInvocation","modifierName":{"id":3275,"name":"onlyValidConsumer","nameLocations":["6036:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"6036:17:16"},"nodeType":"ModifierInvocation","src":"6036:37:16"}],"name":"requestRandomWords","nameLocation":"5848:18:16","nodeType":"FunctionDefinition","overrides":{"id":3272,"nodeType":"OverrideSpecifier","overrides":[],"src":"6014:8:16"},"parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"_keyHash","nameLocation":"5880:8:16","nodeType":"VariableDeclaration","scope":3332,"src":"5872:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5872:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"_subId","nameLocation":"5901:6:16","nodeType":"VariableDeclaration","scope":3332,"src":"5894:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3263,"name":"uint64","nodeType":"ElementaryTypeName","src":"5894:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"5920:28:16","nodeType":"VariableDeclaration","scope":3332,"src":"5913:35:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3265,"name":"uint16","nodeType":"ElementaryTypeName","src":"5913:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"5961:17:16","nodeType":"VariableDeclaration","scope":3332,"src":"5954:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3267,"name":"uint32","nodeType":"ElementaryTypeName","src":"5954:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"_numWords","nameLocation":"5991:9:16","nodeType":"VariableDeclaration","scope":3332,"src":"5984:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3269,"name":"uint32","nodeType":"ElementaryTypeName","src":"5984:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5866:138:16"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3332,"src":"6083:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6083:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6082:9:16"},"scope":3711,"src":"5839:769:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2718],"body":{"id":3359,"nodeType":"Block","src":"6684:197:16","statements":[{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6690:16:16","subExpression":{"id":3338,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"6690:14:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3340,"nodeType":"ExpressionStatement","src":"6690:16:16"},{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3341,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"6712:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3343,"indexExpression":{"id":3342,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"6728:14:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6712:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6767:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6771:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6767:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6788:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3344,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"6746:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$2897_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6760:5:16","6779:7:16"],"names":["owner","balance"],"nodeType":"FunctionCall","src":"6746:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"6712:79:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3350,"nodeType":"ExpressionStatement","src":"6712:79:16"},{"eventCall":{"arguments":[{"id":3352,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"6822:14:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6838:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6838:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3351,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6802:19:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3356,"nodeType":"EmitStatement","src":"6797:52:16"},{"expression":{"id":3357,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"6862:14:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3337,"id":3358,"nodeType":"Return","src":"6855:21:16"}]},"functionSelector":"a21a23e4","id":3360,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"6621:18:16","nodeType":"FunctionDefinition","overrides":{"id":3334,"nodeType":"OverrideSpecifier","overrides":[],"src":"6651:8:16"},"parameters":{"id":3333,"nodeType":"ParameterList","parameters":[],"src":"6639:2:16"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"_subId","nameLocation":"6676:6:16","nodeType":"VariableDeclaration","scope":3360,"src":"6669:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3335,"name":"uint64","nodeType":"ElementaryTypeName","src":"6669:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6668:15:16"},"scope":3711,"src":"6612:269:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2733],"body":{"id":3403,"nodeType":"Block","src":"7041:203:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3375,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7051:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3377,"indexExpression":{"id":3376,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7067:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7051:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7075:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"7051:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7092:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7084:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3379,"name":"address","nodeType":"ElementaryTypeName","src":"7084:7:16","typeDescriptions":{}}},"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7084:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7051:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3388,"nodeType":"IfStatement","src":"7047:92:16","trueBody":{"id":3387,"nodeType":"Block","src":"7096:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3384,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"7111:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7111:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3386,"nodeType":"RevertStatement","src":"7104:28:16"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":3389,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7152:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3391,"indexExpression":{"id":3390,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7168:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7152:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7176:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2896,"src":"7152:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7185:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":3394,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7188:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3396,"indexExpression":{"id":3395,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7204:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7188:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7212:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"7188:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3398,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"7219:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":3400,"indexExpression":{"id":3399,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7231:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7219:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":3401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7151:88:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,int_const 0,address,address[] storage ref)"}},"functionReturnParameters":3374,"id":3402,"nodeType":"Return","src":"7144:95:16"}]},"functionSelector":"a47c7696","id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"6894:15:16","nodeType":"FunctionDefinition","overrides":{"id":3364,"nodeType":"OverrideSpecifier","overrides":[],"src":"6947:8:16"},"parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"_subId","nameLocation":"6922:6:16","nodeType":"VariableDeclaration","scope":3404,"src":"6915:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3361,"name":"uint64","nodeType":"ElementaryTypeName","src":"6915:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6909:23:16"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"balance","nameLocation":"6972:7:16","nodeType":"VariableDeclaration","scope":3404,"src":"6965:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3365,"name":"uint96","nodeType":"ElementaryTypeName","src":"6965:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"reqCount","nameLocation":"6988:8:16","nodeType":"VariableDeclaration","scope":3404,"src":"6981:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3367,"name":"uint64","nodeType":"ElementaryTypeName","src":"6981:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"owner","nameLocation":"7006:5:16","nodeType":"VariableDeclaration","scope":3404,"src":"6998:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"6998:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"consumers","nameLocation":"7030:9:16","nodeType":"VariableDeclaration","scope":3404,"src":"7013:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"7013:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3372,"nodeType":"ArrayTypeName","src":"7013:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6964:76:16"},"scope":3711,"src":"6885:359:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2771],"body":{"id":3432,"nodeType":"Block","src":"7356:120:16","statements":[{"eventCall":{"arguments":[{"id":3418,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7388:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3419,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"7396:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3420,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7401:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3422,"indexExpression":{"id":3421,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7417:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7401:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7425:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2896,"src":"7401:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3417,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7367:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7367:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"EmitStatement","src":"7362:71:16"},{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7439:32:16","subExpression":{"components":[{"baseExpression":{"id":3426,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7447:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3428,"indexExpression":{"id":3427,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7463:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7447:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":3429,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"7446:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"7439:32:16"}]},"functionSelector":"d7ae1d30","id":3433,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3412,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"7335:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3413,"kind":"modifierInvocation","modifierName":{"id":3411,"name":"onlySubOwner","nameLocations":["7322:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3467,"src":"7322:12:16"},"nodeType":"ModifierInvocation","src":"7322:20:16"},{"id":3415,"kind":"modifierInvocation","modifierName":{"id":3414,"name":"nonReentrant","nameLocations":["7343:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3665,"src":"7343:12:16"},"nodeType":"ModifierInvocation","src":"7343:12:16"}],"name":"cancelSubscription","nameLocation":"7257:18:16","nodeType":"FunctionDefinition","overrides":{"id":3410,"nodeType":"OverrideSpecifier","overrides":[],"src":"7313:8:16"},"parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"_subId","nameLocation":"7283:6:16","nodeType":"VariableDeclaration","scope":3433,"src":"7276:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3405,"name":"uint64","nodeType":"ElementaryTypeName","src":"7276:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"_to","nameLocation":"7299:3:16","nodeType":"VariableDeclaration","scope":3433,"src":"7291:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3407,"name":"address","nodeType":"ElementaryTypeName","src":"7291:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7275:28:16"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[],"src":"7356:0:16"},"scope":3711,"src":"7248:228:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3466,"nodeType":"Block","src":"7517:209:16","statements":[{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"owner","nameLocation":"7531:5:16","nodeType":"VariableDeclaration","scope":3466,"src":"7523:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3437,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3443,"initialValue":{"expression":{"baseExpression":{"id":3439,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7539:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2897_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":3441,"indexExpression":{"id":3440,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"7555:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7539:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2897_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7563:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"7539:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7523:45:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"7578:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7595:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7587:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3445,"name":"address","nodeType":"ElementaryTypeName","src":"7587:7:16","typeDescriptions":{}}},"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7587:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7578:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"7574:68:16","trueBody":{"id":3453,"nodeType":"Block","src":"7599:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3450,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"7614:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7614:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3452,"nodeType":"RevertStatement","src":"7607:28:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7651:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7655:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7651:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"7665:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7651:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"7647:68:16","trueBody":{"id":3463,"nodeType":"Block","src":"7672:43:16","statements":[{"errorCall":{"arguments":[{"id":3460,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"7702:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3459,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"7687:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7687:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3462,"nodeType":"RevertStatement","src":"7680:28:16"}]}},{"id":3465,"nodeType":"PlaceholderStatement","src":"7720:1:16"}]},"id":3467,"name":"onlySubOwner","nameLocation":"7489:12:16","nodeType":"ModifierDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"_subId","nameLocation":"7509:6:16","nodeType":"VariableDeclaration","scope":3467,"src":"7502:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3434,"name":"uint64","nodeType":"ElementaryTypeName","src":"7502:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7501:15:16"},"src":"7480:246:16","virtual":false,"visibility":"internal"},{"baseFunctions":[2696],"body":{"id":3487,"nodeType":"Block","src":"7824:48:16","statements":[{"expression":{"components":[{"hexValue":"33","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7838:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7841:7:16","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7850:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7854:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3481,"nodeType":"ArrayTypeName","src":"7854:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7850:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":3485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7837:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":3477,"id":3486,"nodeType":"Return","src":"7830:37:16"}]},"functionSelector":"00012291","id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"7739:16:16","nodeType":"FunctionDefinition","overrides":{"id":3469,"nodeType":"OverrideSpecifier","overrides":[],"src":"7772:8:16"},"parameters":{"id":3468,"nodeType":"ParameterList","parameters":[],"src":"7755:2:16"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"7790:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3470,"name":"uint16","nodeType":"ElementaryTypeName","src":"7790:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"7798:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3472,"name":"uint32","nodeType":"ElementaryTypeName","src":"7798:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"7806:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7806:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3475,"nodeType":"ArrayTypeName","src":"7806:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7789:34:16"},"scope":3711,"src":"7730:142:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[2755],"body":{"id":3529,"nodeType":"Block","src":"7970:251:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3499,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"7980:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":3501,"indexExpression":{"id":3500,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"7992:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7980:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8000:6:16","memberName":"length","nodeType":"MemberAccess","src":"7980:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3503,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8010:13:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"7980:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3509,"nodeType":"IfStatement","src":"7976:89:16","trueBody":{"id":3508,"nodeType":"Block","src":"8025:40:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3505,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"8040:16:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8040:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3507,"nodeType":"RevertStatement","src":"8033:25:16"}]}},{"condition":{"arguments":[{"id":3511,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"8091:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3512,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"8099:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3510,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"8075:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,address) view returns (bool)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8075:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"nodeType":"IfStatement","src":"8071:61:16","trueBody":{"id":3515,"nodeType":"Block","src":"8111:21:16","statements":[{"functionReturnParameters":3498,"id":3514,"nodeType":"Return","src":"8119:7:16"}]}},{"expression":{"arguments":[{"id":3521,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"8163:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3517,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"8138:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":3519,"indexExpression":{"id":3518,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"8150:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8138:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8158:4:16","memberName":"push","nodeType":"MemberAccess","src":"8138:24:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8138:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3523,"nodeType":"ExpressionStatement","src":"8138:35:16"},{"eventCall":{"arguments":[{"id":3525,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"8198:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3526,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"8206:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3524,"name":"ConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"8184:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"EmitStatement","src":"8179:37:16"}]},"functionSelector":"7341c10c","id":3530,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3496,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"7962:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3497,"kind":"modifierInvocation","modifierName":{"id":3495,"name":"onlySubOwner","nameLocations":["7949:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3467,"src":"7949:12:16"},"nodeType":"ModifierInvocation","src":"7949:20:16"}],"name":"addConsumer","nameLocation":"7885:11:16","nodeType":"FunctionDefinition","overrides":{"id":3494,"nodeType":"OverrideSpecifier","overrides":[],"src":"7940:8:16"},"parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"_subId","nameLocation":"7904:6:16","nodeType":"VariableDeclaration","scope":3530,"src":"7897:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3489,"name":"uint64","nodeType":"ElementaryTypeName","src":"7897:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"_consumer","nameLocation":"7920:9:16","nodeType":"VariableDeclaration","scope":3530,"src":"7912:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"7912:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7896:34:16"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[],"src":"7970:0:16"},"scope":3711,"src":"7876:345:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2763],"body":{"id":3602,"nodeType":"Block","src":"8384:337:16","statements":[{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"consumers","nameLocation":"8408:9:16","nodeType":"VariableDeclaration","scope":3602,"src":"8390:27:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3549,"name":"address","nodeType":"ElementaryTypeName","src":"8390:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3550,"nodeType":"ArrayTypeName","src":"8390:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3555,"initialValue":{"baseExpression":{"id":3552,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"8420:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":3554,"indexExpression":{"id":3553,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8432:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8420:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8390:49:16"},{"body":{"id":3595,"nodeType":"Block","src":"8492:179:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3567,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8504:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":3569,"indexExpression":{"id":3568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"8514:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8504:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3570,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8520:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8504:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3594,"nodeType":"IfStatement","src":"8500:165:16","trueBody":{"id":3593,"nodeType":"Block","src":"8531:134:16","statements":[{"assignments":[3573],"declarations":[{"constant":false,"id":3573,"mutability":"mutable","name":"last","nameLocation":"8549:4:16","nodeType":"VariableDeclaration","scope":3593,"src":"8541:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"8541:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3580,"initialValue":{"baseExpression":{"id":3574,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8556:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":3579,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3575,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8566:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8576:6:16","memberName":"length","nodeType":"MemberAccess","src":"8566:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8566:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8556:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8541:46:16"},{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3581,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8597:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":3583,"indexExpression":{"id":3582,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"8607:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8597:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3584,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"8612:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8597:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3586,"nodeType":"ExpressionStatement","src":"8597:19:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3587,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8626:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8636:3:16","memberName":"pop","nodeType":"MemberAccess","src":"8626:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8626:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3591,"nodeType":"ExpressionStatement","src":"8626:15:16"},{"id":3592,"nodeType":"Break","src":"8651:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"8465:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3561,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8469:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8479:6:16","memberName":"length","nodeType":"MemberAccess","src":"8469:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3596,"initializationExpression":{"assignments":[3557],"declarations":[{"constant":false,"id":3557,"mutability":"mutable","name":"i","nameLocation":"8458:1:16","nodeType":"VariableDeclaration","scope":3596,"src":"8450:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3559,"initialValue":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8462:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8450:13:16"},"loopExpression":{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8487:3:16","subExpression":{"id":3564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"8487:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"8487:3:16"},"nodeType":"ForStatement","src":"8445:226:16"},{"eventCall":{"arguments":[{"id":3598,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8698:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3599,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8706:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3597,"name":"ConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"8682:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8682:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3601,"nodeType":"EmitStatement","src":"8677:39:16"}]},"functionSelector":"9f87fad7","id":3603,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3538,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8326:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3539,"kind":"modifierInvocation","modifierName":{"id":3537,"name":"onlySubOwner","nameLocations":["8313:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3467,"src":"8313:12:16"},"nodeType":"ModifierInvocation","src":"8313:20:16"},{"arguments":[{"id":3541,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8352:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3542,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8360:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3543,"kind":"modifierInvocation","modifierName":{"id":3540,"name":"onlyValidConsumer","nameLocations":["8334:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"8334:17:16"},"nodeType":"ModifierInvocation","src":"8334:36:16"},{"id":3545,"kind":"modifierInvocation","modifierName":{"id":3544,"name":"nonReentrant","nameLocations":["8371:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3665,"src":"8371:12:16"},"nodeType":"ModifierInvocation","src":"8371:12:16"}],"name":"removeConsumer","nameLocation":"8234:14:16","nodeType":"FunctionDefinition","overrides":{"id":3536,"nodeType":"OverrideSpecifier","overrides":[],"src":"8304:8:16"},"parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"_subId","nameLocation":"8261:6:16","nodeType":"VariableDeclaration","scope":3603,"src":"8254:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3531,"name":"uint64","nodeType":"ElementaryTypeName","src":"8254:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"_consumer","nameLocation":"8281:9:16","nodeType":"VariableDeclaration","scope":3603,"src":"8273:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"8273:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8248:46:16"},"returnParameters":{"id":3546,"nodeType":"ParameterList","parameters":[],"src":"8384:0:16"},"scope":3711,"src":"8225:496:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3620,"nodeType":"Block","src":"8929:46:16","statements":[{"expression":{"components":[{"hexValue":"34","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8943:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},{"hexValue":"325f3530305f303030","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8946:9:16","typeDescriptions":{"typeIdentifier":"t_rational_2500000_by_1","typeString":"int_const 2500000"},"value":"2_500_000"},{"hexValue":"325f373030","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8957:5:16","typeDescriptions":{"typeIdentifier":"t_rational_2700_by_1","typeString":"int_const 2700"},"value":"2_700"},{"hexValue":"3333323835","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8964:5:16","typeDescriptions":{"typeIdentifier":"t_rational_33285_by_1","typeString":"int_const 33285"},"value":"33285"}],"id":3618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8942:28:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_4_by_1_$_t_rational_2500000_by_1_$_t_rational_2700_by_1_$_t_rational_33285_by_1_$","typeString":"tuple(int_const 4,int_const 2500000,int_const 2700,int_const 33285)"}},"functionReturnParameters":3613,"id":3619,"nodeType":"Return","src":"8935:35:16"}]},"functionSelector":"c3f909d4","id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"8734:9:16","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[],"src":"8743:2:16"},"returnParameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"8795:27:16","nodeType":"VariableDeclaration","scope":3621,"src":"8788:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3605,"name":"uint16","nodeType":"ElementaryTypeName","src":"8788:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"maxGasLimit","nameLocation":"8837:11:16","nodeType":"VariableDeclaration","scope":3621,"src":"8830:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3607,"name":"uint32","nodeType":"ElementaryTypeName","src":"8830:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"8863:16:16","nodeType":"VariableDeclaration","scope":3621,"src":"8856:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3609,"name":"uint32","nodeType":"ElementaryTypeName","src":"8856:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"8894:26:16","nodeType":"VariableDeclaration","scope":3621,"src":"8887:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3611,"name":"uint32","nodeType":"ElementaryTypeName","src":"8887:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8780:146:16"},"scope":3711,"src":"8725:250:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3653,"nodeType":"Block","src":"9379:190:16","statements":[{"expression":{"components":[{"hexValue":"313030303030","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9400:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9426:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9452:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9478:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:6:16","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"30","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9539:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9548:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9557:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9392:172:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 0,int_const 0,int_const 0,int_const 0)"}},"functionReturnParameters":3641,"id":3652,"nodeType":"Return","src":"9385:179:16"}]},"functionSelector":"5fbbc0d2","id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeConfig","nameLocation":"8988:12:16","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[],"src":"9000:2:16"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"9052:30:16","nodeType":"VariableDeclaration","scope":3654,"src":"9045:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3623,"name":"uint32","nodeType":"ElementaryTypeName","src":"9045:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"9097:30:16","nodeType":"VariableDeclaration","scope":3654,"src":"9090:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3625,"name":"uint32","nodeType":"ElementaryTypeName","src":"9090:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"9142:30:16","nodeType":"VariableDeclaration","scope":3654,"src":"9135:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3627,"name":"uint32","nodeType":"ElementaryTypeName","src":"9135:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"9187:30:16","nodeType":"VariableDeclaration","scope":3654,"src":"9180:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3629,"name":"uint32","nodeType":"ElementaryTypeName","src":"9180:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"9232:30:16","nodeType":"VariableDeclaration","scope":3654,"src":"9225:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3631,"name":"uint32","nodeType":"ElementaryTypeName","src":"9225:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"reqsForTier2","nameLocation":"9277:12:16","nodeType":"VariableDeclaration","scope":3654,"src":"9270:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3633,"name":"uint24","nodeType":"ElementaryTypeName","src":"9270:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3636,"mutability":"mutable","name":"reqsForTier3","nameLocation":"9304:12:16","nodeType":"VariableDeclaration","scope":3654,"src":"9297:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3635,"name":"uint24","nodeType":"ElementaryTypeName","src":"9297:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"reqsForTier4","nameLocation":"9331:12:16","nodeType":"VariableDeclaration","scope":3654,"src":"9324:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3637,"name":"uint24","nodeType":"ElementaryTypeName","src":"9324:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"reqsForTier5","nameLocation":"9358:12:16","nodeType":"VariableDeclaration","scope":3654,"src":"9351:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3639,"name":"uint24","nodeType":"ElementaryTypeName","src":"9351:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"9037:339:16"},"scope":3711,"src":"8979:590:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3664,"nodeType":"Block","src":"9597:79:16","statements":[{"condition":{"expression":{"id":3656,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"9607:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2881_storage","typeString":"struct VRFCoordinatorV2Mock.Config storage ref"}},"id":3657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9616:14:16","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2880,"src":"9607:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3662,"nodeType":"IfStatement","src":"9603:62:16","trueBody":{"id":3661,"nodeType":"Block","src":"9632:33:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3658,"name":"Reentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9647:9:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9647:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"RevertStatement","src":"9640:18:16"}]}},{"id":3663,"nodeType":"PlaceholderStatement","src":"9670:1:16"}]},"id":3665,"name":"nonReentrant","nameLocation":"9582:12:16","nodeType":"ModifierDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[],"src":"9594:2:16"},"src":"9573:103:16","virtual":false,"visibility":"internal"},{"body":{"id":3672,"nodeType":"Block","src":"9748:49:16","statements":[{"expression":{"hexValue":"34303030303030303030303030303030","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9761:16:16","typeDescriptions":{"typeIdentifier":"t_rational_4000000000000000_by_1","typeString":"int_const 4000000000000000"},"value":"4000000000000000"},"functionReturnParameters":3669,"id":3671,"nodeType":"Return","src":"9754:23:16"}]},"functionSelector":"356dac71","id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackWeiPerUnitLink","nameLocation":"9689:25:16","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[],"src":"9714:2:16"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3673,"src":"9740:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3667,"name":"int256","nodeType":"ElementaryTypeName","src":"9740:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9739:8:16"},"scope":3711,"src":"9680:117:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[2741],"body":{"id":3685,"nodeType":"Block","src":"9908:36:16","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9921:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":3681,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9914:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9914:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"ExpressionStatement","src":"9914:25:16"}]},"functionSelector":"04c357cb","id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"9810:32:16","nodeType":"FunctionDefinition","overrides":{"id":3679,"nodeType":"OverrideSpecifier","overrides":[],"src":"9899:8:16"},"parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"9843:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3674,"name":"uint64","nodeType":"ElementaryTypeName","src":"9843:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"9862:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3676,"name":"address","nodeType":"ElementaryTypeName","src":"9862:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9842:42:16"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[],"src":"9908:0:16"},"scope":3711,"src":"9801:143:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[2747],"body":{"id":3696,"nodeType":"Block","src":"10031:36:16","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10044:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":3692,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10037:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10037:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3695,"nodeType":"ExpressionStatement","src":"10037:25:16"}]},"functionSelector":"82359740","id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"9957:31:16","nodeType":"FunctionDefinition","overrides":{"id":3690,"nodeType":"OverrideSpecifier","overrides":[],"src":"10022:8:16"},"parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"9989:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3687,"name":"uint64","nodeType":"ElementaryTypeName","src":"9989:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9988:19:16"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[],"src":"10031:0:16"},"scope":3711,"src":"9948:119:16","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[2778],"body":{"id":3709,"nodeType":"Block","src":"10155:36:16","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10168:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":3705,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10161:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3708,"nodeType":"ExpressionStatement","src":"10161:25:16"}]},"functionSelector":"e82ad7d4","id":3710,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"10080:20:16","nodeType":"FunctionDefinition","overrides":{"id":3701,"nodeType":"OverrideSpecifier","overrides":[],"src":"10131:8:16"},"parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3710,"src":"10101:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3698,"name":"uint64","nodeType":"ElementaryTypeName","src":"10101:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10100:18:16"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3710,"src":"10149:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3702,"name":"bool","nodeType":"ElementaryTypeName","src":"10149:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10148:6:16"},"scope":3711,"src":"10071:120:16","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":3712,"src":"487:9706:16","usedErrors":[2800,2802,2806,2808,2810,2812,2814]}],"src":"92:10102:16"},"id":16},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2538],"IVRFSubscriptionV2Plus":[2641],"SubscriptionAPI":[2357],"VRFConsumerBaseV2Plus":[2520],"VRFCoordinatorV2_5Mock":[4532],"VRFV2PlusClient":[2683]},"id":4533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3713,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"94:24:17"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"../dev/interfaces/IVRFCoordinatorV2Plus.sol","id":3716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4533,"sourceUnit":2539,"src":"166:106:17","symbolAliases":[{"foreign":{"id":3714,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"174:21:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3715,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"197:22:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../dev/libraries/VRFV2PlusClient.sol","id":3718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4533,"sourceUnit":2684,"src":"273:69:17","symbolAliases":[{"foreign":{"id":3717,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"281:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol","file":"../dev/SubscriptionAPI.sol","id":3720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4533,"sourceUnit":2358,"src":"343:59:17","symbolAliases":[{"foreign":{"id":3719,"name":"SubscriptionAPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"351:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"../dev/VRFConsumerBaseV2Plus.sol","id":3722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4533,"sourceUnit":2521,"src":"403:71:17","symbolAliases":[{"foreign":{"id":3721,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"411:21:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3723,"name":"SubscriptionAPI","nameLocations":["511:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":2357,"src":"511:15:17"},"id":3724,"nodeType":"InheritanceSpecifier","src":"511:15:17"},{"baseName":{"id":3725,"name":"IVRFCoordinatorV2Plus","nameLocations":["528:21:17"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"528:21:17"},"id":3726,"nodeType":"InheritanceSpecifier","src":"528:21:17"}],"canonicalName":"VRFCoordinatorV2_5Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4532,"linearizedBaseContracts":[4532,2538,2357,2641,260,39,202,276],"name":"VRFCoordinatorV2_5Mock","nameLocation":"485:22:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1eebc117","id":3728,"mutability":"immutable","name":"i_base_fee","nameLocation":"578:10:17","nodeType":"VariableDeclaration","scope":4532,"src":"554:34:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3727,"name":"uint96","nodeType":"ElementaryTypeName","src":"554:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"dcab3dcf","id":3730,"mutability":"immutable","name":"i_gas_price","nameLocation":"616:11:17","nodeType":"VariableDeclaration","scope":4532,"src":"592:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3729,"name":"uint96","nodeType":"ElementaryTypeName","src":"592:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"13478329","id":3732,"mutability":"immutable","name":"i_wei_per_unit_link","nameLocation":"655:19:17","nodeType":"VariableDeclaration","scope":4532,"src":"631:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3731,"name":"int256","nodeType":"ElementaryTypeName","src":"631:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"public"},{"errorSelector":"41abc801","id":3734,"name":"InvalidRequest","nameLocation":"685:14:17","nodeType":"ErrorDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[],"src":"699:2:17"},"src":"679:23:17"},{"errorSelector":"3f3df5b6","id":3736,"name":"InvalidRandomWords","nameLocation":"711:18:17","nodeType":"ErrorDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[],"src":"729:2:17"},"src":"705:27:17"},{"errorSelector":"5247fdce","id":3738,"name":"InvalidExtraArgsTag","nameLocation":"741:19:17","nodeType":"ErrorDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[],"src":"760:2:17"},"src":"735:28:17"},{"errorSelector":"d6234725","id":3740,"name":"NotImplemented","nameLocation":"772:14:17","nodeType":"ErrorDefinition","parameters":{"id":3739,"nodeType":"ParameterList","parameters":[],"src":"786:2:17"},"src":"766:23:17"},{"anonymous":false,"eventSelector":"eb0e3652e0f44f417695e6e90f2f42c99b65cd7169074c5a654b16b9748c3a4e","id":3760,"name":"RandomWordsRequested","nameLocation":"799:20:17","nodeType":"EventDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"841:7:17","nodeType":"VariableDeclaration","scope":3760,"src":"825:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"825:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3744,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"862:9:17","nodeType":"VariableDeclaration","scope":3760,"src":"854:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3746,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"885:7:17","nodeType":"VariableDeclaration","scope":3760,"src":"877:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3748,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"914:5:17","nodeType":"VariableDeclaration","scope":3760,"src":"898:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3750,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"932:27:17","nodeType":"VariableDeclaration","scope":3760,"src":"925:34:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3749,"name":"uint16","nodeType":"ElementaryTypeName","src":"925:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3752,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"972:16:17","nodeType":"VariableDeclaration","scope":3760,"src":"965:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3751,"name":"uint32","nodeType":"ElementaryTypeName","src":"965:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3754,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"1001:8:17","nodeType":"VariableDeclaration","scope":3760,"src":"994:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3753,"name":"uint32","nodeType":"ElementaryTypeName","src":"994:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3756,"indexed":false,"mutability":"mutable","name":"extraArgs","nameLocation":"1021:9:17","nodeType":"VariableDeclaration","scope":3760,"src":"1015:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3755,"name":"bytes","nodeType":"ElementaryTypeName","src":"1015:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3758,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1052:6:17","nodeType":"VariableDeclaration","scope":3760,"src":"1036:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"819:243:17"},"src":"793:270:17"},{"anonymous":false,"eventSelector":"aeb4b4786571e184246d39587f659abf0e26f41f6a3358692250382c0cdb47b7","id":3776,"name":"RandomWordsFulfilled","nameLocation":"1072:20:17","nodeType":"EventDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1114:9:17","nodeType":"VariableDeclaration","scope":3776,"src":"1098:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"1137:10:17","nodeType":"VariableDeclaration","scope":3776,"src":"1129:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3766,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1169:5:17","nodeType":"VariableDeclaration","scope":3776,"src":"1153:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"1187:7:17","nodeType":"VariableDeclaration","scope":3776,"src":"1180:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3767,"name":"uint96","nodeType":"ElementaryTypeName","src":"1180:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3770,"indexed":false,"mutability":"mutable","name":"nativePayment","nameLocation":"1205:13:17","nodeType":"VariableDeclaration","scope":3776,"src":"1200:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3769,"name":"bool","nodeType":"ElementaryTypeName","src":"1200:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3772,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1229:7:17","nodeType":"VariableDeclaration","scope":3776,"src":"1224:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3771,"name":"bool","nodeType":"ElementaryTypeName","src":"1224:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3774,"indexed":false,"mutability":"mutable","name":"onlyPremium","nameLocation":"1247:11:17","nodeType":"VariableDeclaration","scope":3776,"src":"1242:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3773,"name":"bool","nodeType":"ElementaryTypeName","src":"1242:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1092:170:17"},"src":"1066:197:17"},{"anonymous":false,"eventSelector":"4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be","id":3778,"name":"ConfigSet","nameLocation":"1272:9:17","nodeType":"EventDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[],"src":"1281:2:17"},"src":"1266:18:17"},{"constant":false,"id":3780,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1305:14:17","nodeType":"VariableDeclaration","scope":4532,"src":"1289:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3779,"name":"uint64","nodeType":"ElementaryTypeName","src":"1289:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1340:15:17","nodeType":"VariableDeclaration","scope":4532,"src":"1323:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1358:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1380:13:17","nodeType":"VariableDeclaration","scope":4532,"src":"1363:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2_5Mock.Request","id":3795,"members":[{"constant":false,"id":3788,"mutability":"mutable","name":"subId","nameLocation":"1433:5:17","nodeType":"VariableDeclaration","scope":3795,"src":"1425:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1451:16:17","nodeType":"VariableDeclaration","scope":3795,"src":"1444:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3789,"name":"uint32","nodeType":"ElementaryTypeName","src":"1444:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"numWords","nameLocation":"1480:8:17","nodeType":"VariableDeclaration","scope":3795,"src":"1473:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3791,"name":"uint32","nodeType":"ElementaryTypeName","src":"1473:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"extraArgs","nameLocation":"1500:9:17","nodeType":"VariableDeclaration","scope":3795,"src":"1494:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3793,"name":"bytes","nodeType":"ElementaryTypeName","src":"1494:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Request","nameLocation":"1411:7:17","nodeType":"StructDefinition","scope":4532,"src":"1404:110:17","visibility":"public"},{"constant":false,"id":3800,"mutability":"mutable","name":"s_requests","nameLocation":"1554:10:17","nodeType":"VariableDeclaration","scope":4532,"src":"1517:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$3795_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)"},"typeName":{"id":3799,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1517:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$3795_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3798,"nodeType":"UserDefinedTypeName","pathNode":{"id":3797,"name":"Request","nameLocations":["1536:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3795,"src":"1536:7:17"},"referencedDeclaration":3795,"src":"1536:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"}}},"visibility":"internal"},{"body":{"id":3826,"nodeType":"Block","src":"1688:121:17","statements":[{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3811,"name":"i_base_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"1694:10:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3812,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"1707:8:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1694:21:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3814,"nodeType":"ExpressionStatement","src":"1694:21:17"},{"expression":{"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3815,"name":"i_gas_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"1721:11:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3816,"name":"_gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"1735:9:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1721:23:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3818,"nodeType":"ExpressionStatement","src":"1721:23:17"},{"expression":{"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3819,"name":"i_wei_per_unit_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1750:19:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3820,"name":"_weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"1772:15:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1750:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3822,"nodeType":"ExpressionStatement","src":"1750:37:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3823,"name":"setConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"1793:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1793:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3825,"nodeType":"ExpressionStatement","src":"1793:11:17"}]},"id":3827,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":3809,"kind":"baseConstructorSpecifier","modifierName":{"id":3808,"name":"SubscriptionAPI","nameLocations":["1670:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":2357,"src":"1670:15:17"},"nodeType":"ModifierInvocation","src":"1670:17:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"_baseFee","nameLocation":"1618:8:17","nodeType":"VariableDeclaration","scope":3827,"src":"1611:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3801,"name":"uint96","nodeType":"ElementaryTypeName","src":"1611:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"_gasPrice","nameLocation":"1635:9:17","nodeType":"VariableDeclaration","scope":3827,"src":"1628:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3803,"name":"uint96","nodeType":"ElementaryTypeName","src":"1628:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"_weiPerUnitLink","nameLocation":"1653:15:17","nodeType":"VariableDeclaration","scope":3827,"src":"1646:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3805,"name":"int256","nodeType":"ElementaryTypeName","src":"1646:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1610:59:17"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[],"src":"1688:0:17"},"scope":4532,"src":"1599:210:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3850,"nodeType":"Block","src":"1929:359:17","statements":[{"expression":{"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1935:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2012:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2039:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2076:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2101:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2143:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2187:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2221:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2253:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3834,"name":"Config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1946:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Config_$1262_storage_ptr_$","typeString":"type(struct SubscriptionAPI.Config storage pointer)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1961:27:17","1999:11:17","2021:16:17","2048:26:17","2085:14:17","2114:27:17","2152:33:17","2196:23:17","2230:21:17"],"names":["minimumRequestConfirmations","maxGasLimit","stalenessSeconds","gasAfterPaymentCalculation","reentrancyLock","fulfillmentFlatFeeNativePPM","fulfillmentFlatFeeLinkDiscountPPM","nativePremiumPercentage","linkPremiumPercentage"],"nodeType":"FunctionCall","src":"1946:315:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_memory_ptr","typeString":"struct SubscriptionAPI.Config memory"}},"src":"1935:326:17","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":3846,"nodeType":"ExpressionStatement","src":"1935:326:17"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3847,"name":"ConfigSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"2272:9:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2272:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3849,"nodeType":"EmitStatement","src":"2267:16:17"}]},"documentation":{"id":3828,"nodeType":"StructuredDocumentation","src":"1813:75:17","text":" @notice Sets the configuration of the vrfv2 mock coordinator"},"functionSelector":"8b673e7a","id":3851,"implemented":true,"kind":"function","modifiers":[{"id":3831,"kind":"modifierInvocation","modifierName":{"id":3830,"name":"onlyOwner","nameLocations":["1919:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"1919:9:17"},"nodeType":"ModifierInvocation","src":"1919:9:17"}],"name":"setConfig","nameLocation":"1900:9:17","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[],"src":"1909:2:17"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[],"src":"1929:0:17"},"scope":4532,"src":"1891:397:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3867,"nodeType":"Block","src":"2379:55:17","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":3860,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2392:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":3862,"indexExpression":{"id":3861,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"2404:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2392:22:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":3864,"indexExpression":{"id":3863,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"2415:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2392:30:17","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":3865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2423:6:17","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1148,"src":"2392:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3859,"id":3866,"nodeType":"Return","src":"2385:44:17"}]},"functionSelector":"953e9c75","id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"consumerIsAdded","nameLocation":"2301:15:17","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"_subId","nameLocation":"2325:6:17","nodeType":"VariableDeclaration","scope":3868,"src":"2317:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"_consumer","nameLocation":"2341:9:17","nodeType":"VariableDeclaration","scope":3868,"src":"2333:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2316:35:17"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3868,"src":"2373:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3857,"name":"bool","nodeType":"ElementaryTypeName","src":"2373:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2372:6:17"},"scope":4532,"src":"2292:142:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3887,"nodeType":"Block","src":"2500:114:17","statements":[{"condition":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2510:35:17","subExpression":{"arguments":[{"id":3875,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"2527:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3876,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"2535:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3874,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"2511:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"IfStatement","src":"2506:97:17","trueBody":{"id":3884,"nodeType":"Block","src":"2547:56:17","statements":[{"errorCall":{"arguments":[{"id":3880,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"2578:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3881,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"2586:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3879,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"2562:15:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2562:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3883,"nodeType":"RevertStatement","src":"2555:41:17"}]}},{"id":3886,"nodeType":"PlaceholderStatement","src":"2608:1:17"}]},"id":3888,"name":"onlyValidConsumer","nameLocation":"2447:17:17","nodeType":"ModifierDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"_subId","nameLocation":"2473:6:17","nodeType":"VariableDeclaration","scope":3888,"src":"2465:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"_consumer","nameLocation":"2489:9:17","nodeType":"VariableDeclaration","scope":3888,"src":"2481:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3871,"name":"address","nodeType":"ElementaryTypeName","src":"2481:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:35:17"},"src":"2438:176:17","virtual":false,"visibility":"internal"},{"body":{"id":3908,"nodeType":"Block","src":"3257:82:17","statements":[{"expression":{"arguments":[{"id":3899,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"3294:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3900,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"3306:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3331:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3317:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3321:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3902,"nodeType":"ArrayTypeName","src":"3321:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3898,"name":"fulfillRandomWordsWithOverride","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3263:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[] memory)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3263:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3907,"nodeType":"ExpressionStatement","src":"3263:71:17"}]},"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"2618:547:17","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":3909,"implemented":true,"kind":"function","modifiers":[{"id":3896,"kind":"modifierInvocation","modifierName":{"id":3895,"name":"nonReentrant","nameLocations":["3244:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"3244:12:17"},"nodeType":"ModifierInvocation","src":"3244:12:17"}],"name":"fulfillRandomWords","nameLocation":"3177:18:17","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"_requestId","nameLocation":"3204:10:17","nodeType":"VariableDeclaration","scope":3909,"src":"3196:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"_consumer","nameLocation":"3224:9:17","nodeType":"VariableDeclaration","scope":3909,"src":"3216:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"3216:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3195:39:17"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[],"src":"3257:0:17"},"scope":4532,"src":"3168:171:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4102,"nodeType":"Block","src":"3730:1319:17","statements":[{"assignments":[3921],"declarations":[{"constant":false,"id":3921,"mutability":"mutable","name":"startGas","nameLocation":"3744:8:17","nodeType":"VariableDeclaration","scope":4102,"src":"3736:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"3736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3922,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3755:7:17","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3736:28:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3925,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3774:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$3795_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":3927,"indexExpression":{"id":3926,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"3785:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3774:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"id":3928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3797:5:17","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":3788,"src":"3774:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3806:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3774:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3935,"nodeType":"IfStatement","src":"3770:77:17","trueBody":{"id":3934,"nodeType":"Block","src":"3809:38:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3931,"name":"InvalidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"3824:14:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3824:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3933,"nodeType":"RevertStatement","src":"3817:23:17"}]}},{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"req","nameLocation":"3867:3:17","nodeType":"VariableDeclaration","scope":4102,"src":"3852:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"},"typeName":{"id":3937,"nodeType":"UserDefinedTypeName","pathNode":{"id":3936,"name":"Request","nameLocations":["3852:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3795,"src":"3852:7:17"},"referencedDeclaration":3795,"src":"3852:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"}},"visibility":"internal"}],"id":3942,"initialValue":{"baseExpression":{"id":3939,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3873:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$3795_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":3941,"indexExpression":{"id":3940,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"3884:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3873:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3852:43:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3943,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"3906:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3913:6:17","memberName":"length","nodeType":"MemberAccess","src":"3906:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3923:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3906:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3985,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"4113:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4120:6:17","memberName":"length","nodeType":"MemberAccess","src":"4113:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3987,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4130:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4134:8:17","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":3792,"src":"4130:12:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4113:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3994,"nodeType":"IfStatement","src":"4109:77:17","trueBody":{"id":3993,"nodeType":"Block","src":"4144:42:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3990,"name":"InvalidRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"4159:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4159:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3992,"nodeType":"RevertStatement","src":"4152:27:17"}]}},"id":3995,"nodeType":"IfStatement","src":"3902:284:17","trueBody":{"id":3984,"nodeType":"Block","src":"3926:177:17","statements":[{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3947,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"3934:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3951,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"3957:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3961:8:17","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":3792,"src":"3957:12:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3943:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3947:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3949,"nodeType":"ArrayTypeName","src":"3947:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3934:36:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3955,"nodeType":"ExpressionStatement","src":"3934:36:17"},{"body":{"id":3982,"nodeType":"Block","src":"4021:76:17","statements":[{"expression":{"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3967,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"4031:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3969,"indexExpression":{"id":3968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"4038:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4031:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3975,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4072:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"4084:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4061:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4065:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4061:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3972,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4051:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4051:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4043:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4043:7:17","typeDescriptions":{}}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4031:57:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3981,"nodeType":"ExpressionStatement","src":"4031:57:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3998:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3961,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4002:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4006:8:17","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":3792,"src":"4002:12:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3998:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3983,"initializationExpression":{"assignments":[3957],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"i","nameLocation":"3991:1:17","nodeType":"VariableDeclaration","scope":3983,"src":"3983:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"3983:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3959,"initialValue":{"hexValue":"30","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3983:13:17"},"loopExpression":{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4016:3:17","subExpression":{"id":3964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"4016:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3966,"nodeType":"ExpressionStatement","src":"4016:3:17"},"nodeType":"ForStatement","src":"3978:119:17"}]}},{"assignments":[3998],"declarations":[{"constant":false,"id":3998,"mutability":"mutable","name":"v","nameLocation":"4214:1:17","nodeType":"VariableDeclaration","scope":4102,"src":"4192:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2520","typeString":"contract VRFConsumerBaseV2Plus"},"typeName":{"id":3997,"nodeType":"UserDefinedTypeName","pathNode":{"id":3996,"name":"VRFConsumerBaseV2Plus","nameLocations":["4192:21:17"],"nodeType":"IdentifierPath","referencedDeclaration":2520,"src":"4192:21:17"},"referencedDeclaration":2520,"src":"4192:21:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2520","typeString":"contract VRFConsumerBaseV2Plus"}},"visibility":"internal"}],"id":3999,"nodeType":"VariableDeclarationStatement","src":"4192:23:17"},{"assignments":[4001],"declarations":[{"constant":false,"id":4001,"mutability":"mutable","name":"callReq","nameLocation":"4234:7:17","nodeType":"VariableDeclaration","scope":4102,"src":"4221:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4000,"name":"bytes","nodeType":"ElementaryTypeName","src":"4221:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4010,"initialValue":{"arguments":[{"expression":{"expression":{"id":4004,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"4267:1:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2520","typeString":"contract VRFConsumerBaseV2Plus"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4269:21:17","memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"4267:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4291:8:17","memberName":"selector","nodeType":"MemberAccess","src":"4267:32:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4007,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4301:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4008,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"4313:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":4002,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4244:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4248:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4244:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4244:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4221:99:17"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4011,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"4326:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":4013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4335:14:17","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"4326:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4352:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4326:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"nodeType":"ExpressionStatement","src":"4326:30:17"},{"assignments":[4018,null],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"success","nameLocation":"4439:7:17","nodeType":"VariableDeclaration","scope":4102,"src":"4434:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4017,"name":"bool","nodeType":"ElementaryTypeName","src":"4434:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4026,"initialValue":{"arguments":[{"id":4024,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"4494:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4019,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"4452:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4462:4:17","memberName":"call","nodeType":"MemberAccess","src":"4452:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4021,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4472:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":4022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4476:16:17","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"4472:20:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"4452:41:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4433:69:17"},{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4027,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"4508:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1262_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":4029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4517:14:17","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"4508:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4534:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4508:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"ExpressionStatement","src":"4508:31:17"},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"nativePayment","nameLocation":"4551:13:17","nodeType":"VariableDeclaration","scope":4102,"src":"4546:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4033,"name":"bool","nodeType":"ElementaryTypeName","src":"4546:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4048,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"expression":{"id":4037,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4573:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":4038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4577:9:17","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"4573:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4044,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4039,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4587:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":4040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4591:9:17","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"4587:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4601:6:17","memberName":"length","nodeType":"MemberAccess","src":"4587:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4587:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4573:39:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4567:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4035,"name":"uint8","nodeType":"ElementaryTypeName","src":"4567:5:17","typeDescriptions":{}}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4567:51:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4546:72:17"},{"assignments":[4050],"declarations":[{"constant":false,"id":4050,"mutability":"mutable","name":"rawPayment","nameLocation":"4633:10:17","nodeType":"VariableDeclaration","scope":4102,"src":"4625:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4625:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"i_base_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"4646:10:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"4661:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4053,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4672:7:17","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4672:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4661:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4660:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4057,"name":"i_gas_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"4685:11:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4660:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4659:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4646:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4625:72:17"},{"condition":{"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4707:14:17","subExpression":{"id":4062,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4708:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4077,"nodeType":"IfStatement","src":"4703:98:17","trueBody":{"id":4076,"nodeType":"Block","src":"4723:78:17","statements":[{"expression":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"4731:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4745:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4066,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"4752:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4745:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4744:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":4071,"name":"i_wei_per_unit_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4774:19:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4766:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4766:7:17","typeDescriptions":{}}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4744:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4731:63:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4075,"nodeType":"ExpressionStatement","src":"4731:63:17"}]}},{"assignments":[4079],"declarations":[{"constant":false,"id":4079,"mutability":"mutable","name":"payment","nameLocation":"4813:7:17","nodeType":"VariableDeclaration","scope":4102,"src":"4806:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4078,"name":"uint96","nodeType":"ElementaryTypeName","src":"4806:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4084,"initialValue":{"arguments":[{"id":4082,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"4830:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4823:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4080,"name":"uint96","nodeType":"ElementaryTypeName","src":"4823:6:17","typeDescriptions":{}}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4806:35:17"},{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4907:31:17","subExpression":{"components":[{"baseExpression":{"id":4085,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"4915:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$3795_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":4087,"indexExpression":{"id":4086,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4926:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4915:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}}],"id":4088,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4914:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4090,"nodeType":"ExpressionStatement","src":"4907:31:17"},{"eventCall":{"arguments":[{"id":4092,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4970:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4093,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4982:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4094,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4994:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":4095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4998:5:17","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":3788,"src":"4994:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4096,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"5005:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4097,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"5014:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4098,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5029:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66616c7365","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5038:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4091,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"4949:20:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$_t_bool_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint256,uint96,bool,bool,bool)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4949:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"EmitStatement","src":"4944:100:17"}]},"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"3343:273:17","text":" @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"},"functionSelector":"08e3898e","id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWordsWithOverride","nameLocation":"3628:30:17","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"_requestId","nameLocation":"3667:10:17","nodeType":"VariableDeclaration","scope":4103,"src":"3659:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"_consumer","nameLocation":"3687:9:17","nodeType":"VariableDeclaration","scope":4103,"src":"3679:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3913,"name":"address","nodeType":"ElementaryTypeName","src":"3679:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"_words","nameLocation":"3715:6:17","nodeType":"VariableDeclaration","scope":4103,"src":"3698:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3698:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3916,"nodeType":"ArrayTypeName","src":"3698:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3658:64:17"},"returnParameters":{"id":3919,"nodeType":"ParameterList","parameters":[],"src":"3730:0:17"},"scope":4532,"src":"3619:1430:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4173,"nodeType":"Block","src":"5137:538:17","statements":[{"assignments":[4114],"declarations":[{"constant":false,"id":4114,"mutability":"mutable","name":"subcription","nameLocation":"5164:11:17","nodeType":"VariableDeclaration","scope":4173,"src":"5143:32:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"},"typeName":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"Subscription","nameLocations":["5143:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1138,"src":"5143:12:17"},"referencedDeclaration":1138,"src":"5143:12:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"}},"visibility":"internal"}],"id":4118,"initialValue":{"baseExpression":{"id":4115,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5178:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":4117,"indexExpression":{"id":4116,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5194:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5178:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5143:57:17"},{"condition":{"id":4119,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"5210:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4171,"nodeType":"Block","src":"5457:214:17","statements":[{"assignments":[4147],"declarations":[{"constant":false,"id":4147,"mutability":"mutable","name":"prevBal","nameLocation":"5472:7:17","nodeType":"VariableDeclaration","scope":4171,"src":"5465:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4146,"name":"uint96","nodeType":"ElementaryTypeName","src":"5465:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4150,"initialValue":{"expression":{"id":4148,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"5482:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":4149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5494:7:17","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"5482:19:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5465:36:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"5513:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4152,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5523:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5513:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4158,"nodeType":"IfStatement","src":"5509:70:17","trueBody":{"id":4157,"nodeType":"Block","src":"5532:47:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4154,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5549:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5549:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4156,"nodeType":"RevertStatement","src":"5542:28:17"}]}},{"expression":{"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4159,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"5586:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":4161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5598:7:17","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"5586:19:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"5608:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4163,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5618:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5608:17:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5586:39:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4166,"nodeType":"ExpressionStatement","src":"5586:39:17"},{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"5633:20:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4168,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5657:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5633:31:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4170,"nodeType":"ExpressionStatement","src":"5633:31:17"}]},"id":4172,"nodeType":"IfStatement","src":"5206:465:17","trueBody":{"id":4145,"nodeType":"Block","src":"5225:226:17","statements":[{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"prevBal","nameLocation":"5240:7:17","nodeType":"VariableDeclaration","scope":4145,"src":"5233:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4120,"name":"uint96","nodeType":"ElementaryTypeName","src":"5233:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4124,"initialValue":{"expression":{"id":4122,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"5250:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":4123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5262:13:17","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5250:25:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5233:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"5287:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4126,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5297:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5287:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"5283:70:17","trueBody":{"id":4131,"nodeType":"Block","src":"5306:47:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4128,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5323:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4130,"nodeType":"RevertStatement","src":"5316:28:17"}]}},{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4133,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"5360:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":4135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5372:13:17","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5360:25:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"5388:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4137,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5398:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5388:17:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5360:45:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4140,"nodeType":"ExpressionStatement","src":"5360:45:17"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"5413:20:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4142,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"5437:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5413:31:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4144,"nodeType":"ExpressionStatement","src":"5413:31:17"}]}}]},"id":4174,"implemented":true,"kind":"function","modifiers":[],"name":"_chargePayment","nameLocation":"5062:14:17","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"payment","nameLocation":"5084:7:17","nodeType":"VariableDeclaration","scope":4174,"src":"5077:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4104,"name":"uint96","nodeType":"ElementaryTypeName","src":"5077:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"nativePayment","nameLocation":"5098:13:17","nodeType":"VariableDeclaration","scope":4174,"src":"5093:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4106,"name":"bool","nodeType":"ElementaryTypeName","src":"5093:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"subId","nameLocation":"5121:5:17","nodeType":"VariableDeclaration","scope":4174,"src":"5113:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5076:51:17"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"5137:0:17"},"scope":4532,"src":"5053:622:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"5943:332:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4182,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5953:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":4184,"indexExpression":{"id":4183,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"5975:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5953:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":4185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5983:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"5953:35:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6000:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5992:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4186,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:17","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5953:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4195,"nodeType":"IfStatement","src":"5949:98:17","trueBody":{"id":4194,"nodeType":"Block","src":"6004:43:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4191,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"6019:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4193,"nodeType":"RevertStatement","src":"6012:28:17"}]}},{"assignments":[4197],"declarations":[{"constant":false,"id":4197,"mutability":"mutable","name":"oldBalance","nameLocation":"6060:10:17","nodeType":"VariableDeclaration","scope":4228,"src":"6052:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6052:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"initialValue":{"expression":{"baseExpression":{"id":4198,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6073:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":4200,"indexExpression":{"id":4199,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6089:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6073:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":4201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6097:7:17","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"6073:31:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"6052:52:17"},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4203,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6110:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1138_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":4205,"indexExpression":{"id":4204,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6126:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6110:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1138_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":4206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6134:7:17","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"6110:31:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4209,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"6152:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4207,"name":"uint96","nodeType":"ElementaryTypeName","src":"6145:6:17","typeDescriptions":{}}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6145:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6110:50:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4212,"nodeType":"ExpressionStatement","src":"6110:50:17"},{"expression":{"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4213,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"6166:14:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4216,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"6191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6184:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4214,"name":"uint96","nodeType":"ElementaryTypeName","src":"6184:6:17","typeDescriptions":{}}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6184:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6166:33:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4219,"nodeType":"ExpressionStatement","src":"6166:33:17"},{"eventCall":{"arguments":[{"id":4221,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6229:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4222,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"6237:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"6249:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4224,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"6262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6249:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4220,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6210:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6210:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4227,"nodeType":"EmitStatement","src":"6205:65:17"}]},"documentation":{"id":4175,"nodeType":"StructuredDocumentation","src":"5679:195:17","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"115e3c0d","id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"5886:16:17","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"_subId","nameLocation":"5911:6:17","nodeType":"VariableDeclaration","scope":4229,"src":"5903:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"_amount","nameLocation":"5927:7:17","nodeType":"VariableDeclaration","scope":4229,"src":"5919:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"5919:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:33:17"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[],"src":"5943:0:17"},"scope":4532,"src":"5877:398:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4270,"nodeType":"Block","src":"6518:273:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4238,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"6528:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6538:6:17","memberName":"length","nodeType":"MemberAccess","src":"6528:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6548:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6528:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"nodeType":"IfStatement","src":"6524:100:17","trueBody":{"id":4247,"nodeType":"Block","src":"6551:73:17","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6610:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4242,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"6566:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6582:11:17","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"6566:27:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2654_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6595:13:17"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"6566:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}},"functionReturnParameters":4237,"id":4246,"nodeType":"Return","src":"6559:58:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4251,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"6640:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6633:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":4249,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6633:6:17","typeDescriptions":{}}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4253,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"6654:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6670:17:17","memberName":"EXTRA_ARGS_V1_TAG","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"6654:33:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6633:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4259,"nodeType":"IfStatement","src":"6629:88:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4256,"name":"InvalidExtraArgsTag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"6696:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6696:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4258,"nodeType":"RevertStatement","src":"6689:28:17"}},{"expression":{"arguments":[{"baseExpression":{"id":4262,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"6741:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6741:13:17","startExpression":{"hexValue":"34","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6751:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"expression":{"id":4265,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"6757:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6773:11:17","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"6757:27:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2654_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}}],"id":4267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6756:29:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2654_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2654_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}],"expression":{"id":4260,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6730:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6734:6:17","memberName":"decode","nodeType":"MemberAccess","src":"6730:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6730:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}},"functionReturnParameters":4237,"id":4269,"nodeType":"Return","src":"6723:63:17"}]},"documentation":{"id":4230,"nodeType":"StructuredDocumentation","src":"6279:131:17","text":"@dev Convert the extra args bytes into a struct\n @param extraArgs The extra args bytes\n @return The extra args struct"},"id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"_fromBytes","nameLocation":"6422:10:17","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"extraArgs","nameLocation":"6448:9:17","nodeType":"VariableDeclaration","scope":4271,"src":"6433:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4231,"name":"bytes","nodeType":"ElementaryTypeName","src":"6433:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6432:26:17"},"returnParameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"6482:34:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":4235,"nodeType":"UserDefinedTypeName","pathNode":{"id":4234,"name":"VRFV2PlusClient.ExtraArgsV1","nameLocations":["6482:15:17","6498:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2654,"src":"6482:27:17"},"referencedDeclaration":2654,"src":"6482:27:17","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"6481:36:17"},"scope":4532,"src":"6413:378:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[2537],"body":{"id":4362,"nodeType":"Block","src":"6972:749:17","statements":[{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"subId","nameLocation":"6986:5:17","nodeType":"VariableDeclaration","scope":4362,"src":"6978:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6978:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4292,"initialValue":{"expression":{"id":4290,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"6994:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6999:5:17","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"6994:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6978:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4293,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7014:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":4295,"indexExpression":{"id":4294,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"7036:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7014:28:17","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":4296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7043:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1140,"src":"7014:34:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:17","typeDescriptions":{}}},"id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7014:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"IfStatement","src":"7010:97:17","trueBody":{"id":4305,"nodeType":"Block","src":"7064:43:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4302,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"7079:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4304,"nodeType":"RevertStatement","src":"7072:28:17"}]}},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"requestId","nameLocation":"7121:9:17","nodeType":"VariableDeclaration","scope":4362,"src":"7113:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"7113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7133:17:17","subExpression":{"id":4309,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"7133:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7113:37:17"},{"assignments":[4313],"declarations":[{"constant":false,"id":4313,"mutability":"mutable","name":"preSeed","nameLocation":"7164:7:17","nodeType":"VariableDeclaration","scope":4362,"src":"7156:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"7156:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4316,"initialValue":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7174:15:17","subExpression":{"id":4314,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7174:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7156:33:17"},{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"extraArgsBytes","nameLocation":"7209:14:17","nodeType":"VariableDeclaration","scope":4362,"src":"7196:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4317,"name":"bytes","nodeType":"ElementaryTypeName","src":"7196:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4326,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":4322,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7266:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7271:9:17","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"7266:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4321,"name":"_fromBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"7255:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExtraArgsV1_$2654_memory_ptr_$","typeString":"function (bytes calldata) pure returns (struct VRFV2PlusClient.ExtraArgsV1 memory)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7255:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":4319,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"7226:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:12:17","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"7226:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2654_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7226:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7196:86:17"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4327,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"7288:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$3795_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":4329,"indexExpression":{"id":4328,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"7299:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7288:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4331,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7335:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7340:5:17","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"7335:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4333,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7371:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7376:16:17","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2662,"src":"7371:21:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4335,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7410:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7415:8:17","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2664,"src":"7410:13:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4337,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7442:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7447:9:17","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"7442:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4330,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"7312:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$3795_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2_5Mock.Request storage pointer)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7328:5:17","7353:16:17","7400:8:17","7431:9:17"],"names":["subId","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"7312:151:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"src":"7288:175:17","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$3795_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"id":4341,"nodeType":"ExpressionStatement","src":"7288:175:17"},{"eventCall":{"arguments":[{"expression":{"id":4343,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7503:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7508:7:17","memberName":"keyHash","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"7503:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4345,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"7523:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4346,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"7540:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4347,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7555:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7560:5:17","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"7555:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4349,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7573:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7578:20:17","memberName":"requestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2660,"src":"7573:25:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":4351,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7606:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7611:16:17","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2662,"src":"7606:21:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4353,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7635:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7640:8:17","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2664,"src":"7635:13:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4355,"name":"extraArgsBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"7656:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":4356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7678:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7682:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7678:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4342,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"7475:20:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,uint16,uint32,uint32,bytes memory,address)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7475:219:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4359,"nodeType":"EmitStatement","src":"7470:224:17"},{"expression":{"id":4360,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"7707:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4287,"id":4361,"nodeType":"Return","src":"7700:16:17"}]},"functionSelector":"9b1c385e","id":4363,"implemented":true,"kind":"function","modifiers":[{"id":4278,"kind":"modifierInvocation","modifierName":{"id":4277,"name":"nonReentrant","nameLocations":["6899:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"6899:12:17"},"nodeType":"ModifierInvocation","src":"6899:12:17"},{"arguments":[{"expression":{"id":4280,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"6930:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6935:5:17","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"6930:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6942:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6946:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6942:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4284,"kind":"modifierInvocation","modifierName":{"id":4279,"name":"onlyValidConsumer","nameLocations":["6912:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":3888,"src":"6912:17:17"},"nodeType":"ModifierInvocation","src":"6912:41:17"}],"name":"requestRandomWords","nameLocation":"6804:18:17","nodeType":"FunctionDefinition","overrides":{"id":4276,"nodeType":"OverrideSpecifier","overrides":[],"src":"6890:8:17"},"parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"_req","nameLocation":"6872:4:17","nodeType":"VariableDeclaration","scope":4363,"src":"6828:48:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":4273,"nodeType":"UserDefinedTypeName","pathNode":{"id":4272,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["6828:15:17","6844:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"6828:34:17"},"referencedDeclaration":2667,"src":"6828:34:17","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"6822:58:17"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"6963:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6963:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6962:9:17"},"scope":4532,"src":"6795:926:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2571],"body":{"id":4469,"nodeType":"Block","src":"7937:634:17","statements":[{"condition":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7947:38:17","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4381,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"7948:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":4383,"indexExpression":{"id":4382,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"7960:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7948:22:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":4385,"indexExpression":{"id":4384,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"7971:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7948:30:17","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":4386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7979:6:17","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1148,"src":"7948:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4394,"nodeType":"IfStatement","src":"7943:100:17","trueBody":{"id":4393,"nodeType":"Block","src":"7987:56:17","statements":[{"errorCall":{"arguments":[{"id":4389,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8018:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4390,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"8026:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4388,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8002:15:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4392,"nodeType":"RevertStatement","src":"7995:41:17"}]}},{"assignments":[4399],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"consumers","nameLocation":"8065:9:17","nodeType":"VariableDeclaration","scope":4469,"src":"8048:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4397,"name":"address","nodeType":"ElementaryTypeName","src":"8048:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4398,"nodeType":"ArrayTypeName","src":"8048:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4404,"initialValue":{"expression":{"baseExpression":{"id":4400,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8077:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":4402,"indexExpression":{"id":4401,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8099:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8077:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":4403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8107:9:17","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"8077:39:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8048:68:17"},{"assignments":[4406],"declarations":[{"constant":false,"id":4406,"mutability":"mutable","name":"lastConsumerIndex","nameLocation":"8130:17:17","nodeType":"VariableDeclaration","scope":4469,"src":"8122:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"8122:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4411,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4407,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"8150:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8160:6:17","memberName":"length","nodeType":"MemberAccess","src":"8150:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8169:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8150:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8122:48:17"},{"body":{"id":4453,"nodeType":"Block","src":"8223:236:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4423,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"8235:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4425,"indexExpression":{"id":4424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8245:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8235:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4426,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"8251:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8235:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4452,"nodeType":"IfStatement","src":"8231:222:17","trueBody":{"id":4451,"nodeType":"Block","src":"8262:191:17","statements":[{"assignments":[4429],"declarations":[{"constant":false,"id":4429,"mutability":"mutable","name":"last","nameLocation":"8280:4:17","nodeType":"VariableDeclaration","scope":4451,"src":"8272:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4428,"name":"address","nodeType":"ElementaryTypeName","src":"8272:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4433,"initialValue":{"baseExpression":{"id":4430,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"8287:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4432,"indexExpression":{"id":4431,"name":"lastConsumerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"8297:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8287:28:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8272:43:17"},{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":4434,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8325:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":4436,"indexExpression":{"id":4435,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8347:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8325:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":4437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8355:9:17","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"8325:39:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4439,"indexExpression":{"id":4438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8365:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8325:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4440,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"8370:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8325:49:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4442,"nodeType":"ExpressionStatement","src":"8325:49:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":4443,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8384:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1146_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":4445,"indexExpression":{"id":4444,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8406:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8384:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1146_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":4446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8414:9:17","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"8384:39:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8424:3:17","memberName":"pop","nodeType":"MemberAccess","src":"8384:43:17","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8384:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4449,"nodeType":"ExpressionStatement","src":"8384:45:17"},{"id":4450,"nodeType":"Break","src":"8439:5:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8196:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4417,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"8200:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8210:6:17","memberName":"length","nodeType":"MemberAccess","src":"8200:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8196:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4454,"initializationExpression":{"assignments":[4413],"declarations":[{"constant":false,"id":4413,"mutability":"mutable","name":"i","nameLocation":"8189:1:17","nodeType":"VariableDeclaration","scope":4454,"src":"8181:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"8181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4415,"initialValue":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8193:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8181:13:17"},"loopExpression":{"expression":{"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8218:3:17","subExpression":{"id":4420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8220:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4422,"nodeType":"ExpressionStatement","src":"8218:3:17"},"nodeType":"ForStatement","src":"8176:283:17"},{"expression":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":4455,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8464:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":4458,"indexExpression":{"id":4456,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"8476:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8464:22:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1153_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":4459,"indexExpression":{"id":4457,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8487:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8464:30:17","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1153_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":4460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8495:6:17","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1148,"src":"8464:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8504:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8464:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4463,"nodeType":"ExpressionStatement","src":"8464:45:17"},{"eventCall":{"arguments":[{"id":4465,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8548:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4466,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"8556:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4464,"name":"SubscriptionConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8520:27:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8520:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4468,"nodeType":"EmitStatement","src":"8515:51:17"}]},"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"7725:49:17","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"cb631797","id":4470,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4372,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"7879:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4373,"kind":"modifierInvocation","modifierName":{"id":4371,"name":"onlySubOwner","nameLocations":["7866:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2305,"src":"7866:12:17"},"nodeType":"ModifierInvocation","src":"7866:20:17"},{"arguments":[{"id":4375,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"7905:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4376,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"7913:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4377,"kind":"modifierInvocation","modifierName":{"id":4374,"name":"onlyValidConsumer","nameLocations":["7887:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":3888,"src":"7887:17:17"},"nodeType":"ModifierInvocation","src":"7887:36:17"},{"id":4379,"kind":"modifierInvocation","modifierName":{"id":4378,"name":"nonReentrant","nameLocations":["7924:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"7924:12:17"},"nodeType":"ModifierInvocation","src":"7924:12:17"}],"name":"removeConsumer","nameLocation":"7786:14:17","nodeType":"FunctionDefinition","overrides":{"id":4370,"nodeType":"OverrideSpecifier","overrides":[],"src":"7857:8:17"},"parameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"_subId","nameLocation":"7814:6:17","nodeType":"VariableDeclaration","scope":4470,"src":"7806:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"7806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"_consumer","nameLocation":"7834:9:17","nodeType":"VariableDeclaration","scope":4470,"src":"7826:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4367,"name":"address","nodeType":"ElementaryTypeName","src":"7826:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7800:47:17"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[],"src":"7937:0:17"},"scope":4532,"src":"7777:794:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2579],"body":{"id":4518,"nodeType":"Block","src":"8736:277:17","statements":[{"assignments":[4485,4487],"declarations":[{"constant":false,"id":4485,"mutability":"mutable","name":"balance","nameLocation":"8750:7:17","nodeType":"VariableDeclaration","scope":4518,"src":"8743:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4484,"name":"uint96","nodeType":"ElementaryTypeName","src":"8743:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4487,"mutability":"mutable","name":"nativeBalance","nameLocation":"8766:13:17","nodeType":"VariableDeclaration","scope":4518,"src":"8759:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4486,"name":"uint96","nodeType":"ElementaryTypeName","src":"8759:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4491,"initialValue":{"arguments":[{"id":4489,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8803:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4488,"name":"_deleteSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"8783:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint96_$_t_uint96_$","typeString":"function (uint256) returns (uint96,uint96)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8783:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"nodeType":"VariableDeclarationStatement","src":"8742:68:17"},{"assignments":[4493,null],"declarations":[{"constant":false,"id":4493,"mutability":"mutable","name":"success","nameLocation":"8823:7:17","nodeType":"VariableDeclaration","scope":4518,"src":"8818:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4492,"name":"bool","nodeType":"ElementaryTypeName","src":"8818:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4503,"initialValue":{"arguments":[{"hexValue":"","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8876:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4494,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"8836:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8840:4:17","memberName":"call","nodeType":"MemberAccess","src":"8836:8:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":4498,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"8860:13:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8852:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"8852:7:17","typeDescriptions":{}}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8852:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8836:39:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8836:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8817:62:17"},{"condition":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8889:8:17","subExpression":{"id":4504,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"8890:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4510,"nodeType":"IfStatement","src":"8885:56:17","trueBody":{"id":4509,"nodeType":"Block","src":"8899:42:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4506,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8914:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8914:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4508,"nodeType":"RevertStatement","src":"8907:27:17"}]}},{"eventCall":{"arguments":[{"id":4512,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8972:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4513,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"8980:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4514,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"8985:7:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4515,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"8994:13:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4511,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"8951:20:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8951:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4517,"nodeType":"EmitStatement","src":"8946:62:17"}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"8575:49:17","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"0ae09540","id":4519,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4479,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8715:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4480,"kind":"modifierInvocation","modifierName":{"id":4478,"name":"onlySubOwner","nameLocations":["8702:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2305,"src":"8702:12:17"},"nodeType":"ModifierInvocation","src":"8702:20:17"},{"id":4482,"kind":"modifierInvocation","modifierName":{"id":4481,"name":"nonReentrant","nameLocations":["8723:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"8723:12:17"},"nodeType":"ModifierInvocation","src":"8723:12:17"}],"name":"cancelSubscription","nameLocation":"8636:18:17","nodeType":"FunctionDefinition","overrides":{"id":4477,"nodeType":"OverrideSpecifier","overrides":[],"src":"8693:8:17"},"parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"_subId","nameLocation":"8663:6:17","nodeType":"VariableDeclaration","scope":4519,"src":"8655:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"8655:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"_to","nameLocation":"8679:3:17","nodeType":"VariableDeclaration","scope":4519,"src":"8671:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4474,"name":"address","nodeType":"ElementaryTypeName","src":"8671:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8654:29:17"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[],"src":"8736:0:17"},"scope":4532,"src":"8627:386:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2623],"body":{"id":4530,"nodeType":"Block","src":"9102:34:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4527,"name":"NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"9115:14:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9115:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4529,"nodeType":"RevertStatement","src":"9108:23:17"}]},"functionSelector":"41af6c87","id":4531,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"9026:20:17","nodeType":"FunctionDefinition","overrides":{"id":4523,"nodeType":"OverrideSpecifier","overrides":[],"src":"9078:8:17"},"parameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"9047:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9046:19:17"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"9096:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4524,"name":"bool","nodeType":"ElementaryTypeName","src":"9096:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9095:6:17"},"scope":4532,"src":"9017:119:17","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":4533,"src":"476:8662:17","usedErrors":[1079,1081,1087,1089,1091,1093,1097,1099,1103,1109,1123,1125,1127,1129,1131,1267,3734,3736,3738,3740]}],"src":"94:9045:17"},"id":17},"contracts/Lottery.sol":{"ast":{"absolutePath":"contracts/Lottery.sol","exportedSymbols":{"AutomationCompatibleInterface":[18],"Lottery":[4967],"Lottery__Closed":[4546],"Lottery__NotEnoughETHforTicket":[4542],"Lottery__TransactionFailed":[4544],"Lottery__upKeepNotNeeded":[4554],"VRFConsumerBaseV2":[1042],"VRFConsumerBaseV2Plus":[2520],"VRFV2PlusClient":[2683]},"id":4968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4534,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":4535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4968,"sourceUnit":1043,"src":"57:65:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","id":4537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4968,"sourceUnit":2521,"src":"123:102:18","symbolAliases":[{"foreign":{"id":4536,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"131:21:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","id":4539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4968,"sourceUnit":2684,"src":"226:100:18","symbolAliases":[{"foreign":{"id":4538,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"234:15:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","id":4540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4968,"sourceUnit":19,"src":"327:95:18","symbolAliases":[],"unitAlias":""},{"errorSelector":"944a25f8","id":4542,"name":"Lottery__NotEnoughETHforTicket","nameLocation":"430:30:18","nodeType":"ErrorDefinition","parameters":{"id":4541,"nodeType":"ParameterList","parameters":[],"src":"460:2:18"},"src":"424:39:18"},{"errorSelector":"5271696c","id":4544,"name":"Lottery__TransactionFailed","nameLocation":"470:26:18","nodeType":"ErrorDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[],"src":"496:2:18"},"src":"464:35:18"},{"errorSelector":"7d6d79f4","id":4546,"name":"Lottery__Closed","nameLocation":"506:15:18","nodeType":"ErrorDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[],"src":"521:2:18"},"src":"500:24:18"},{"errorSelector":"ca1e13d0","id":4554,"name":"Lottery__upKeepNotNeeded","nameLocation":"531:24:18","nodeType":"ErrorDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"currentBal","nameLocation":"569:10:18","nodeType":"VariableDeclaration","scope":4554,"src":"561:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"numberOfPlayers","nameLocation":"593:15:18","nodeType":"VariableDeclaration","scope":4554,"src":"585:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"lotteryState","nameLocation":"622:12:18","nodeType":"VariableDeclaration","scope":4554,"src":"614:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:81:18"},"src":"525:112:18"},{"abstract":false,"baseContracts":[{"baseName":{"id":4556,"name":"VRFConsumerBaseV2Plus","nameLocations":["935:21:18"],"nodeType":"IdentifierPath","referencedDeclaration":2520,"src":"935:21:18"},"id":4557,"nodeType":"InheritanceSpecifier","src":"935:21:18"},{"baseName":{"id":4558,"name":"AutomationCompatibleInterface","nameLocations":["958:29:18"],"nodeType":"IdentifierPath","referencedDeclaration":18,"src":"958:29:18"},"id":4559,"nodeType":"InheritanceSpecifier","src":"958:29:18"}],"canonicalName":"Lottery","contractDependencies":[],"contractKind":"contract","documentation":{"id":4555,"nodeType":"StructuredDocumentation","src":"639:274:18","text":" @title A Ethereum Lottery Smart Contract\n @author Harigovind M G\n @notice This is a smart contract for creating a Fair and Random Lottery\n @dev This implements Chainlink VRF for ensuring the randomness and Chainlink Keepers for the automation of the Lottery"},"fullyImplemented":true,"id":4967,"linearizedBaseContracts":[4967,18,2520,39,202,276,2552],"name":"Lottery","nameLocation":"924:7:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Lottery.LotteryState","id":4562,"members":[{"id":4560,"name":"OPEN","nameLocation":"1038:4:18","nodeType":"EnumValue","src":"1038:4:18"},{"id":4561,"name":"CALCULATING","nameLocation":"1052:11:18","nodeType":"EnumValue","src":"1052:11:18"}],"name":"LotteryState","nameLocation":"1015:12:18","nodeType":"EnumDefinition","src":"1010:59:18"},{"constant":false,"id":4564,"mutability":"immutable","name":"i_ticketPrice","nameLocation":"1127:13:18","nodeType":"VariableDeclaration","scope":4967,"src":"1101:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4567,"mutability":"mutable","name":"s_players","nameLocation":"1172:9:18","nodeType":"VariableDeclaration","scope":4967,"src":"1146:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"1146:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4566,"nodeType":"ArrayTypeName","src":"1146:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":4569,"mutability":"immutable","name":"i_keyHash","nameLocation":"1213:9:18","nodeType":"VariableDeclaration","scope":4967,"src":"1187:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1187:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4571,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1254:16:18","nodeType":"VariableDeclaration","scope":4967,"src":"1228:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4573,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1301:18:18","nodeType":"VariableDeclaration","scope":4967,"src":"1276:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4572,"name":"uint32","nodeType":"ElementaryTypeName","src":"1276:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":4576,"mutability":"constant","name":"REQUEST_CONFIRMATION","nameLocation":"1349:20:18","nodeType":"VariableDeclaration","scope":4967,"src":"1325:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4574,"name":"uint16","nodeType":"ElementaryTypeName","src":"1325:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1372:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":4579,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1403:9:18","nodeType":"VariableDeclaration","scope":4967,"src":"1379:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4577,"name":"uint32","nodeType":"ElementaryTypeName","src":"1379:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1415:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":4581,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1438:15:18","nodeType":"VariableDeclaration","scope":4967,"src":"1422:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1422:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4583,"mutability":"immutable","name":"i_interval","nameLocation":"1485:10:18","nodeType":"VariableDeclaration","scope":4967,"src":"1459:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4585,"mutability":"mutable","name":"s_recentWinner","nameLocation":"1547:14:18","nodeType":"VariableDeclaration","scope":4967,"src":"1531:30:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4584,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4588,"mutability":"mutable","name":"s_LotteryState","nameLocation":"1588:14:18","nodeType":"VariableDeclaration","scope":4967,"src":"1567:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"},"typeName":{"id":4587,"nodeType":"UserDefinedTypeName","pathNode":{"id":4586,"name":"LotteryState","nameLocations":["1567:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4562,"src":"1567:12:18"},"referencedDeclaration":4562,"src":"1567:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"visibility":"private"},{"anonymous":false,"eventSelector":"1d64fb5ba9f2548c5b98468d58f25b87b9e866afee0122e92d9fe722bf85076c","id":4592,"name":"LotteryEnter","nameLocation":"1632:12:18","nodeType":"EventDefinition","parameters":{"id":4591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1661:6:18","nodeType":"VariableDeclaration","scope":4592,"src":"1645:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4589,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1644:24:18"},"src":"1626:43:18"},{"anonymous":false,"eventSelector":"ebf56642252004c18a776f30d528e7a0ce8c5db14b6596fb6550f630c8a24c6c","id":4596,"name":"RequestedLotteryWinner","nameLocation":"1680:22:18","nodeType":"EventDefinition","parameters":{"id":4595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1719:9:18","nodeType":"VariableDeclaration","scope":4596,"src":"1703:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1702:27:18"},"src":"1674:56:18"},{"anonymous":false,"eventSelector":"5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df","id":4600,"name":"WinnerPicked","nameLocation":"1741:12:18","nodeType":"EventDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1770:6:18","nodeType":"VariableDeclaration","scope":4600,"src":"1754:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4597,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1753:24:18"},"src":"1735:43:18"},{"body":{"id":4648,"nodeType":"Block","src":"2042:353:18","statements":[{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4618,"name":"i_ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"2052:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4619,"name":"ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"2068:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2052:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4621,"nodeType":"ExpressionStatement","src":"2052:27:18"},{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4622,"name":"i_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"2164:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4623,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"2176:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2164:19:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4625,"nodeType":"ExpressionStatement","src":"2164:19:18"},{"expression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"2193:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4627,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"2212:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2193:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4629,"nodeType":"ExpressionStatement","src":"2193:33:18"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4630,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"2236:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4631,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2257:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2236:37:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4633,"nodeType":"ExpressionStatement","src":"2236:37:18"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"s_LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"2283:14:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4635,"name":"LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2300:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryState_$4562_$","typeString":"type(enum Lottery.LotteryState)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2313:4:18","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4560,"src":"2300:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"src":"2283:34:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"id":4638,"nodeType":"ExpressionStatement","src":"2283:34:18"},{"expression":{"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4639,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"2327:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4640,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2349:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"2343:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2327:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4643,"nodeType":"ExpressionStatement","src":"2327:31:18"},{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4644,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"2368:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4645,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2380:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2368:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"2368:20:18"}]},"id":4649,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4615,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"2024:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4616,"kind":"baseConstructorSpecifier","modifierName":{"id":4614,"name":"VRFConsumerBaseV2Plus","nameLocations":["2002:21:18"],"nodeType":"IdentifierPath","referencedDeclaration":2520,"src":"2002:21:18"},"nodeType":"ModifierInvocation","src":"2002:39:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1834:16:18","nodeType":"VariableDeclaration","scope":4649,"src":"1826:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4601,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"ticketPrice","nameLocation":"1868:11:18","nodeType":"VariableDeclaration","scope":4649,"src":"1860:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1860:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"keyHash","nameLocation":"1897:7:18","nodeType":"VariableDeclaration","scope":4649,"src":"1889:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1889:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"subscriptionId","nameLocation":"1922:14:18","nodeType":"VariableDeclaration","scope":4649,"src":"1914:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1953:16:18","nodeType":"VariableDeclaration","scope":4649,"src":"1946:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4609,"name":"uint32","nodeType":"ElementaryTypeName","src":"1946:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"interval","nameLocation":"1987:8:18","nodeType":"VariableDeclaration","scope":4649,"src":"1979:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1816:185:18"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[],"src":"2042:0:18"},"scope":4967,"src":"1805:590:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[11],"body":{"id":4711,"nodeType":"Block","src":"2585:365:18","statements":[{"assignments":[4660],"declarations":[{"constant":false,"id":4660,"mutability":"mutable","name":"isOpen","nameLocation":"2603:6:18","nodeType":"VariableDeclaration","scope":4711,"src":"2598:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4659,"name":"bool","nodeType":"ElementaryTypeName","src":"2598:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4666,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"s_LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"2613:14:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4662,"name":"LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2631:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryState_$4562_$","typeString":"type(enum Lottery.LotteryState)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2644:4:18","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4560,"src":"2631:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"src":"2613:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2612:37:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2598:51:18"},{"assignments":[4668],"declarations":[{"constant":false,"id":4668,"mutability":"mutable","name":"timePassed","nameLocation":"2664:10:18","nodeType":"VariableDeclaration","scope":4711,"src":"2659:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4667,"name":"bool","nodeType":"ElementaryTypeName","src":"2659:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4677,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4669,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2679:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2685:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"2679:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4671,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"2697:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2679:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2678:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4674,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"2716:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2678:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2677:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2659:68:18"},{"assignments":[4679],"declarations":[{"constant":false,"id":4679,"mutability":"mutable","name":"hasPlayers","nameLocation":"2742:10:18","nodeType":"VariableDeclaration","scope":4711,"src":"2737:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4678,"name":"bool","nodeType":"ElementaryTypeName","src":"2737:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4685,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4680,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"2756:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2766:6:18","memberName":"length","nodeType":"MemberAccess","src":"2756:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2775:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2756:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2755:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2737:40:18"},{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"hasBalance","nameLocation":"2792:10:18","nodeType":"VariableDeclaration","scope":4711,"src":"2787:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4686,"name":"bool","nodeType":"ElementaryTypeName","src":"2787:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4695,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4690,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2813:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$4967","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$4967","typeString":"contract Lottery"}],"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2805:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4688,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:18","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2819:7:18","memberName":"balance","nodeType":"MemberAccess","src":"2805:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2829:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2805:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2787:43:18"},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"2840:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"2856:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4698,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"2866:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2856:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4700,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"2880:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2856:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4702,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"2894:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2856:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2855:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:65:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4706,"nodeType":"ExpressionStatement","src":"2840:65:18"},{"expression":{"components":[{"id":4707,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"2923:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"307830","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2937:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""},"value":"0x0"}],"id":4709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2922:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_$","typeString":"tuple(bool,literal_string \"0x0\")"}},"functionReturnParameters":4658,"id":4710,"nodeType":"Return","src":"2915:28:18"}]},"functionSelector":"6e04ff0d","id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"2410:11:18","nodeType":"FunctionDefinition","overrides":{"id":4653,"nodeType":"OverrideSpecifier","overrides":[],"src":"2504:8:18"},"parameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"2431:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4650,"name":"bytes","nodeType":"ElementaryTypeName","src":"2431:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2421:44:18"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2535:12:18","nodeType":"VariableDeclaration","scope":4712,"src":"2530:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4654,"name":"bool","nodeType":"ElementaryTypeName","src":"2530:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"2549:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4656,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2529:51:18"},"scope":4967,"src":"2401:549:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[17],"body":{"id":4748,"nodeType":"Block","src":"3031:870:18","statements":[{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"s_LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3324:14:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4719,"name":"LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3341:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryState_$4562_$","typeString":"type(enum Lottery.LotteryState)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3354:11:18","memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":4561,"src":"3341:24:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"src":"3324:41:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"id":4722,"nodeType":"ExpressionStatement","src":"3324:41:18"},{"assignments":[4724],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"requestId","nameLocation":"3383:9:18","nodeType":"VariableDeclaration","scope":4748,"src":"3375:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4743,"initialValue":{"arguments":[{"arguments":[{"id":4729,"name":"i_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"3502:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4730,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"3532:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4731,"name":"REQUEST_CONFIRMATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3585:20:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4732,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"3637:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4733,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"3678:9:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"arguments":[{"hexValue":"74727565","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3805:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4736,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3761:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3777:11:18","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"3761:27:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2654_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3790:13:18"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"3761:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2654_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":4734,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3711:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3727:12:18","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"3711:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2654_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:114:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4727,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3444:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2683_$","typeString":"type(library VRFV2PlusClient)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3460:18:18","memberName":"RandomWordsRequest","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"3444:34:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RandomWordsRequest_$2667_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3493:7:18","3525:5:18","3562:20:18","3619:16:18","3669:8:18","3701:9:18"],"names":["keyHash","subId","requestConfirmations","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"3444:392:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RandomWordsRequest_$2667_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}],"expression":{"id":4725,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3395:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2538","typeString":"contract IVRFCoordinatorV2Plus"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3412:18:18","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"3395:35:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$2667_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:451:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3375:471:18"},{"eventCall":{"arguments":[{"id":4745,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"3884:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4744,"name":"RequestedLotteryWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"3861:22:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4747,"nodeType":"EmitStatement","src":"3856:38:18"}]},"functionSelector":"4585e33b","id":4749,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2965:13:18","nodeType":"FunctionDefinition","overrides":{"id":4716,"nodeType":"OverrideSpecifier","overrides":[],"src":"3022:8:18"},"parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4749,"src":"2979:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4713,"name":"bytes","nodeType":"ElementaryTypeName","src":"2979:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2978:34:18"},"returnParameters":{"id":4717,"nodeType":"ParameterList","parameters":[],"src":"3031:0:18"},"scope":4967,"src":"2956:945:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4785,"nodeType":"Block","src":"3946:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4752,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3960:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3964:5:18","memberName":"value","nodeType":"MemberAccess","src":"3960:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4754,"name":"i_ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"3972:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3960:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4760,"nodeType":"IfStatement","src":"3956:95:18","trueBody":{"id":4759,"nodeType":"Block","src":"3987:64:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4756,"name":"Lottery__NotEnoughETHforTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"4008:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4758,"nodeType":"RevertStatement","src":"4001:39:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"s_LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"4064:14:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4762,"name":"LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4082:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryState_$4562_$","typeString":"type(enum Lottery.LotteryState)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4095:4:18","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4560,"src":"4082:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"src":"4064:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4769,"nodeType":"IfStatement","src":"4060:90:18","trueBody":{"id":4768,"nodeType":"Block","src":"4101:49:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4765,"name":"Lottery__Closed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"4122:15:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4767,"nodeType":"RevertStatement","src":"4115:24:18"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4182:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4186:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4182:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4174:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"4174:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4174:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":4770,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"4159:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4169:4:18","memberName":"push","nodeType":"MemberAccess","src":"4159:14:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4159:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4779,"nodeType":"ExpressionStatement","src":"4159:35:18"},{"eventCall":{"arguments":[{"expression":{"id":4781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4222:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4226:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4222:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4780,"name":"LotteryEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"4209:12:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4784,"nodeType":"EmitStatement","src":"4204:29:18"}]},"functionSelector":"30f4c43d","id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"EnterLottery","nameLocation":"3916:12:18","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[],"src":"3928:2:18"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[],"src":"3946:0:18"},"scope":4967,"src":"3907:333:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[2426],"body":{"id":4856,"nodeType":"Block","src":"4370:515:18","statements":[{"assignments":[4796],"declarations":[{"constant":false,"id":4796,"mutability":"mutable","name":"indexOfWinner","nameLocation":"4388:13:18","nodeType":"VariableDeclaration","scope":4856,"src":"4380:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4380:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4803,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4797,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"4404:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4799,"indexExpression":{"hexValue":"30","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4416:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4404:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":4800,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"4421:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4431:6:18","memberName":"length","nodeType":"MemberAccess","src":"4421:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4404:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4380:57:18"},{"assignments":[4805],"declarations":[{"constant":false,"id":4805,"mutability":"mutable","name":"recentWinner","nameLocation":"4463:12:18","nodeType":"VariableDeclaration","scope":4856,"src":"4447:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4804,"name":"address","nodeType":"ElementaryTypeName","src":"4447:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":4809,"initialValue":{"baseExpression":{"id":4806,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"4478:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4808,"indexExpression":{"id":4807,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"4488:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:24:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"4447:55:18"},{"expression":{"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4810,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4512:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4811,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"4529:12:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4512:29:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4813,"nodeType":"ExpressionStatement","src":"4512:29:18"},{"assignments":[4815,null],"declarations":[{"constant":false,"id":4815,"mutability":"mutable","name":"callSuc","nameLocation":"4557:7:18","nodeType":"VariableDeclaration","scope":4856,"src":"4552:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4814,"name":"bool","nodeType":"ElementaryTypeName","src":"4552:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4826,"initialValue":{"arguments":[{"hexValue":"","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4618:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4816,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"4570:12:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4583:4:18","memberName":"call","nodeType":"MemberAccess","src":"4570:17:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":4820,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4603:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$4967","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$4967","typeString":"contract Lottery"}],"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4818,"name":"address","nodeType":"ElementaryTypeName","src":"4595:7:18","typeDescriptions":{}}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4609:7:18","memberName":"balance","nodeType":"MemberAccess","src":"4595:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4570:47:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4551:70:18"},{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4827,"name":"s_LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"4631:14:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4828,"name":"LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4648:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryState_$4562_$","typeString":"type(enum Lottery.LotteryState)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4661:4:18","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4560,"src":"4648:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"src":"4631:34:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"id":4831,"nodeType":"ExpressionStatement","src":"4631:34:18"},{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4832,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"4675:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4709:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4687:21:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":4833,"name":"address","nodeType":"ElementaryTypeName","src":"4691:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4834,"nodeType":"ArrayTypeName","src":"4691:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"4675:36:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4839,"nodeType":"ExpressionStatement","src":"4675:36:18"},{"expression":{"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4840,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"4721:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4841,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4739:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4745:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"4739:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4721:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4844,"nodeType":"ExpressionStatement","src":"4721:33:18"},{"condition":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4768:8:18","subExpression":{"id":4845,"name":"callSuc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"4769:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"4764:74:18","trueBody":{"id":4850,"nodeType":"Block","src":"4778:60:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4847,"name":"Lottery__TransactionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"4799:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4799:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4849,"nodeType":"RevertStatement","src":"4792:35:18"}]}},{"eventCall":{"arguments":[{"id":4853,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"4865:12:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4852,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"4852:12:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4852:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4855,"nodeType":"EmitStatement","src":"4847:31:18"}]},"id":4857,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"4255:18:18","nodeType":"FunctionDefinition","overrides":{"id":4793,"nodeType":"OverrideSpecifier","overrides":[],"src":"4360:8:18"},"parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4857,"src":"4283:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4791,"mutability":"mutable","name":"randomWords","nameLocation":"4333:11:18","nodeType":"VariableDeclaration","scope":4857,"src":"4314:30:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"4314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ArrayTypeName","src":"4314:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4273:77:18"},"returnParameters":{"id":4794,"nodeType":"ParameterList","parameters":[],"src":"4370:0:18"},"scope":4967,"src":"4246:639:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4860,"nodeType":"Block","src":"4917:2:18","statements":[]},"id":4861,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[],"src":"4897:2:18"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[],"src":"4917:0:18"},"scope":4967,"src":"4890:29:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4868,"nodeType":"Block","src":"5108:37:18","statements":[{"expression":{"id":4866,"name":"i_ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"5125:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4865,"id":4867,"nodeType":"Return","src":"5118:20:18"}]},"functionSelector":"87bb7ae0","id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"getTicketPrice","nameLocation":"5061:14:18","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[],"src":"5075:2:18"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4869,"src":"5099:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"5099:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5098:9:18"},"scope":4967,"src":"5052:93:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4880,"nodeType":"Block","src":"5216:40:18","statements":[{"expression":{"baseExpression":{"id":4876,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"5233:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4878,"indexExpression":{"id":4877,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"5243:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5233:16:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":4875,"id":4879,"nodeType":"Return","src":"5226:23:18"}]},"functionSelector":"460e2049","id":4881,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayers","nameLocation":"5160:10:18","nodeType":"FunctionDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"index","nameLocation":"5179:5:18","nodeType":"VariableDeclaration","scope":4881,"src":"5171:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"5171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5170:15:18"},"returnParameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"5207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"5207:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5206:9:18"},"scope":4967,"src":"5151:105:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4888,"nodeType":"Block","src":"5319:38:18","statements":[{"expression":{"id":4886,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"5336:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4885,"id":4887,"nodeType":"Return","src":"5329:21:18"}]},"functionSelector":"473f1ddc","id":4889,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"5271:15:18","nodeType":"FunctionDefinition","parameters":{"id":4882,"nodeType":"ParameterList","parameters":[],"src":"5286:2:18"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4889,"src":"5310:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4883,"name":"address","nodeType":"ElementaryTypeName","src":"5310:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5309:9:18"},"scope":4967,"src":"5262:95:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4897,"nodeType":"Block","src":"5424:38:18","statements":[{"expression":{"id":4895,"name":"s_LotteryState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"5441:14:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"functionReturnParameters":4894,"id":4896,"nodeType":"Return","src":"5434:21:18"}]},"functionSelector":"6b68c03c","id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"getLotteryState","nameLocation":"5372:15:18","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[],"src":"5387:2:18"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4898,"src":"5411:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"},"typeName":{"id":4892,"nodeType":"UserDefinedTypeName","pathNode":{"id":4891,"name":"LotteryState","nameLocations":["5411:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4562,"src":"5411:12:18"},"referencedDeclaration":4562,"src":"5411:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryState_$4562","typeString":"enum Lottery.LotteryState"}},"visibility":"internal"}],"src":"5410:14:18"},"scope":4967,"src":"5363:99:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4906,"nodeType":"Block","src":"5521:40:18","statements":[{"expression":{"expression":{"id":4903,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"5538:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5548:6:18","memberName":"length","nodeType":"MemberAccess","src":"5538:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4902,"id":4905,"nodeType":"Return","src":"5531:23:18"}]},"functionSelector":"55c9e926","id":4907,"implemented":true,"kind":"function","modifiers":[],"name":"getNumPlayers","nameLocation":"5477:13:18","nodeType":"FunctionDefinition","parameters":{"id":4899,"nodeType":"ParameterList","parameters":[],"src":"5490:2:18"},"returnParameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4907,"src":"5513:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5512:9:18"},"scope":4967,"src":"5468:93:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4917,"nodeType":"Block","src":"5629:48:18","statements":[{"expression":{"arguments":[{"id":4914,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"5654:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5646:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"5646:7:18","typeDescriptions":{}}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4911,"id":4916,"nodeType":"Return","src":"5639:31:18"}]},"functionSelector":"f43b52cb","id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestTimestamp","nameLocation":"5580:18:18","nodeType":"FunctionDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[],"src":"5598:2:18"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"5621:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"5621:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5620:9:18"},"scope":4967,"src":"5571:106:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4925,"nodeType":"Block","src":"5734:34:18","statements":[{"expression":{"id":4923,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"5751:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4922,"id":4924,"nodeType":"Return","src":"5744:17:18"}]},"functionSelector":"91ad27b4","id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"5692:11:18","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[],"src":"5703:2:18"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"5726:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5726:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5725:9:18"},"scope":4967,"src":"5683:85:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4933,"nodeType":"Block","src":"5828:33:18","statements":[{"expression":{"id":4931,"name":"i_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"5845:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4930,"id":4932,"nodeType":"Return","src":"5838:16:18"}]},"functionSelector":"40cc232b","id":4934,"implemented":true,"kind":"function","modifiers":[],"name":"getkeyHash","nameLocation":"5787:10:18","nodeType":"FunctionDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[],"src":"5797:2:18"},"returnParameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4934,"src":"5820:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5820:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5819:9:18"},"scope":4967,"src":"5778:83:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4941,"nodeType":"Block","src":"5924:40:18","statements":[{"expression":{"id":4939,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"5941:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4938,"id":4940,"nodeType":"Return","src":"5934:23:18"}]},"functionSelector":"b4f8d9f2","id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"getsubscriptionId","nameLocation":"5876:17:18","nodeType":"FunctionDefinition","parameters":{"id":4935,"nodeType":"ParameterList","parameters":[],"src":"5893:2:18"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"5916:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"5916:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5915:9:18"},"scope":4967,"src":"5867:97:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4949,"nodeType":"Block","src":"6028:44:18","statements":[{"expression":{"id":4947,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"6045:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4946,"id":4948,"nodeType":"Return","src":"6038:25:18"}]},"functionSelector":"9862eed0","id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"getcallbackGasLimit","nameLocation":"5979:19:18","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[],"src":"5998:2:18"},"returnParameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"6021:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4944,"name":"uint32","nodeType":"ElementaryTypeName","src":"6021:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6020:8:18"},"scope":4967,"src":"5970:102:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4957,"nodeType":"Block","src":"6128:33:18","statements":[{"expression":{"id":4955,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6145:9:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4954,"id":4956,"nodeType":"Return","src":"6138:16:18"}]},"functionSelector":"53a2c19a","id":4958,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"6087:11:18","nodeType":"FunctionDefinition","parameters":{"id":4951,"nodeType":"ParameterList","parameters":[],"src":"6098:2:18"},"returnParameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4958,"src":"6121:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4952,"name":"uint32","nodeType":"ElementaryTypeName","src":"6121:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6120:8:18"},"scope":4967,"src":"6078:83:18","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4965,"nodeType":"Block","src":"6229:44:18","statements":[{"expression":{"id":4963,"name":"REQUEST_CONFIRMATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"6246:20:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4962,"id":4964,"nodeType":"Return","src":"6239:27:18"}]},"functionSelector":"5f1b0fd8","id":4966,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmations","nameLocation":"6176:23:18","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[],"src":"6199:2:18"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4966,"src":"6222:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4960,"name":"uint16","nodeType":"ElementaryTypeName","src":"6222:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6221:8:18"},"scope":4967,"src":"6167:106:18","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":4968,"src":"915:5361:18","usedErrors":[2376,2384,2386,4542,4544,4546]}],"src":"32:6245:18"},"id":18},"contracts/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"contracts/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"ConfirmedOwner":[39],"VRFConsumerBaseV2":[1042],"VRFCoordinatorV2Interface":[2779],"VRFCoordinatorV2Mock":[3711]},"id":4971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4969,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol","file":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol","id":4970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4971,"sourceUnit":3712,"src":"57:74:19","symbolAliases":[],"unitAlias":""}],"src":"32:99:19"},"id":19},"contracts/mocks/VRFCoordinatorV2_5Mock.sol":{"ast":{"absolutePath":"contracts/mocks/VRFCoordinatorV2_5Mock.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2538],"IVRFSubscriptionV2Plus":[2641],"SubscriptionAPI":[2357],"VRFConsumerBaseV2Plus":[2520],"VRFCoordinatorV2_5Mock":[4532],"VRFV2PlusClient":[2683]},"id":4974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4972,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:20"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","file":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","id":4973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4974,"sourceUnit":4533,"src":"58:76:20","symbolAliases":[],"unitAlias":""}],"src":"32:102:20"},"id":20}},"contracts":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":303,"id":180,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":948,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":747,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":608,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":603,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3327:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"922:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:21"},"nodeType":"YulFunctionCall","src":"970:79:21"},"nodeType":"YulExpressionStatement","src":"970:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:21"},"nodeType":"YulFunctionCall","src":"939:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:21"},"nodeType":"YulFunctionCall","src":"935:32:21"},"nodeType":"YulIf","src":"932:119:21"},{"nodeType":"YulBlock","src":"1061:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:21"},"nodeType":"YulFunctionCall","src":"1147:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:21"},"nodeType":"YulFunctionCall","src":"1115:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:21"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:21","type":""}],"src":"845:351:21"},{"body":{"nodeType":"YulBlock","src":"1298:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1315:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1320:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:21"},"nodeType":"YulFunctionCall","src":"1308:19:21"},"nodeType":"YulExpressionStatement","src":"1308:19:21"},{"nodeType":"YulAssignment","src":"1336:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1355:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1360:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:21"},"nodeType":"YulFunctionCall","src":"1351:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1336:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1270:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1275:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1286:11:21","type":""}],"src":"1202:169:21"},{"body":{"nodeType":"YulBlock","src":"1483:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1505:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1513:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1501:3:21"},"nodeType":"YulFunctionCall","src":"1501:14:21"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1517:26:21","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1494:6:21"},"nodeType":"YulFunctionCall","src":"1494:50:21"},"nodeType":"YulExpressionStatement","src":"1494:50:21"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1475:6:21","type":""}],"src":"1377:174:21"},{"body":{"nodeType":"YulBlock","src":"1703:220:21","statements":[{"nodeType":"YulAssignment","src":"1713:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1779:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1720:58:21"},"nodeType":"YulFunctionCall","src":"1720:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1713:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1885:3:21"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1796:88:21"},"nodeType":"YulFunctionCall","src":"1796:93:21"},"nodeType":"YulExpressionStatement","src":"1796:93:21"},{"nodeType":"YulAssignment","src":"1898:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1909:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:21"},"nodeType":"YulFunctionCall","src":"1905:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1898:3:21"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1699:3:21","type":""}],"src":"1557:366:21"},{"body":{"nodeType":"YulBlock","src":"2100:248:21","statements":[{"nodeType":"YulAssignment","src":"2110:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2110:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2157:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2168:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:21"},"nodeType":"YulFunctionCall","src":"2153:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2176:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:21"},"nodeType":"YulFunctionCall","src":"2172:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2146:6:21"},"nodeType":"YulFunctionCall","src":"2146:47:21"},"nodeType":"YulExpressionStatement","src":"2146:47:21"},{"nodeType":"YulAssignment","src":"2202:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2336:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2210:124:21"},"nodeType":"YulFunctionCall","src":"2210:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2080:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2095:4:21","type":""}],"src":"1929:419:21"},{"body":{"nodeType":"YulBlock","src":"2460:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2482:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2490:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2478:3:21"},"nodeType":"YulFunctionCall","src":"2478:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2494:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:21"},"nodeType":"YulFunctionCall","src":"2471:49:21"},"nodeType":"YulExpressionStatement","src":"2471:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2452:6:21","type":""}],"src":"2354:173:21"},{"body":{"nodeType":"YulBlock","src":"2679:220:21","statements":[{"nodeType":"YulAssignment","src":"2689:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2755:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2760:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2696:58:21"},"nodeType":"YulFunctionCall","src":"2696:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2689:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2861:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2772:88:21"},"nodeType":"YulFunctionCall","src":"2772:93:21"},"nodeType":"YulExpressionStatement","src":"2772:93:21"},{"nodeType":"YulAssignment","src":"2874:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2885:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:21"},"nodeType":"YulFunctionCall","src":"2881:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2874:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2667:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2675:3:21","type":""}],"src":"2533:366:21"},{"body":{"nodeType":"YulBlock","src":"3076:248:21","statements":[{"nodeType":"YulAssignment","src":"3086:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3109:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:21"},"nodeType":"YulFunctionCall","src":"3094:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:21"},"nodeType":"YulFunctionCall","src":"3129:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3152:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3148:3:21"},"nodeType":"YulFunctionCall","src":"3148:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3122:6:21"},"nodeType":"YulFunctionCall","src":"3122:47:21"},"nodeType":"YulExpressionStatement","src":"3122:47:21"},{"nodeType":"YulAssignment","src":"3178:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3312:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3186:124:21"},"nodeType":"YulFunctionCall","src":"3186:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3178:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3056:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3071:4:21","type":""}],"src":"2905:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a40380380610a40833981810160405281019061003291906102be565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009a90610348565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610127576101268161012f60201b60201c565b5b5050506103d4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610194906103b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028b82610260565b9050919050565b61029b81610280565b81146102a657600080fd5b50565b6000815190506102b881610292565b92915050565b6000602082840312156102d4576102d361025b565b5b60006102e2848285016102a9565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103326018836102eb565b915061033d826102fc565b602082019050919050565b6000602082019050818103600083015261036181610325565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061039e6017836102eb565b91506103a982610368565b602082019050919050565b600060208201905081810360008301526103cd81610391565b9050919050565b61065d806103e36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea26469706673582212202ef76306a636d311a6e94b72c76875d3efc773fea60f72fac2e93f4ad8446f8e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA40 CODESIZE SUB DUP1 PUSH2 0xA40 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH2 0x126 DUP2 PUSH2 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B DUP3 PUSH2 0x260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x280 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B8 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x25B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH1 0x18 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x33D DUP3 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361 DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E PUSH1 0x17 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9 DUP3 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD DUP2 PUSH2 0x391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xF7 PUSH4 0x6A636D3 GT 0xA6 0xE9 0x4B PUSH19 0xC76875D3EFC773FEA60F72FAC2E93F4AD8446F DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"240:141:1:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;240:141;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;240:141:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_180":{"entryPoint":748,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":604,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":138,"id":146,"parameterSlots":0,"returnSlots":0},"@owner_156":{"entryPoint":543,"id":156,"parameterSlots":0,"returnSlots":1},"@transferOwnership_110":{"entryPoint":584,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:21","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:21","statements":[{"nodeType":"YulAssignment","src":"62:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:21"},"nodeType":"YulFunctionCall","src":"73:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:21","type":""}],"src":"7:126:21"},{"body":{"nodeType":"YulBlock","src":"184:51:21","statements":[{"nodeType":"YulAssignment","src":"194:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:21"},"nodeType":"YulFunctionCall","src":"205:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:21","type":""}],"src":"139:96:21"},{"body":{"nodeType":"YulBlock","src":"306:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:21"},"nodeType":"YulFunctionCall","src":"328:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:21"},"nodeType":"YulFunctionCall","src":"316:37:21"},"nodeType":"YulExpressionStatement","src":"316:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:21","type":""}],"src":"241:118:21"},{"body":{"nodeType":"YulBlock","src":"463:124:21","statements":[{"nodeType":"YulAssignment","src":"473:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:21"},"nodeType":"YulFunctionCall","src":"481:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:21"},"nodeType":"YulFunctionCall","src":"562:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:21"},"nodeType":"YulFunctionCall","src":"509:71:21"},"nodeType":"YulExpressionStatement","src":"509:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:21","type":""}],"src":"365:222:21"},{"body":{"nodeType":"YulBlock","src":"633:35:21","statements":[{"nodeType":"YulAssignment","src":"643:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:21"},"nodeType":"YulFunctionCall","src":"653:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:21","type":""}],"src":"593:75:21"},{"body":{"nodeType":"YulBlock","src":"763:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:21"},"nodeType":"YulFunctionCall","src":"773:12:21"},"nodeType":"YulExpressionStatement","src":"773:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:21"},{"body":{"nodeType":"YulBlock","src":"886:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:21"},"nodeType":"YulFunctionCall","src":"896:12:21"},"nodeType":"YulExpressionStatement","src":"896:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:21"},{"body":{"nodeType":"YulBlock","src":"963:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:21"},"nodeType":"YulFunctionCall","src":"1022:12:21"},"nodeType":"YulExpressionStatement","src":"1022:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:21"},"nodeType":"YulFunctionCall","src":"993:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:21"},"nodeType":"YulFunctionCall","src":"983:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:21"},"nodeType":"YulFunctionCall","src":"976:43:21"},"nodeType":"YulIf","src":"973:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:21","type":""}],"src":"920:122:21"},{"body":{"nodeType":"YulBlock","src":"1100:87:21","statements":[{"nodeType":"YulAssignment","src":"1110:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:21"},"nodeType":"YulFunctionCall","src":"1119:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:21"},"nodeType":"YulFunctionCall","src":"1148:33:21"},"nodeType":"YulExpressionStatement","src":"1148:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:21","type":""}],"src":"1048:139:21"},{"body":{"nodeType":"YulBlock","src":"1259:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:21"},"nodeType":"YulFunctionCall","src":"1307:79:21"},"nodeType":"YulExpressionStatement","src":"1307:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:21"},"nodeType":"YulFunctionCall","src":"1276:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:21"},"nodeType":"YulFunctionCall","src":"1272:32:21"},"nodeType":"YulIf","src":"1269:119:21"},{"nodeType":"YulBlock","src":"1398:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:21"},"nodeType":"YulFunctionCall","src":"1473:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:21"},"nodeType":"YulFunctionCall","src":"1452:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:21","type":""}],"src":"1193:329:21"},{"body":{"nodeType":"YulBlock","src":"1624:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:21"},"nodeType":"YulFunctionCall","src":"1634:19:21"},"nodeType":"YulExpressionStatement","src":"1634:19:21"},{"nodeType":"YulAssignment","src":"1662:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:21"},"nodeType":"YulFunctionCall","src":"1677:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:21","type":""}],"src":"1528:169:21"},{"body":{"nodeType":"YulBlock","src":"1809:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:21"},"nodeType":"YulFunctionCall","src":"1827:14:21"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:21","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:21"},"nodeType":"YulFunctionCall","src":"1820:48:21"},"nodeType":"YulExpressionStatement","src":"1820:48:21"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:21","type":""}],"src":"1703:172:21"},{"body":{"nodeType":"YulBlock","src":"2027:220:21","statements":[{"nodeType":"YulAssignment","src":"2037:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:21"},"nodeType":"YulFunctionCall","src":"2044:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:21"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:21"},"nodeType":"YulFunctionCall","src":"2120:93:21"},"nodeType":"YulExpressionStatement","src":"2120:93:21"},{"nodeType":"YulAssignment","src":"2222:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:21"},"nodeType":"YulFunctionCall","src":"2229:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:21"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:21","type":""}],"src":"1881:366:21"},{"body":{"nodeType":"YulBlock","src":"2424:248:21","statements":[{"nodeType":"YulAssignment","src":"2434:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:21"},"nodeType":"YulFunctionCall","src":"2442:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:21"},"nodeType":"YulFunctionCall","src":"2477:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:21"},"nodeType":"YulFunctionCall","src":"2496:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:21"},"nodeType":"YulFunctionCall","src":"2470:47:21"},"nodeType":"YulExpressionStatement","src":"2470:47:21"},{"nodeType":"YulAssignment","src":"2526:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:21"},"nodeType":"YulFunctionCall","src":"2534:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:21","type":""}],"src":"2253:419:21"},{"body":{"nodeType":"YulBlock","src":"2784:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:21"},"nodeType":"YulFunctionCall","src":"2802:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:21"},"nodeType":"YulFunctionCall","src":"2795:48:21"},"nodeType":"YulExpressionStatement","src":"2795:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:21","type":""}],"src":"2678:172:21"},{"body":{"nodeType":"YulBlock","src":"3002:220:21","statements":[{"nodeType":"YulAssignment","src":"3012:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:21"},"nodeType":"YulFunctionCall","src":"3019:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:21"},"nodeType":"YulFunctionCall","src":"3095:93:21"},"nodeType":"YulExpressionStatement","src":"3095:93:21"},{"nodeType":"YulAssignment","src":"3197:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:21"},"nodeType":"YulFunctionCall","src":"3204:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:21","type":""}],"src":"2856:366:21"},{"body":{"nodeType":"YulBlock","src":"3399:248:21","statements":[{"nodeType":"YulAssignment","src":"3409:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:21"},"nodeType":"YulFunctionCall","src":"3417:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:21"},"nodeType":"YulFunctionCall","src":"3452:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:21"},"nodeType":"YulFunctionCall","src":"3471:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:21"},"nodeType":"YulFunctionCall","src":"3445:47:21"},"nodeType":"YulExpressionStatement","src":"3445:47:21"},{"nodeType":"YulAssignment","src":"3501:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:21"},"nodeType":"YulFunctionCall","src":"3509:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:21","type":""}],"src":"3228:419:21"},{"body":{"nodeType":"YulBlock","src":"3759:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:21"},"nodeType":"YulFunctionCall","src":"3777:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:21"},"nodeType":"YulFunctionCall","src":"3770:49:21"},"nodeType":"YulExpressionStatement","src":"3770:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:21","type":""}],"src":"3653:173:21"},{"body":{"nodeType":"YulBlock","src":"3978:220:21","statements":[{"nodeType":"YulAssignment","src":"3988:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:21"},"nodeType":"YulFunctionCall","src":"3995:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:21"},"nodeType":"YulFunctionCall","src":"4071:93:21"},"nodeType":"YulExpressionStatement","src":"4071:93:21"},{"nodeType":"YulAssignment","src":"4173:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:21"},"nodeType":"YulFunctionCall","src":"4180:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:21","type":""}],"src":"3832:366:21"},{"body":{"nodeType":"YulBlock","src":"4375:248:21","statements":[{"nodeType":"YulAssignment","src":"4385:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:21"},"nodeType":"YulFunctionCall","src":"4393:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:21"},"nodeType":"YulFunctionCall","src":"4428:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:21"},"nodeType":"YulFunctionCall","src":"4447:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:21"},"nodeType":"YulFunctionCall","src":"4421:47:21"},"nodeType":"YulExpressionStatement","src":"4421:47:21"},{"nodeType":"YulAssignment","src":"4477:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:21"},"nodeType":"YulFunctionCall","src":"4485:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:21","type":""}],"src":"4204:419:21"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea26469706673582212202ef76306a636d311a6e94b72c76875d3efc773fea60f72fac2e93f4ad8446f8e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xF7 PUSH4 0x6A636D3 GT 0xA6 0xE9 0x4B PUSH19 0xC76875D3EFC773FEA60F72FAC2E93F4AD8446F DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"240:141:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316:2;;;:::i;:::-;;1382:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1026:316;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;1382:81::-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;7:126:21:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":300,"id":180,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":600,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":655,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3483:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"939:413:21","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:21"},"nodeType":"YulFunctionCall","src":"987:79:21"},"nodeType":"YulExpressionStatement","src":"987:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:21"},"nodeType":"YulFunctionCall","src":"956:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:21"},"nodeType":"YulFunctionCall","src":"952:32:21"},"nodeType":"YulIf","src":"949:119:21"},{"nodeType":"YulBlock","src":"1078:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:21"},"nodeType":"YulFunctionCall","src":"1132:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:21"}]}]},{"nodeType":"YulBlock","src":"1216:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:21"},"nodeType":"YulFunctionCall","src":"1303:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:21"},"nodeType":"YulFunctionCall","src":"1271:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:21","type":""}],"src":"845:507:21"},{"body":{"nodeType":"YulBlock","src":"1454:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:21"},"nodeType":"YulFunctionCall","src":"1464:19:21"},"nodeType":"YulExpressionStatement","src":"1464:19:21"},{"nodeType":"YulAssignment","src":"1492:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:21"},"nodeType":"YulFunctionCall","src":"1507:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:21","type":""}],"src":"1358:169:21"},{"body":{"nodeType":"YulBlock","src":"1639:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:21"},"nodeType":"YulFunctionCall","src":"1657:14:21"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1673:26:21","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:21"},"nodeType":"YulFunctionCall","src":"1650:50:21"},"nodeType":"YulExpressionStatement","src":"1650:50:21"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:21","type":""}],"src":"1533:174:21"},{"body":{"nodeType":"YulBlock","src":"1859:220:21","statements":[{"nodeType":"YulAssignment","src":"1869:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1935:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1940:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1876:58:21"},"nodeType":"YulFunctionCall","src":"1876:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1869:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:21"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1952:88:21"},"nodeType":"YulFunctionCall","src":"1952:93:21"},"nodeType":"YulExpressionStatement","src":"1952:93:21"},{"nodeType":"YulAssignment","src":"2054:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2065:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2070:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:21"},"nodeType":"YulFunctionCall","src":"2061:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2054:3:21"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1847:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1855:3:21","type":""}],"src":"1713:366:21"},{"body":{"nodeType":"YulBlock","src":"2256:248:21","statements":[{"nodeType":"YulAssignment","src":"2266:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:21"},"nodeType":"YulFunctionCall","src":"2274:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2266:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:21"},"nodeType":"YulFunctionCall","src":"2309:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2332:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2338:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2328:3:21"},"nodeType":"YulFunctionCall","src":"2328:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2302:6:21"},"nodeType":"YulFunctionCall","src":"2302:47:21"},"nodeType":"YulExpressionStatement","src":"2302:47:21"},{"nodeType":"YulAssignment","src":"2358:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2492:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2366:124:21"},"nodeType":"YulFunctionCall","src":"2366:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2358:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2236:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2251:4:21","type":""}],"src":"2085:419:21"},{"body":{"nodeType":"YulBlock","src":"2616:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2646:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:21"},"nodeType":"YulFunctionCall","src":"2634:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2650:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:21"},"nodeType":"YulFunctionCall","src":"2627:49:21"},"nodeType":"YulExpressionStatement","src":"2627:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2608:6:21","type":""}],"src":"2510:173:21"},{"body":{"nodeType":"YulBlock","src":"2835:220:21","statements":[{"nodeType":"YulAssignment","src":"2845:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2911:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2852:58:21"},"nodeType":"YulFunctionCall","src":"2852:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2845:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3017:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2928:88:21"},"nodeType":"YulFunctionCall","src":"2928:93:21"},"nodeType":"YulExpressionStatement","src":"2928:93:21"},{"nodeType":"YulAssignment","src":"3030:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3041:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3046:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:21"},"nodeType":"YulFunctionCall","src":"3037:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3030:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2823:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2831:3:21","type":""}],"src":"2689:366:21"},{"body":{"nodeType":"YulBlock","src":"3232:248:21","statements":[{"nodeType":"YulAssignment","src":"3242:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3254:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:21"},"nodeType":"YulFunctionCall","src":"3250:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3242:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3300:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3285:3:21"},"nodeType":"YulFunctionCall","src":"3285:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3308:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3304:3:21"},"nodeType":"YulFunctionCall","src":"3304:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:21"},"nodeType":"YulFunctionCall","src":"3278:47:21"},"nodeType":"YulExpressionStatement","src":"3278:47:21"},{"nodeType":"YulAssignment","src":"3334:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3468:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3342:124:21"},"nodeType":"YulFunctionCall","src":"3342:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3334:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3227:4:21","type":""}],"src":"3061:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a50380380610a50833981810160405281019061003291906102bb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610358565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610125576101248161012c60201b60201c565b5b50506103e4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610191906103c4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102888261025d565b9050919050565b6102988161027d565b81146102a357600080fd5b50565b6000815190506102b58161028f565b92915050565b600080604083850312156102d2576102d1610258565b5b60006102e0858286016102a6565b92505060206102f1858286016102a6565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103426018836102fb565b915061034d8261030c565b602082019050919050565b6000602082019050818103600083015261037181610335565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103ae6017836102fb565b91506103b982610378565b602082019050919050565b600060208201905081810360008301526103dd816103a1565b9050919050565b61065d806103f36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220d9459065998d3afb2bc08a0624d6e4c39e97a3a63ef92ce2a9a34b891119838e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA50 CODESIZE SUB DUP1 PUSH2 0xA50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH2 0x124 DUP2 PUSH2 0x12C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B5 DUP2 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D2 JUMPI PUSH2 0x2D1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x18 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH1 0x17 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3F3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 GASLIMIT SWAP1 PUSH6 0x998D3AFB2BC0 DUP11 MOD 0x24 0xD6 0xE4 0xC3 SWAP15 SWAP8 LOG3 0xA6 RETURNDATACOPY 0xF9 0x2C 0xE2 0xA9 LOG3 0x4B DUP10 GT NOT DUP4 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"216:1893:2:-:0;;;481:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;618:1;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;216:1893;;1536:239;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;216:1893:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_180":{"entryPoint":748,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":604,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":138,"id":146,"parameterSlots":0,"returnSlots":0},"@owner_156":{"entryPoint":543,"id":156,"parameterSlots":0,"returnSlots":1},"@transferOwnership_110":{"entryPoint":584,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:21","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:21","statements":[{"nodeType":"YulAssignment","src":"62:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:21"},"nodeType":"YulFunctionCall","src":"73:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:21","type":""}],"src":"7:126:21"},{"body":{"nodeType":"YulBlock","src":"184:51:21","statements":[{"nodeType":"YulAssignment","src":"194:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:21"},"nodeType":"YulFunctionCall","src":"205:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:21","type":""}],"src":"139:96:21"},{"body":{"nodeType":"YulBlock","src":"306:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:21"},"nodeType":"YulFunctionCall","src":"328:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:21"},"nodeType":"YulFunctionCall","src":"316:37:21"},"nodeType":"YulExpressionStatement","src":"316:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:21","type":""}],"src":"241:118:21"},{"body":{"nodeType":"YulBlock","src":"463:124:21","statements":[{"nodeType":"YulAssignment","src":"473:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:21"},"nodeType":"YulFunctionCall","src":"481:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:21"},"nodeType":"YulFunctionCall","src":"562:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:21"},"nodeType":"YulFunctionCall","src":"509:71:21"},"nodeType":"YulExpressionStatement","src":"509:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:21","type":""}],"src":"365:222:21"},{"body":{"nodeType":"YulBlock","src":"633:35:21","statements":[{"nodeType":"YulAssignment","src":"643:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:21"},"nodeType":"YulFunctionCall","src":"653:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:21","type":""}],"src":"593:75:21"},{"body":{"nodeType":"YulBlock","src":"763:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:21"},"nodeType":"YulFunctionCall","src":"773:12:21"},"nodeType":"YulExpressionStatement","src":"773:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:21"},{"body":{"nodeType":"YulBlock","src":"886:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:21"},"nodeType":"YulFunctionCall","src":"896:12:21"},"nodeType":"YulExpressionStatement","src":"896:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:21"},{"body":{"nodeType":"YulBlock","src":"963:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:21"},"nodeType":"YulFunctionCall","src":"1022:12:21"},"nodeType":"YulExpressionStatement","src":"1022:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:21"},"nodeType":"YulFunctionCall","src":"993:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:21"},"nodeType":"YulFunctionCall","src":"983:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:21"},"nodeType":"YulFunctionCall","src":"976:43:21"},"nodeType":"YulIf","src":"973:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:21","type":""}],"src":"920:122:21"},{"body":{"nodeType":"YulBlock","src":"1100:87:21","statements":[{"nodeType":"YulAssignment","src":"1110:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:21"},"nodeType":"YulFunctionCall","src":"1119:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:21"},"nodeType":"YulFunctionCall","src":"1148:33:21"},"nodeType":"YulExpressionStatement","src":"1148:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:21","type":""}],"src":"1048:139:21"},{"body":{"nodeType":"YulBlock","src":"1259:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:21"},"nodeType":"YulFunctionCall","src":"1307:79:21"},"nodeType":"YulExpressionStatement","src":"1307:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:21"},"nodeType":"YulFunctionCall","src":"1276:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:21"},"nodeType":"YulFunctionCall","src":"1272:32:21"},"nodeType":"YulIf","src":"1269:119:21"},{"nodeType":"YulBlock","src":"1398:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:21"},"nodeType":"YulFunctionCall","src":"1473:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:21"},"nodeType":"YulFunctionCall","src":"1452:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:21","type":""}],"src":"1193:329:21"},{"body":{"nodeType":"YulBlock","src":"1624:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:21"},"nodeType":"YulFunctionCall","src":"1634:19:21"},"nodeType":"YulExpressionStatement","src":"1634:19:21"},{"nodeType":"YulAssignment","src":"1662:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:21"},"nodeType":"YulFunctionCall","src":"1677:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:21","type":""}],"src":"1528:169:21"},{"body":{"nodeType":"YulBlock","src":"1809:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:21"},"nodeType":"YulFunctionCall","src":"1827:14:21"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:21","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:21"},"nodeType":"YulFunctionCall","src":"1820:48:21"},"nodeType":"YulExpressionStatement","src":"1820:48:21"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:21","type":""}],"src":"1703:172:21"},{"body":{"nodeType":"YulBlock","src":"2027:220:21","statements":[{"nodeType":"YulAssignment","src":"2037:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:21"},"nodeType":"YulFunctionCall","src":"2044:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:21"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:21"},"nodeType":"YulFunctionCall","src":"2120:93:21"},"nodeType":"YulExpressionStatement","src":"2120:93:21"},{"nodeType":"YulAssignment","src":"2222:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:21"},"nodeType":"YulFunctionCall","src":"2229:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:21"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:21","type":""}],"src":"1881:366:21"},{"body":{"nodeType":"YulBlock","src":"2424:248:21","statements":[{"nodeType":"YulAssignment","src":"2434:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:21"},"nodeType":"YulFunctionCall","src":"2442:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:21"},"nodeType":"YulFunctionCall","src":"2477:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:21"},"nodeType":"YulFunctionCall","src":"2496:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:21"},"nodeType":"YulFunctionCall","src":"2470:47:21"},"nodeType":"YulExpressionStatement","src":"2470:47:21"},{"nodeType":"YulAssignment","src":"2526:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:21"},"nodeType":"YulFunctionCall","src":"2534:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:21","type":""}],"src":"2253:419:21"},{"body":{"nodeType":"YulBlock","src":"2784:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:21"},"nodeType":"YulFunctionCall","src":"2802:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:21"},"nodeType":"YulFunctionCall","src":"2795:48:21"},"nodeType":"YulExpressionStatement","src":"2795:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:21","type":""}],"src":"2678:172:21"},{"body":{"nodeType":"YulBlock","src":"3002:220:21","statements":[{"nodeType":"YulAssignment","src":"3012:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:21"},"nodeType":"YulFunctionCall","src":"3019:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:21"},"nodeType":"YulFunctionCall","src":"3095:93:21"},"nodeType":"YulExpressionStatement","src":"3095:93:21"},{"nodeType":"YulAssignment","src":"3197:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:21"},"nodeType":"YulFunctionCall","src":"3204:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:21","type":""}],"src":"2856:366:21"},{"body":{"nodeType":"YulBlock","src":"3399:248:21","statements":[{"nodeType":"YulAssignment","src":"3409:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:21"},"nodeType":"YulFunctionCall","src":"3417:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:21"},"nodeType":"YulFunctionCall","src":"3452:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:21"},"nodeType":"YulFunctionCall","src":"3471:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:21"},"nodeType":"YulFunctionCall","src":"3445:47:21"},"nodeType":"YulExpressionStatement","src":"3445:47:21"},{"nodeType":"YulAssignment","src":"3501:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:21"},"nodeType":"YulFunctionCall","src":"3509:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:21","type":""}],"src":"3228:419:21"},{"body":{"nodeType":"YulBlock","src":"3759:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:21"},"nodeType":"YulFunctionCall","src":"3777:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:21"},"nodeType":"YulFunctionCall","src":"3770:49:21"},"nodeType":"YulExpressionStatement","src":"3770:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:21","type":""}],"src":"3653:173:21"},{"body":{"nodeType":"YulBlock","src":"3978:220:21","statements":[{"nodeType":"YulAssignment","src":"3988:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:21"},"nodeType":"YulFunctionCall","src":"3995:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:21"},"nodeType":"YulFunctionCall","src":"4071:93:21"},"nodeType":"YulExpressionStatement","src":"4071:93:21"},{"nodeType":"YulAssignment","src":"4173:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:21"},"nodeType":"YulFunctionCall","src":"4180:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:21","type":""}],"src":"3832:366:21"},{"body":{"nodeType":"YulBlock","src":"4375:248:21","statements":[{"nodeType":"YulAssignment","src":"4385:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:21"},"nodeType":"YulFunctionCall","src":"4393:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:21"},"nodeType":"YulFunctionCall","src":"4428:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:21"},"nodeType":"YulFunctionCall","src":"4447:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:21"},"nodeType":"YulFunctionCall","src":"4421:47:21"},"nodeType":"YulExpressionStatement","src":"4421:47:21"},{"nodeType":"YulAssignment","src":"4477:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:21"},"nodeType":"YulFunctionCall","src":"4485:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:21","type":""}],"src":"4204:419:21"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220d9459065998d3afb2bc08a0624d6e4c39e97a3a63ef92ce2a9a34b891119838e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 GASLIMIT SWAP1 PUSH6 0x998D3AFB2BC0 DUP11 MOD 0x24 0xD6 0xE4 0xC3 SWAP15 SWAP8 LOG3 0xA6 RETURNDATACOPY 0xF9 0x2C 0xE2 0xA9 LOG3 0x4B DUP10 GT NOT DUP4 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"216:1893:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316;;;:::i;:::-;;1382:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1026:316;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;1382:81::-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;7:126:21:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"IERC677Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onTokenTransfer(address,uint256,bytes)":"a4c0ed36"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":\"IERC677Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf95f5eec36130441a0faba73c2725bcab96df5b6372ed6b3c19c2a1661a3a0664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP6 CREATE2 0xEE 0xC3 PUSH2 0x3044 BYTE 0xF 0xAB 0xA7 EXTCODECOPY 0x27 0x25 0xBC 0xAB SWAP7 0xDF JUMPDEST PUSH4 0x72ED6B3C NOT 0xC2 LOG1 PUSH7 0x1A3A0664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"1318:11630:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf95f5eec36130441a0faba73c2725bcab96df5b6372ed6b3c19c2a1661a3a0664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP6 CREATE2 0xEE 0xC3 PUSH2 0x3044 BYTE 0xF 0xAB 0xA7 EXTCODECOPY 0x27 0x25 0xBC 0xAB SWAP7 0xDF JUMPDEST PUSH4 0x72ED6B3C NOT 0xC2 LOG1 PUSH7 0x1A3A0664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"1318:11630:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"SubscriptionAPI":{"abi":[{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[],"name":"FailedToSendNative","type":"error"},{"inputs":[],"name":"FailedToTransferLink","type":"error"},{"inputs":[],"name":"IndexOutOfRange","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[],"name":"LinkAlreadySet","type":"error"},{"inputs":[],"name":"LinkNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NativeFundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountNative","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldNativeBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNativeBalance","type":"uint256"}],"name":"SubscriptionFundedWithNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_NATIVE_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"subOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"recoverNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_config","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"bool","name":"reentrancyLock","type":"bool"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeNativePPM","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkDiscountPPM","type":"uint32"},{"internalType":"uint8","name":"nativePremiumPercentage","type":"uint8"},{"internalType":"uint8","name":"linkPremiumPercentage","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_currentSubNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalNativeBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"linkNativeFeed","type":"address"}],"name":"setLINKAndLINKNativeFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","reqCount":"- Requests count of subscription.","subOwner":"- owner of the subscription."}},"ownerCancelSubscription(uint256)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"recoverNativeFunds(address)":{"params":{"to":"address to send native to"}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setLINKAndLINKNativeFeed(address,address)":{"params":{"link":"- address of link token","linkNativeFeed":"address of the link native feed"}}},"stateVariables":{"LINK":{"details":"may not be provided upon construction on some chains due to lack of availability"},"LINK_NATIVE_FEED":{"details":"may not be provided upon construction on some chains due to lack of availability"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"LINK()":"1b6b6d23","LINK_NATIVE_FEED()":"72e9d565","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","owner()":"8da5cb5b","ownerCancelSubscription(uint256)":"aa433aff","pendingRequestExists(uint256)":"41af6c87","recoverFunds(address)":"e72f6e30","recoverNativeFunds(address)":"8402595e","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29","s_config()":"088070f5","s_currentSubNonce()":"9d40a6fd","s_totalBalance()":"86fe91c7","s_totalNativeBalance()":"18e3dd27","setLINKAndLINKNativeFeed(address,address)":"65982744","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9","withdrawNative(address)":"2f622e6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNative\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToTransferLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeFundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLink\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNativeBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNativeBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFundedWithNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_NATIVE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"subOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_config\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"reentrancyLock\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeNativePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkDiscountPPM\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"nativePremiumPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"linkPremiumPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentSubNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalNativeBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkNativeFeed\",\"type\":\"address\"}],\"name\":\"setLINKAndLINKNativeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"reqCount\":\"- Requests count of subscription.\",\"subOwner\":\"- owner of the subscription.\"}},\"ownerCancelSubscription(uint256)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"recoverNativeFunds(address)\":{\"params\":{\"to\":\"address to send native to\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setLINKAndLINKNativeFeed(address,address)\":{\"params\":{\"link\":\"- address of link token\",\"linkNativeFeed\":\"address of the link native feed\"}}},\"stateVariables\":{\"LINK\":{\"details\":\"may not be provided upon construction on some chains due to lack of availability\"},\"LINK_NATIVE_FEED\":{\"details\":\"may not be provided upon construction on some chains due to lack of availability\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint256)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"recoverNativeFunds(address)\":{\"notice\":\"Recover native sent with transfer/call/send instead of fundSubscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setLINKAndLINKNativeFeed(address,address)\":{\"notice\":\"set the LINK token contract and link native feed to be used by this coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":\"SubscriptionAPI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  function _requireSufficientBalance(bool condition) internal pure {\\n    if (!condition) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function _requireValidSubscription(address subOwner) internal pure {\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n  }\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    _requireSufficientBalance(amount > 0);\\n    s_withdrawableTokens = 0;\\n    s_totalBalance -= amount;\\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    uint96 amount = s_withdrawableNative;\\n    _requireSufficientBalance(amount > 0);\\n    // Prevent re-entrancy by updating state before transfer.\\n    s_withdrawableNative = 0;\\n    s_totalNativeBalance -= amount;\\n    _mustSendNative(recipient, amount);\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(oldOwner);\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    _mustSendNative(to, uint256(nativeBalance));\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n\\n  function _mustSendNative(address to, uint256 amount) internal {\\n    (bool success, ) = to.call{value: amount}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3687ca9adb25fa3b7645a1f7840e73f8ca3d87dd5f19ebc93cea76db5866717e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1070,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"LINK","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)371"},{"astId":1074,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"LINK_NATIVE_FEED","offset":0,"slot":"3","type":"t_contract(AggregatorV3Interface)248"},{"astId":1160,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage))"},{"astId":1165,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subscriptionConfigs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(SubscriptionConfig)1146_storage)"},{"astId":1170,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Subscription)1138_storage)"},{"astId":1172,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_currentSubNonce","offset":0,"slot":"7","type":"t_uint64"},{"astId":1175,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subIds","offset":0,"slot":"8","type":"t_struct(UintSet)854_storage"},{"astId":1177,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_totalBalance","offset":0,"slot":"10","type":"t_uint96"},{"astId":1179,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_totalNativeBalance","offset":12,"slot":"10","type":"t_uint96"},{"astId":1181,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_withdrawableTokens","offset":0,"slot":"11","type":"t_uint96"},{"astId":1183,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_withdrawableNative","offset":12,"slot":"11","type":"t_uint96"},{"astId":1265,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_config","offset":0,"slot":"12","type":"t_struct(Config)1262_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)248":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)371":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)","numberOfBytes":"32","value":"t_struct(ConsumerConfig)1153_storage"},"t_mapping(t_uint256,t_struct(Subscription)1138_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1138_storage"},"t_mapping(t_uint256,t_struct(SubscriptionConfig)1146_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)1146_storage"},"t_struct(Config)1262_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Config","members":[{"astId":1245,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":1247,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":1249,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":1251,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":1253,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"},{"astId":1255,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"fulfillmentFlatFeeNativePPM","offset":15,"slot":"0","type":"t_uint32"},{"astId":1257,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"fulfillmentFlatFeeLinkDiscountPPM","offset":19,"slot":"0","type":"t_uint32"},{"astId":1259,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nativePremiumPercentage","offset":23,"slot":"0","type":"t_uint8"},{"astId":1261,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"linkPremiumPercentage","offset":24,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(ConsumerConfig)1153_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.ConsumerConfig","members":[{"astId":1148,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"active","offset":0,"slot":"0","type":"t_bool"},{"astId":1150,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nonce","offset":1,"slot":"0","type":"t_uint64"},{"astId":1152,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"pendingReqCount","offset":9,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Set)382_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":377,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":381,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(Subscription)1138_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Subscription","members":[{"astId":1133,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":1135,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nativeBalance","offset":12,"slot":"0","type":"t_uint96"},{"astId":1137,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"reqCount","offset":24,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)1146_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.SubscriptionConfig","members":[{"astId":1140,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1142,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1145,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_struct(UintSet)854_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":853,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)382_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint256)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"recoverNativeFunds(address)":{"notice":"Recover native sent with transfer/call/send instead of fundSubscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."},"setLINKAndLINKNativeFeed(address,address)":{"notice":"set the LINK token contract and link native feed to be used by this coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"VRFConsumerBaseV2Plus":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2389,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2538"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IVRFCoordinatorV2Plus)2538":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"IVRFCoordinatorV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"params":{"req":"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args"},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"IVRFMigratableConsumerV2Plus":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This interface is designed to be used in VRFConsumerBaseV2Plus.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"setCoordinator(address)":"8ea98117"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"}},"notice":"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"IVRFSubscriptionV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"notice":"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"VRFV2PlusClient":{"abi":[{"inputs":[],"name":"EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60fe610052600b82828239805160001a607314610045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220405c1e147c77f044c42ceae8d773440e741faf54a308c62c44181607d661cf1764736f6c63430008130033","opcodes":"PUSH1 0xFE PUSH2 0x52 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x45 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x5C 0x1E EQ PUSH29 0x77F044C42CEAE8D773440E741FAF54A308C62C44181607D661CF176473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"82:558:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EXTRA_ARGS_V1_TAG_2651":{"entryPoint":82,"id":2651,"parameterSlots":0,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack_library":{"entryPoint":162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed":{"entryPoint":175,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":118,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:528:21","statements":[{"body":{"nodeType":"YulBlock","src":"51:105:21","statements":[{"nodeType":"YulAssignment","src":"61:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"83:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:21"},"nodeType":"YulFunctionCall","src":"72:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:21","type":""}],"src":"7:149:21"},{"body":{"nodeType":"YulBlock","src":"233:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"250:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"272:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"255:16:21"},"nodeType":"YulFunctionCall","src":"255:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"243:6:21"},"nodeType":"YulFunctionCall","src":"243:36:21"},"nodeType":"YulExpressionStatement","src":"243:36:21"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack_library","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"221:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"228:3:21","type":""}],"src":"162:123:21"},{"body":{"nodeType":"YulBlock","src":"395:130:21","statements":[{"nodeType":"YulAssignment","src":"405:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"417:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"428:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"413:3:21"},"nodeType":"YulFunctionCall","src":"413:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"405:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"491:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"504:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"500:3:21"},"nodeType":"YulFunctionCall","src":"500:17:21"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack_library","nodeType":"YulIdentifier","src":"441:49:21"},"nodeType":"YulFunctionCall","src":"441:77:21"},"nodeType":"YulExpressionStatement","src":"441:77:21"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"367:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"379:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"390:4:21","type":""}],"src":"291:234:21"}]},"contents":"{\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220405c1e147c77f044c42ceae8d773440e741faf54a308c62c44181607d661cf1764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x5C 0x1E EQ PUSH29 0x77F044C42CEAE8D773440E741FAF54A308C62C44181607D661CF176473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"82:558:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;161:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;211:28;161:79;:::o;7:149:21:-;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:123::-;255:23;272:5;255:23;:::i;:::-;250:3;243:36;162:123;;:::o;291:234::-;390:4;428:2;417:9;413:18;405:26;;441:77;515:1;504:9;500:17;491:6;441:77;:::i;:::-;291:234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"50800","executionCost":"127","totalCost":"50927"},"external":{"EXTRA_ARGS_V1_TAG()":"297"},"internal":{"_argsToBytes(struct VRFV2PlusClient.ExtraArgsV1 memory)":"infinite"}},"methodIdentifiers":{"EXTRA_ARGS_V1_TAG()":"f7514ab4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidRandomWords","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[],"name":"ConfigSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"ConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"ConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"consumerIsAdded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"},{"internalType":"uint256[]","name":"_words","type":"uint256[]"}],"name":"fulfillRandomWordsWithOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getConfig","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getFallbackWeiPerUnitLink","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getFeeConfig","outputs":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"},{"internalType":"address","name":"","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill","_words":"user-provided random words"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2942":{"entryPoint":null,"id":2942,"parameterSlots":2,"returnSlots":0},"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":432,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":852,"id":193,"parameterSlots":0,"returnSlots":0},"@setConfig_2958":{"entryPoint":735,"id":2958,"parameterSlots":0,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":1054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":1077,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1434,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":1206,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1473,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1245,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1148,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":1004,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":999,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1393,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1279,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":1028,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4331:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"378:65:21","statements":[{"nodeType":"YulAssignment","src":"388:49:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:38:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:21"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:21","type":""}],"src":"334:109:21"},{"body":{"nodeType":"YulBlock","src":"491:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:21"},"nodeType":"YulFunctionCall","src":"549:12:21"},"nodeType":"YulExpressionStatement","src":"549:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:21"},"nodeType":"YulFunctionCall","src":"521:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:21"},"nodeType":"YulFunctionCall","src":"511:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:21"},"nodeType":"YulFunctionCall","src":"504:42:21"},"nodeType":"YulIf","src":"501:62:21"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:21","type":""}],"src":"449:120:21"},{"body":{"nodeType":"YulBlock","src":"637:79:21","statements":[{"nodeType":"YulAssignment","src":"647:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:21"},"nodeType":"YulFunctionCall","src":"656:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:21"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:21"},"nodeType":"YulFunctionCall","src":"678:32:21"},"nodeType":"YulExpressionStatement","src":"678:32:21"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:21","type":""}],"src":"575:141:21"},{"body":{"nodeType":"YulBlock","src":"814:411:21","statements":[{"body":{"nodeType":"YulBlock","src":"860:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"862:77:21"},"nodeType":"YulFunctionCall","src":"862:79:21"},"nodeType":"YulExpressionStatement","src":"862:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:21"},"nodeType":"YulFunctionCall","src":"831:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:21"},"nodeType":"YulFunctionCall","src":"827:32:21"},"nodeType":"YulIf","src":"824:119:21"},{"nodeType":"YulBlock","src":"953:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"968:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"982:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"972:6:21","type":""}]},{"nodeType":"YulAssignment","src":"997:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1042:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1053:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1038:3:21"},"nodeType":"YulFunctionCall","src":"1038:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1062:7:21"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1007:30:21"},"nodeType":"YulFunctionCall","src":"1007:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:21"}]}]},{"nodeType":"YulBlock","src":"1090:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1105:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1119:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1135:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1180:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1191:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1176:3:21"},"nodeType":"YulFunctionCall","src":"1176:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1200:7:21"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1145:30:21"},"nodeType":"YulFunctionCall","src":"1145:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1135:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"776:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"787:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"799:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"807:6:21","type":""}],"src":"722:503:21"},{"body":{"nodeType":"YulBlock","src":"1327:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1344:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1349:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1337:6:21"},"nodeType":"YulFunctionCall","src":"1337:19:21"},"nodeType":"YulExpressionStatement","src":"1337:19:21"},{"nodeType":"YulAssignment","src":"1365:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1384:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1389:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1380:3:21"},"nodeType":"YulFunctionCall","src":"1380:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1365:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1299:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1304:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1315:11:21","type":""}],"src":"1231:169:21"},{"body":{"nodeType":"YulBlock","src":"1512:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1534:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1542:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1530:3:21"},"nodeType":"YulFunctionCall","src":"1530:14:21"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1546:26:21","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1523:6:21"},"nodeType":"YulFunctionCall","src":"1523:50:21"},"nodeType":"YulExpressionStatement","src":"1523:50:21"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1504:6:21","type":""}],"src":"1406:174:21"},{"body":{"nodeType":"YulBlock","src":"1732:220:21","statements":[{"nodeType":"YulAssignment","src":"1742:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1808:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1813:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1749:58:21"},"nodeType":"YulFunctionCall","src":"1749:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1742:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1914:3:21"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1825:88:21"},"nodeType":"YulFunctionCall","src":"1825:93:21"},"nodeType":"YulExpressionStatement","src":"1825:93:21"},{"nodeType":"YulAssignment","src":"1927:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1938:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1943:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1934:3:21"},"nodeType":"YulFunctionCall","src":"1934:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1927:3:21"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1720:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1728:3:21","type":""}],"src":"1586:366:21"},{"body":{"nodeType":"YulBlock","src":"2129:248:21","statements":[{"nodeType":"YulAssignment","src":"2139:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2151:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2162:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2147:3:21"},"nodeType":"YulFunctionCall","src":"2147:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2139:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2197:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2182:3:21"},"nodeType":"YulFunctionCall","src":"2182:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2205:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2211:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2201:3:21"},"nodeType":"YulFunctionCall","src":"2201:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2175:6:21"},"nodeType":"YulFunctionCall","src":"2175:47:21"},"nodeType":"YulExpressionStatement","src":"2175:47:21"},{"nodeType":"YulAssignment","src":"2231:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2365:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2239:124:21"},"nodeType":"YulFunctionCall","src":"2239:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2231:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2109:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2124:4:21","type":""}],"src":"1958:419:21"},{"body":{"nodeType":"YulBlock","src":"2489:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2511:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2519:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2507:3:21"},"nodeType":"YulFunctionCall","src":"2507:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2523:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2500:6:21"},"nodeType":"YulFunctionCall","src":"2500:49:21"},"nodeType":"YulExpressionStatement","src":"2500:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2481:6:21","type":""}],"src":"2383:173:21"},{"body":{"nodeType":"YulBlock","src":"2708:220:21","statements":[{"nodeType":"YulAssignment","src":"2718:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2784:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2789:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2725:58:21"},"nodeType":"YulFunctionCall","src":"2725:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2718:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2890:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2801:88:21"},"nodeType":"YulFunctionCall","src":"2801:93:21"},"nodeType":"YulExpressionStatement","src":"2801:93:21"},{"nodeType":"YulAssignment","src":"2903:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2914:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2919:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2910:3:21"},"nodeType":"YulFunctionCall","src":"2910:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2903:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2696:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2704:3:21","type":""}],"src":"2562:366:21"},{"body":{"nodeType":"YulBlock","src":"3105:248:21","statements":[{"nodeType":"YulAssignment","src":"3115:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3127:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3138:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3123:3:21"},"nodeType":"YulFunctionCall","src":"3123:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3115:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3162:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3173:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3158:3:21"},"nodeType":"YulFunctionCall","src":"3158:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3181:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3187:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3177:3:21"},"nodeType":"YulFunctionCall","src":"3177:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3151:6:21"},"nodeType":"YulFunctionCall","src":"3151:47:21"},"nodeType":"YulExpressionStatement","src":"3151:47:21"},{"nodeType":"YulAssignment","src":"3207:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3341:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3215:124:21"},"nodeType":"YulFunctionCall","src":"3215:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3207:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3085:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3100:4:21","type":""}],"src":"2934:419:21"},{"body":{"nodeType":"YulBlock","src":"3465:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3487:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3495:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3483:3:21"},"nodeType":"YulFunctionCall","src":"3483:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"3499:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3476:6:21"},"nodeType":"YulFunctionCall","src":"3476:48:21"},"nodeType":"YulExpressionStatement","src":"3476:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3457:6:21","type":""}],"src":"3359:172:21"},{"body":{"nodeType":"YulBlock","src":"3683:220:21","statements":[{"nodeType":"YulAssignment","src":"3693:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3759:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3764:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3700:58:21"},"nodeType":"YulFunctionCall","src":"3700:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3693:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3865:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3776:88:21"},"nodeType":"YulFunctionCall","src":"3776:93:21"},"nodeType":"YulExpressionStatement","src":"3776:93:21"},{"nodeType":"YulAssignment","src":"3878:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3889:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3894:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3885:3:21"},"nodeType":"YulFunctionCall","src":"3885:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3878:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3671:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3679:3:21","type":""}],"src":"3537:366:21"},{"body":{"nodeType":"YulBlock","src":"4080:248:21","statements":[{"nodeType":"YulAssignment","src":"4090:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4102:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4113:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4098:3:21"},"nodeType":"YulFunctionCall","src":"4098:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4090:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4148:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:21"},"nodeType":"YulFunctionCall","src":"4133:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4156:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4152:3:21"},"nodeType":"YulFunctionCall","src":"4152:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4126:6:21"},"nodeType":"YulFunctionCall","src":"4126:47:21"},"nodeType":"YulExpressionStatement","src":"4126:47:21"},{"nodeType":"YulAssignment","src":"4182:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4316:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4190:124:21"},"nodeType":"YulFunctionCall","src":"4190:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4182:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4060:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4075:4:21","type":""}],"src":"3909:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0xC0 SWAP1 PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x64 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3981 CODESIZE SUB DUP1 PUSH3 0x3981 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x51 SWAP2 SWAP1 PUSH3 0x435 JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBD SWAP1 PUSH3 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x14D JUMPI PUSH3 0x14C DUP2 PUSH3 0x1B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x1A8 PUSH3 0x2DF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x5E3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x221 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x218 SWAP1 PUSH3 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH3 0x2EF PUSH3 0x354 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3DC SWAP1 PUSH3 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40F DUP2 PUSH3 0x3EC JUMP JUMPDEST DUP2 EQ PUSH3 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x42F DUP2 PUSH3 0x404 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x44F JUMPI PUSH3 0x44E PUSH3 0x3E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x45F DUP6 DUP3 DUP7 ADD PUSH3 0x41E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x472 DUP6 DUP3 DUP7 ADD PUSH3 0x41E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C5 PUSH1 0x18 DUP4 PUSH3 0x47C JUMP JUMPDEST SWAP2 POP PUSH3 0x4D2 DUP3 PUSH3 0x48D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4F8 DUP2 PUSH3 0x4B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x537 PUSH1 0x17 DUP4 PUSH3 0x47C JUMP JUMPDEST SWAP2 POP PUSH3 0x544 DUP3 PUSH3 0x4FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x56A DUP2 PUSH3 0x528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5A9 PUSH1 0x16 DUP4 PUSH3 0x47C JUMP JUMPDEST SWAP2 POP PUSH3 0x5B6 DUP3 PUSH3 0x571 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5DC DUP2 PUSH3 0x59A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x3359 PUSH3 0x628 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xDB4 ADD MSTORE PUSH2 0xEFE ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x853 ADD MSTORE PUSH2 0x18DC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x898 ADD MSTORE PUSH2 0xAA7 ADD MSTORE PUSH2 0x3359 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xAFC69B53 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xED5EB06D EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42E JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x342 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x5FBBC0D2 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x82359740 EQ PUSH2 0x2A6 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x27C7 JUMP JUMPDEST PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH2 0x1062 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x2932 JUMP JUMPDEST PUSH2 0x11F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0x12D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30E PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH2 0x1B03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x1CED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1F59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x49E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x6D8 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x6D2 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x687 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x6CA SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x662 JUMP JUMPDEST POP PUSH2 0x71D JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x73B SWAP3 SWAP2 SWAP1 PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x82D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP8 PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x2F73 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x2FB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0x2FE9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xE35FA931A0000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 CALLER PUSH2 0xB21 DUP3 DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC1C SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC37 SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0xD5B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND PUSH1 0x7 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF8D DUP5 DUP5 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x105C JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x752EAD9F4536EC1319EE3A5A604E1D65EDED22E0924251552BA14AE4FAA1BBC3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1053 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E9 SWAP1 PUSH2 0x30FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1241 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1295 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x128F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x4E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DC PUSH2 0x20DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1490 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x149C DUP3 DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x151C JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1580 JUMPI PUSH2 0x157F PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C0 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x162C JUMPI PUSH2 0x162B PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x311F JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x16D3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x16CB SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x154A JUMP JUMPDEST POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xF9BC9D5B5733D904409DEF43A5ECC888DBDAC9A95687780D8FD489D3BB3813FC DUP8 PUSH1 0x40 MLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1747 SWAP1 PUSH2 0x314E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x18B6 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1AED JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1AA3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x317E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x1CB2 SWAP2 SWAP1 PUSH2 0x317E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC0 SWAP3 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH3 0x2625A0 PUSH2 0xA8C PUSH2 0x8205 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E13 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0A SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1EDB SWAP3 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8D SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2040 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1FF6 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20BE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x207D JUMPI PUSH2 0x207C PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20AB JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x20C5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x20B6 SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x204A JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D3 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x20DC DUP2 PUSH2 0x216F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x216D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2164 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D4 SWAP1 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B2 DUP2 PUSH2 0x229B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D1 DUP2 PUSH2 0x22B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2316 DUP2 PUSH2 0x2303 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2328 DUP4 DUP4 PUSH2 0x230D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234C DUP3 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x2356 DUP2 DUP6 PUSH2 0x22E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2361 DUP4 PUSH2 0x22F3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2392 JUMPI DUP2 MLOAD PUSH2 0x2379 DUP9 DUP3 PUSH2 0x231C JUMP JUMPDEST SWAP8 POP PUSH2 0x2384 DUP4 PUSH2 0x2334 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2365 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x23C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22C8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23D3 DUP2 DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x240E DUP2 PUSH2 0x23F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242B DUP2 PUSH2 0x2405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C DUP3 PUSH2 0x2431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x246C DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP2 EQ PUSH2 0x2477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2489 DUP2 PUSH2 0x2463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A6 JUMPI PUSH2 0x24A5 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24B4 DUP6 DUP3 DUP7 ADD PUSH2 0x241C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C5 DUP6 DUP3 DUP7 ADD PUSH2 0x247A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E2 DUP2 PUSH2 0x24CF JUMP JUMPDEST DUP2 EQ PUSH2 0x24ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24FF DUP2 PUSH2 0x24D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2553 DUP3 PUSH2 0x250A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2572 JUMPI PUSH2 0x2571 PUSH2 0x251B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2585 PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP PUSH2 0x2591 DUP3 DUP3 PUSH2 0x254A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25B1 JUMPI PUSH2 0x25B0 PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25DA PUSH2 0x25D5 DUP5 PUSH2 0x2596 JUMP JUMPDEST PUSH2 0x257B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x25FD JUMPI PUSH2 0x25FC PUSH2 0x25C2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2626 JUMPI DUP1 PUSH2 0x2612 DUP9 DUP3 PUSH2 0x24F0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25FF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x2505 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2655 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2677 JUMPI PUSH2 0x2676 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2685 DUP7 DUP3 DUP8 ADD PUSH2 0x24F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2696 DUP7 DUP3 DUP8 ADD PUSH2 0x247A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B7 JUMPI PUSH2 0x26B6 PUSH2 0x23EC JUMP JUMPDEST JUMPDEST PUSH2 0x26C3 DUP7 DUP3 DUP8 ADD PUSH2 0x2630 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26E0 DUP2 PUSH2 0x26CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2722 DUP2 PUSH2 0x2701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x273D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2719 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x274C DUP2 PUSH2 0x2303 JUMP JUMPDEST DUP2 EQ PUSH2 0x2757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2769 DUP2 PUSH2 0x2743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2778 DUP2 PUSH2 0x229B JUMP JUMPDEST DUP2 EQ PUSH2 0x2783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2795 DUP2 PUSH2 0x276F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27A4 DUP2 PUSH2 0x22B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x27AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C1 DUP2 PUSH2 0x279B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x27E3 JUMPI PUSH2 0x27E2 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F1 DUP9 DUP3 DUP10 ADD PUSH2 0x275A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2802 DUP9 DUP3 DUP10 ADD PUSH2 0x241C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2813 DUP9 DUP3 DUP10 ADD PUSH2 0x2786 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2824 DUP9 DUP3 DUP10 ADD PUSH2 0x27B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2835 DUP9 DUP3 DUP10 ADD PUSH2 0x27B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x284B DUP2 PUSH2 0x24CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2866 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2884 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x28A0 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28AD PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28BA PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28C7 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28D4 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28E1 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x28EE PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x28FB PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x2909 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x287B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x292C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2949 JUMPI PUSH2 0x2948 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2957 DUP6 DUP3 DUP7 ADD PUSH2 0x24F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2968 DUP6 DUP3 DUP7 ADD PUSH2 0x247A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2996 DUP5 DUP3 DUP6 ADD PUSH2 0x241C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29A8 DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x299F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29D2 DUP2 PUSH2 0x23F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A28 DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3A DUP4 DUP4 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5E DUP3 PUSH2 0x29F3 JUMP JUMPDEST PUSH2 0x2A68 DUP2 DUP6 PUSH2 0x29FE JUMP JUMPDEST SWAP4 POP PUSH2 0x2A73 DUP4 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AA4 JUMPI DUP2 MLOAD PUSH2 0x2A8B DUP9 DUP3 PUSH2 0x2A2E JUMP JUMPDEST SWAP8 POP PUSH2 0x2A96 DUP4 PUSH2 0x2A46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A77 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2AC6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2AD3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0x2AE0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x299F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2AF2 DUP2 DUP5 PUSH2 0x2A53 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2B06 DUP2 PUSH2 0x2701 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B23 DUP2 PUSH2 0x2AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B40 JUMPI PUSH2 0x2B3F PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B4E DUP6 DUP3 DUP7 ADD PUSH2 0x241C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B5F DUP6 DUP3 DUP7 ADD PUSH2 0x2B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B7E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x2B8B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x2B98 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x2BA5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC3 DUP2 PUSH2 0x2BAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFA JUMPI PUSH2 0x2BF9 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C08 DUP5 DUP3 DUP6 ADD PUSH2 0x247A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C58 PUSH1 0xF DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C63 DUP3 PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C87 DUP2 PUSH2 0x2C4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC4 PUSH1 0x13 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCF DUP3 PUSH2 0x2C8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CF3 DUP2 PUSH2 0x2CB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D0F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x2D1C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2842 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8C DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DBE JUMPI PUSH2 0x2DBD PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DFE DUP2 PUSH2 0x24CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E10 DUP4 DUP4 PUSH2 0x2DF5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E34 DUP3 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0x2E3E DUP2 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E49 DUP4 PUSH2 0x2DE5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E7A JUMPI DUP2 MLOAD PUSH2 0x2E61 DUP9 DUP3 PUSH2 0x2E04 JUMP JUMPDEST SWAP8 POP PUSH2 0x2E6C DUP4 PUSH2 0x2E1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E4D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E9C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2842 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2EAE DUP2 DUP5 PUSH2 0x2E29 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F02 DUP3 PUSH2 0x2EB7 JUMP JUMPDEST PUSH2 0x2F0C DUP2 DUP6 PUSH2 0x2EC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F1C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2ECD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F34 DUP3 DUP5 PUSH2 0x2EF7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4A DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F55 DUP4 PUSH2 0x24CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2F6D JUMPI PUSH2 0x2F6C PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7E DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F89 DUP4 PUSH2 0x24CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2F97 DUP2 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2FAE JUMPI PUSH2 0x2FAD PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC0 DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCB DUP4 PUSH2 0x24CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FE3 JUMPI PUSH2 0x2FE2 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF4 DUP3 PUSH2 0x2701 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFF DUP4 PUSH2 0x2701 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3023 JUMPI PUSH2 0x3022 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x303E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x304B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x3058 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2BBA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3075 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x3082 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x308F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x309C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x30A9 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x22C8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 PUSH1 0x16 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x30F4 DUP3 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3118 DUP2 PUSH2 0x30DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3159 DUP3 PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3173 JUMPI PUSH2 0x3172 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3189 DUP3 PUSH2 0x2701 JUMP JUMPDEST SWAP2 POP PUSH2 0x3194 DUP4 PUSH2 0x2701 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31B8 JUMPI PUSH2 0x31B7 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E3 PUSH2 0x31DE PUSH2 0x31D9 DUP5 PUSH2 0x2701 JUMP JUMPDEST PUSH2 0x31BE JUMP JUMPDEST PUSH2 0x24CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31F3 DUP2 PUSH2 0x31C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x320E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31EA JUMP JUMPDEST PUSH2 0x321B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3237 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x3244 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3281 PUSH1 0x16 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x328C DUP3 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32B0 DUP2 PUSH2 0x3274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32ED PUSH1 0x17 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F8 DUP3 PUSH2 0x32B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331C DUP2 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xC4 GAS PUSH31 0x57ABE309375B0BA35123512293D8F2273060345DBDFC18DEDEDA6D8B64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"487:9706:16:-:0;;;684:3;644:43;;;;;;;;;1817:1;1782:36;;1855:3;1822:36;;2275:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2341:10;355:8:1;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;2370:8:16::1;2359:19;;;;;;;;::::0;::::1;2401:13;2384:30;;;;;;;;::::0;::::1;2420:11;:9;;;:11;;:::i;:::-;2275:161:::0;;487:9706;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;2518:113:16:-;2075:20:2;:18;;;:20;;:::i;:::-;2573:31:16::1;;;;;;;;2597:5;2573:31;;;;::::0;2562:8:::1;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2615:11;;;;;;;;;;2518:113::o:0;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;88:117:21:-;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:503::-;799:6;807;856:2;844:9;835:7;831:23;827:32;824:119;;;862:79;;:::i;:::-;824:119;982:1;1007:63;1062:7;1053:6;1042:9;1038:22;1007:63;:::i;:::-;997:73;;953:127;1119:2;1145:63;1200:7;1191:6;1180:9;1176:22;1145:63;:::i;:::-;1135:73;;1090:128;722:503;;;;;:::o;1231:169::-;1315:11;1349:6;1344:3;1337:19;1389:4;1384:3;1380:14;1365:29;;1231:169;;;;:::o;1406:174::-;1546:26;1542:1;1534:6;1530:14;1523:50;1406:174;:::o;1586:366::-;1728:3;1749:67;1813:2;1808:3;1749:67;:::i;:::-;1742:74;;1825:93;1914:3;1825:93;:::i;:::-;1943:2;1938:3;1934:12;1927:19;;1586:366;;;:::o;1958:419::-;2124:4;2162:2;2151:9;2147:18;2139:26;;2211:9;2205:4;2201:20;2197:1;2186:9;2182:17;2175:47;2239:131;2365:4;2239:131;:::i;:::-;2231:139;;1958:419;;;:::o;2383:173::-;2523:25;2519:1;2511:6;2507:14;2500:49;2383:173;:::o;2562:366::-;2704:3;2725:67;2789:2;2784:3;2725:67;:::i;:::-;2718:74;;2801:93;2890:3;2801:93;:::i;:::-;2919:2;2914:3;2910:12;2903:19;;2562:366;;;:::o;2934:419::-;3100:4;3138:2;3127:9;3123:18;3115:26;;3187:9;3181:4;3177:20;3173:1;3162:9;3158:17;3151:47;3215:131;3341:4;3215:131;:::i;:::-;3207:139;;2934:419;;;:::o;3359:172::-;3499:24;3495:1;3487:6;3483:14;3476:48;3359:172;:::o;3537:366::-;3679:3;3700:67;3764:2;3759:3;3700:67;:::i;:::-;3693:74;;3776:93;3865:3;3776:93;:::i;:::-;3894:2;3889:3;3885:12;3878:19;;3537:366;;;:::o;3909:419::-;4075:4;4113:2;4102:9;4098:18;4090:26;;4162:9;4156:4;4152:20;4148:1;4137:9;4133:17;4126:47;4190:131;4316:4;4190:131;:::i;:::-;4182:139;;3909:419;;;:::o;487:9706:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_2793":{"entryPoint":2725,"id":2793,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_2795":{"entryPoint":6362,"id":2795,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_2798":{"entryPoint":3506,"id":2798,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":8559,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":8415,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":4194,"id":146,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_3697":{"entryPoint":4761,"id":3697,"parameterSlots":1,"returnSlots":0},"@addConsumer_3530":{"entryPoint":3542,"id":3530,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_3433":{"entryPoint":7405,"id":3433,"parameterSlots":2,"returnSlots":0},"@consumerIsAdded_3001":{"entryPoint":8086,"id":3001,"parameterSlots":2,"returnSlots":1},"@createSubscription_3360":{"entryPoint":5919,"id":3360,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWordsWithOverride_3215":{"entryPoint":1253,"id":3215,"parameterSlots":3,"returnSlots":0},"@fulfillRandomWords_3040":{"entryPoint":4599,"id":3040,"parameterSlots":2,"returnSlots":0},"@fundSubscription_3260":{"entryPoint":6915,"id":3260,"parameterSlots":2,"returnSlots":0},"@getConfig_3621":{"entryPoint":7373,"id":3621,"parameterSlots":0,"returnSlots":4},"@getFallbackWeiPerUnitLink_3673":{"entryPoint":2710,"id":3673,"parameterSlots":0,"returnSlots":1},"@getFeeConfig_3654":{"entryPoint":3443,"id":3654,"parameterSlots":0,"returnSlots":9},"@getRequestConfig_3488":{"entryPoint":1098,"id":3488,"parameterSlots":0,"returnSlots":3},"@getSubscription_3404":{"entryPoint":6398,"id":3404,"parameterSlots":1,"returnSlots":4},"@owner_156":{"entryPoint":4929,"id":156,"parameterSlots":0,"returnSlots":1},"@pendingRequestExists_3710":{"entryPoint":8025,"id":3710,"parameterSlots":1,"returnSlots":1},"@removeConsumer_3603":{"entryPoint":4970,"id":3603,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_3332":{"entryPoint":2761,"id":3332,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_3686":{"entryPoint":1194,"id":3686,"parameterSlots":2,"returnSlots":0},"@setConfig_2958":{"entryPoint":4820,"id":2958,"parameterSlots":0,"returnSlots":0},"@transferOwnership_110":{"entryPoint":8395,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9671,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9338,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9776,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":10118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":10162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":9244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":11028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":10183,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":10546,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9822,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint64":{"entryPoint":10610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":9359,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":11049,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":10798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":8988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":10783,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":10835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":9025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11194,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":8973,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":9943,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":12508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":11339,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":12916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":11447,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":13024,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":8873,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24_fromStack":{"entryPoint":10363,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11765,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10306,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":8904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":10697,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":12778,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":10009,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12834,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":9958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11482,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13059,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":10519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9119,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":11113,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11911,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11514,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":12384,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":12329,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed":{"entryPoint":10378,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":10712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":10024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10929,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12793,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":9595,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9181,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9622,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":10767,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":8947,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11749,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":10739,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":8919,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11721,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11959,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":10822,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":9012,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11804,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":10750,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":8930,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11732,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11970,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11281,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12213,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":12670,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12147,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12095,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":12265,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9297,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11182,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8963,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":9933,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":8859,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9265,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint24":{"entryPoint":10348,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9423,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":8888,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":9201,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":9985,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":12744,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":11981,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":9546,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":12734,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11649,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":12622,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11602,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":12575,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11555,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9499,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9477,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9666,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9196,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9191,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9482,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":12467,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":11298,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":12875,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":11406,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":12983,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9315,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10051,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":10095,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9433,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":10139,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":9221,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":11005,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:31434:21","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:21","statements":[{"nodeType":"YulAssignment","src":"61:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:21"},"nodeType":"YulFunctionCall","src":"72:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:21","type":""}],"src":"7:89:21"},{"body":{"nodeType":"YulBlock","src":"165:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:21"},"nodeType":"YulFunctionCall","src":"187:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:21"},"nodeType":"YulFunctionCall","src":"175:36:21"},"nodeType":"YulExpressionStatement","src":"175:36:21"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:21","type":""}],"src":"102:115:21"},{"body":{"nodeType":"YulBlock","src":"267:49:21","statements":[{"nodeType":"YulAssignment","src":"277:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:21"},"nodeType":"YulFunctionCall","src":"288:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:21","type":""}],"src":"223:93:21"},{"body":{"nodeType":"YulBlock","src":"385:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:21"},"nodeType":"YulFunctionCall","src":"407:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:21"},"nodeType":"YulFunctionCall","src":"395:36:21"},"nodeType":"YulExpressionStatement","src":"395:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:21","type":""}],"src":"322:115:21"},{"body":{"nodeType":"YulBlock","src":"517:40:21","statements":[{"nodeType":"YulAssignment","src":"528:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"544:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:21"},"nodeType":"YulFunctionCall","src":"538:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"528:6:21"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"500:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"510:6:21","type":""}],"src":"443:114:21"},{"body":{"nodeType":"YulBlock","src":"674:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"691:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"696:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"684:6:21"},"nodeType":"YulFunctionCall","src":"684:19:21"},"nodeType":"YulExpressionStatement","src":"684:19:21"},{"nodeType":"YulAssignment","src":"712:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"731:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"736:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:21"},"nodeType":"YulFunctionCall","src":"727:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"712:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"646:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"651:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"662:11:21","type":""}],"src":"563:184:21"},{"body":{"nodeType":"YulBlock","src":"825:60:21","statements":[{"nodeType":"YulAssignment","src":"835:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"843:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"835:4:21"}]},{"nodeType":"YulAssignment","src":"856:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"868:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"873:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:21"},"nodeType":"YulFunctionCall","src":"864:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"856:4:21"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"812:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"820:4:21","type":""}],"src":"753:132:21"},{"body":{"nodeType":"YulBlock","src":"936:32:21","statements":[{"nodeType":"YulAssignment","src":"946:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"957:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"946:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"918:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"928:7:21","type":""}],"src":"891:77:21"},{"body":{"nodeType":"YulBlock","src":"1029:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1046:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1051:17:21"},"nodeType":"YulFunctionCall","src":"1051:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1039:6:21"},"nodeType":"YulFunctionCall","src":"1039:37:21"},"nodeType":"YulExpressionStatement","src":"1039:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1017:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1024:3:21","type":""}],"src":"974:108:21"},{"body":{"nodeType":"YulBlock","src":"1168:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"1220:3:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1178:33:21"},"nodeType":"YulFunctionCall","src":"1178:46:21"},"nodeType":"YulExpressionStatement","src":"1178:46:21"},{"nodeType":"YulAssignment","src":"1233:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1251:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1256:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:21"},"nodeType":"YulFunctionCall","src":"1247:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1233:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1141:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1149:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1157:10:21","type":""}],"src":"1088:179:21"},{"body":{"nodeType":"YulBlock","src":"1348:38:21","statements":[{"nodeType":"YulAssignment","src":"1358:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1370:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1375:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:21"},"nodeType":"YulFunctionCall","src":"1366:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"1358:4:21"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1335:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1343:4:21","type":""}],"src":"1273:113:21"},{"body":{"nodeType":"YulBlock","src":"1546:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1556:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1618:5:21"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1570:47:21"},"nodeType":"YulFunctionCall","src":"1570:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1560:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1633:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1714:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1719:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1640:73:21"},"nodeType":"YulFunctionCall","src":"1640:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1633:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"1735:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1750:49:21"},"nodeType":"YulFunctionCall","src":"1750:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"1739:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1815:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"1829:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1819:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1905:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1919:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1946:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1940:5:21"},"nodeType":"YulFunctionCall","src":"1940:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"1923:13:21","type":""}]},{"nodeType":"YulAssignment","src":"1966:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2017:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"2032:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1973:43:21"},"nodeType":"YulFunctionCall","src":"1973:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1966:3:21"}]},{"nodeType":"YulAssignment","src":"2049:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2112:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2059:52:21"},"nodeType":"YulFunctionCall","src":"2059:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2049:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1864:2:21"},"nodeType":"YulFunctionCall","src":"1864:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1878:18:21","statements":[{"nodeType":"YulAssignment","src":"1880:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1889:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:21"},"nodeType":"YulFunctionCall","src":"1885:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1880:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1849:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1851:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1860:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1855:1:21","type":""}]}]},"src":"1845:284:21"},{"nodeType":"YulAssignment","src":"2138:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"2145:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2138:3:21"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1525:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1532:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1541:3:21","type":""}],"src":"1422:732:21"},{"body":{"nodeType":"YulBlock","src":"2360:385:21","statements":[{"nodeType":"YulAssignment","src":"2370:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2393:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:21"},"nodeType":"YulFunctionCall","src":"2378:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2370:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2448:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2472:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:21"},"nodeType":"YulFunctionCall","src":"2457:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2406:41:21"},"nodeType":"YulFunctionCall","src":"2406:69:21"},"nodeType":"YulExpressionStatement","src":"2406:69:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2527:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2536:3:21"},"nodeType":"YulFunctionCall","src":"2536:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"2485:41:21"},"nodeType":"YulFunctionCall","src":"2485:70:21"},"nodeType":"YulExpressionStatement","src":"2485:70:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2587:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:21"},"nodeType":"YulFunctionCall","src":"2572:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2596:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2592:3:21"},"nodeType":"YulFunctionCall","src":"2592:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:21"},"nodeType":"YulFunctionCall","src":"2565:48:21"},"nodeType":"YulExpressionStatement","src":"2565:48:21"},{"nodeType":"YulAssignment","src":"2622:116:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2724:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"2733:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2630:93:21"},"nodeType":"YulFunctionCall","src":"2630:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2622:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2328:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2336:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2344:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2355:4:21","type":""}],"src":"2160:585:21"},{"body":{"nodeType":"YulBlock","src":"2791:35:21","statements":[{"nodeType":"YulAssignment","src":"2801:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2817:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2811:5:21"},"nodeType":"YulFunctionCall","src":"2811:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2801:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2784:6:21","type":""}],"src":"2751:75:21"},{"body":{"nodeType":"YulBlock","src":"2921:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:21"},"nodeType":"YulFunctionCall","src":"2931:12:21"},"nodeType":"YulExpressionStatement","src":"2931:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2832:117:21"},{"body":{"nodeType":"YulBlock","src":"3044:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3061:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3054:6:21"},"nodeType":"YulFunctionCall","src":"3054:12:21"},"nodeType":"YulExpressionStatement","src":"3054:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2955:117:21"},{"body":{"nodeType":"YulBlock","src":"3122:57:21","statements":[{"nodeType":"YulAssignment","src":"3132:41:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3154:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3143:3:21"},"nodeType":"YulFunctionCall","src":"3143:30:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3132:7:21"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3104:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3114:7:21","type":""}],"src":"3078:101:21"},{"body":{"nodeType":"YulBlock","src":"3227:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"3283:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:21"},"nodeType":"YulFunctionCall","src":"3285:12:21"},"nodeType":"YulExpressionStatement","src":"3285:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3250:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3274:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3257:16:21"},"nodeType":"YulFunctionCall","src":"3257:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3247:2:21"},"nodeType":"YulFunctionCall","src":"3247:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3240:6:21"},"nodeType":"YulFunctionCall","src":"3240:42:21"},"nodeType":"YulIf","src":"3237:62:21"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3220:5:21","type":""}],"src":"3185:120:21"},{"body":{"nodeType":"YulBlock","src":"3362:86:21","statements":[{"nodeType":"YulAssignment","src":"3372:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3394:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3381:12:21"},"nodeType":"YulFunctionCall","src":"3381:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3372:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3436:5:21"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"3410:25:21"},"nodeType":"YulFunctionCall","src":"3410:32:21"},"nodeType":"YulExpressionStatement","src":"3410:32:21"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3340:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3348:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3356:5:21","type":""}],"src":"3311:137:21"},{"body":{"nodeType":"YulBlock","src":"3499:81:21","statements":[{"nodeType":"YulAssignment","src":"3509:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3524:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3531:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3520:3:21"},"nodeType":"YulFunctionCall","src":"3520:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3509:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3481:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3491:7:21","type":""}],"src":"3454:126:21"},{"body":{"nodeType":"YulBlock","src":"3631:51:21","statements":[{"nodeType":"YulAssignment","src":"3641:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3670:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3652:17:21"},"nodeType":"YulFunctionCall","src":"3652:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3641:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3613:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3623:7:21","type":""}],"src":"3586:96:21"},{"body":{"nodeType":"YulBlock","src":"3731:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"3788:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3797:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3800:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3790:6:21"},"nodeType":"YulFunctionCall","src":"3790:12:21"},"nodeType":"YulExpressionStatement","src":"3790:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3754:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3761:17:21"},"nodeType":"YulFunctionCall","src":"3761:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3751:2:21"},"nodeType":"YulFunctionCall","src":"3751:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3744:6:21"},"nodeType":"YulFunctionCall","src":"3744:43:21"},"nodeType":"YulIf","src":"3741:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:21","type":""}],"src":"3688:122:21"},{"body":{"nodeType":"YulBlock","src":"3868:87:21","statements":[{"nodeType":"YulAssignment","src":"3878:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3900:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3887:12:21"},"nodeType":"YulFunctionCall","src":"3887:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3878:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3943:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3916:26:21"},"nodeType":"YulFunctionCall","src":"3916:33:21"},"nodeType":"YulExpressionStatement","src":"3916:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3846:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3854:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3862:5:21","type":""}],"src":"3816:139:21"},{"body":{"nodeType":"YulBlock","src":"4043:390:21","statements":[{"body":{"nodeType":"YulBlock","src":"4089:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4091:77:21"},"nodeType":"YulFunctionCall","src":"4091:79:21"},"nodeType":"YulExpressionStatement","src":"4091:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4064:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4060:3:21"},"nodeType":"YulFunctionCall","src":"4060:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4056:3:21"},"nodeType":"YulFunctionCall","src":"4056:32:21"},"nodeType":"YulIf","src":"4053:119:21"},{"nodeType":"YulBlock","src":"4182:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4197:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4211:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4201:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4226:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4271:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:21"},"nodeType":"YulFunctionCall","src":"4256:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4280:7:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4236:19:21"},"nodeType":"YulFunctionCall","src":"4236:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4226:6:21"}]}]},{"nodeType":"YulBlock","src":"4308:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4337:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4327:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4353:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4388:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4399:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:21"},"nodeType":"YulFunctionCall","src":"4384:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4408:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4363:20:21"},"nodeType":"YulFunctionCall","src":"4363:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4353:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4016:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4028:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4036:6:21","type":""}],"src":"3961:472:21"},{"body":{"nodeType":"YulBlock","src":"4484:32:21","statements":[{"nodeType":"YulAssignment","src":"4494:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4505:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4494:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4466:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4476:7:21","type":""}],"src":"4439:77:21"},{"body":{"nodeType":"YulBlock","src":"4565:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"4622:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4631:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4634:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4624:6:21"},"nodeType":"YulFunctionCall","src":"4624:12:21"},"nodeType":"YulExpressionStatement","src":"4624:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4588:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4613:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4595:17:21"},"nodeType":"YulFunctionCall","src":"4595:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4585:2:21"},"nodeType":"YulFunctionCall","src":"4585:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4578:6:21"},"nodeType":"YulFunctionCall","src":"4578:43:21"},"nodeType":"YulIf","src":"4575:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4558:5:21","type":""}],"src":"4522:122:21"},{"body":{"nodeType":"YulBlock","src":"4702:87:21","statements":[{"nodeType":"YulAssignment","src":"4712:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4734:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4721:12:21"},"nodeType":"YulFunctionCall","src":"4721:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4712:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4777:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4750:26:21"},"nodeType":"YulFunctionCall","src":"4750:33:21"},"nodeType":"YulExpressionStatement","src":"4750:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4680:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4688:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4696:5:21","type":""}],"src":"4650:139:21"},{"body":{"nodeType":"YulBlock","src":"4884:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4901:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4904:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4894:6:21"},"nodeType":"YulFunctionCall","src":"4894:12:21"},"nodeType":"YulExpressionStatement","src":"4894:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4795:117:21"},{"body":{"nodeType":"YulBlock","src":"4966:54:21","statements":[{"nodeType":"YulAssignment","src":"4976:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4994:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5001:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:21"},"nodeType":"YulFunctionCall","src":"4990:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5010:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5006:3:21"},"nodeType":"YulFunctionCall","src":"5006:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4986:3:21"},"nodeType":"YulFunctionCall","src":"4986:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4976:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4949:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4959:6:21","type":""}],"src":"4918:102:21"},{"body":{"nodeType":"YulBlock","src":"5054:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5071:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5074:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5064:6:21"},"nodeType":"YulFunctionCall","src":"5064:88:21"},"nodeType":"YulExpressionStatement","src":"5064:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5168:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5171:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5161:6:21"},"nodeType":"YulFunctionCall","src":"5161:15:21"},"nodeType":"YulExpressionStatement","src":"5161:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5192:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5195:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5185:6:21"},"nodeType":"YulFunctionCall","src":"5185:15:21"},"nodeType":"YulExpressionStatement","src":"5185:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5026:180:21"},{"body":{"nodeType":"YulBlock","src":"5255:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5265:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5287:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5317:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5295:21:21"},"nodeType":"YulFunctionCall","src":"5295:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5283:3:21"},"nodeType":"YulFunctionCall","src":"5283:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5269:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5434:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5436:16:21"},"nodeType":"YulFunctionCall","src":"5436:18:21"},"nodeType":"YulExpressionStatement","src":"5436:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5377:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5389:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5374:2:21"},"nodeType":"YulFunctionCall","src":"5374:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5413:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5425:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5410:2:21"},"nodeType":"YulFunctionCall","src":"5410:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5371:2:21"},"nodeType":"YulFunctionCall","src":"5371:62:21"},"nodeType":"YulIf","src":"5368:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5472:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5476:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5465:6:21"},"nodeType":"YulFunctionCall","src":"5465:22:21"},"nodeType":"YulExpressionStatement","src":"5465:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5241:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"5249:4:21","type":""}],"src":"5212:281:21"},{"body":{"nodeType":"YulBlock","src":"5540:88:21","statements":[{"nodeType":"YulAssignment","src":"5550:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5560:18:21"},"nodeType":"YulFunctionCall","src":"5560:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5550:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5609:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"5617:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5589:19:21"},"nodeType":"YulFunctionCall","src":"5589:33:21"},"nodeType":"YulExpressionStatement","src":"5589:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5524:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5533:6:21","type":""}],"src":"5499:129:21"},{"body":{"nodeType":"YulBlock","src":"5716:229:21","statements":[{"body":{"nodeType":"YulBlock","src":"5821:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5823:16:21"},"nodeType":"YulFunctionCall","src":"5823:18:21"},"nodeType":"YulExpressionStatement","src":"5823:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5793:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5801:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5790:2:21"},"nodeType":"YulFunctionCall","src":"5790:30:21"},"nodeType":"YulIf","src":"5787:56:21"},{"nodeType":"YulAssignment","src":"5853:25:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5865:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5873:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5861:3:21"},"nodeType":"YulFunctionCall","src":"5861:17:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5853:4:21"}]},{"nodeType":"YulAssignment","src":"5915:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5927:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5933:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:21"},"nodeType":"YulFunctionCall","src":"5923:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5915:4:21"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5700:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5711:4:21","type":""}],"src":"5634:311:21"},{"body":{"nodeType":"YulBlock","src":"6040:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6057:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6060:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6050:6:21"},"nodeType":"YulFunctionCall","src":"6050:12:21"},"nodeType":"YulExpressionStatement","src":"6050:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5951:117:21"},{"body":{"nodeType":"YulBlock","src":"6193:608:21","statements":[{"nodeType":"YulAssignment","src":"6203:90:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6285:6:21"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6228:56:21"},"nodeType":"YulFunctionCall","src":"6228:64:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6212:15:21"},"nodeType":"YulFunctionCall","src":"6212:81:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6203:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"6302:16:21","value":{"name":"array","nodeType":"YulIdentifier","src":"6313:5:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6306:3:21","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6335:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"6342:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:21"},"nodeType":"YulFunctionCall","src":"6328:21:21"},"nodeType":"YulExpressionStatement","src":"6328:21:21"},{"nodeType":"YulAssignment","src":"6358:23:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6369:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6376:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6365:3:21"},"nodeType":"YulFunctionCall","src":"6365:16:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6358:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"6391:44:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6409:6:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6421:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6429:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6417:3:21"},"nodeType":"YulFunctionCall","src":"6417:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6405:3:21"},"nodeType":"YulFunctionCall","src":"6405:30:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6395:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6463:103:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6477:77:21"},"nodeType":"YulFunctionCall","src":"6477:79:21"},"nodeType":"YulExpressionStatement","src":"6477:79:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6450:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"6458:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6447:2:21"},"nodeType":"YulFunctionCall","src":"6447:15:21"},"nodeType":"YulIf","src":"6444:122:21"},{"body":{"nodeType":"YulBlock","src":"6651:144:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6666:21:21","value":{"name":"src","nodeType":"YulIdentifier","src":"6684:3:21"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6670:10:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6708:3:21"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6734:10:21"},{"name":"end","nodeType":"YulIdentifier","src":"6746:3:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6713:20:21"},"nodeType":"YulFunctionCall","src":"6713:37:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6701:6:21"},"nodeType":"YulFunctionCall","src":"6701:50:21"},"nodeType":"YulExpressionStatement","src":"6701:50:21"},{"nodeType":"YulAssignment","src":"6764:21:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6775:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6780:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:21"},"nodeType":"YulFunctionCall","src":"6771:14:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6764:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6604:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6609:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6601:2:21"},"nodeType":"YulFunctionCall","src":"6601:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6617:25:21","statements":[{"nodeType":"YulAssignment","src":"6619:21:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6630:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6635:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6626:3:21"},"nodeType":"YulFunctionCall","src":"6626:14:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6619:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"6579:21:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6581:17:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"6592:6:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6585:3:21","type":""}]}]},"src":"6575:220:21"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6163:6:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"6171:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6179:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6187:5:21","type":""}],"src":"6091:710:21"},{"body":{"nodeType":"YulBlock","src":"6901:293:21","statements":[{"body":{"nodeType":"YulBlock","src":"6950:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6952:77:21"},"nodeType":"YulFunctionCall","src":"6952:79:21"},"nodeType":"YulExpressionStatement","src":"6952:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6929:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6937:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:21"},"nodeType":"YulFunctionCall","src":"6925:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"6944:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6921:3:21"},"nodeType":"YulFunctionCall","src":"6921:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6914:6:21"},"nodeType":"YulFunctionCall","src":"6914:35:21"},"nodeType":"YulIf","src":"6911:122:21"},{"nodeType":"YulVariableDeclaration","src":"7042:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7069:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7056:12:21"},"nodeType":"YulFunctionCall","src":"7056:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7046:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7085:103:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7161:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7169:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:21"},"nodeType":"YulFunctionCall","src":"7157:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"7176:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"7184:3:21"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7094:62:21"},"nodeType":"YulFunctionCall","src":"7094:94:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7085:5:21"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6879:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6887:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6895:5:21","type":""}],"src":"6824:370:21"},{"body":{"nodeType":"YulBlock","src":"7325:704:21","statements":[{"body":{"nodeType":"YulBlock","src":"7371:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7373:77:21"},"nodeType":"YulFunctionCall","src":"7373:79:21"},"nodeType":"YulExpressionStatement","src":"7373:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7346:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7355:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7342:3:21"},"nodeType":"YulFunctionCall","src":"7342:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7338:3:21"},"nodeType":"YulFunctionCall","src":"7338:32:21"},"nodeType":"YulIf","src":"7335:119:21"},{"nodeType":"YulBlock","src":"7464:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7479:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7493:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7483:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7508:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7543:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7554:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7539:3:21"},"nodeType":"YulFunctionCall","src":"7539:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7563:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7518:20:21"},"nodeType":"YulFunctionCall","src":"7518:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7508:6:21"}]}]},{"nodeType":"YulBlock","src":"7591:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7606:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7620:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7610:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7636:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7682:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:21"},"nodeType":"YulFunctionCall","src":"7667:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7691:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7646:20:21"},"nodeType":"YulFunctionCall","src":"7646:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7636:6:21"}]}]},{"nodeType":"YulBlock","src":"7719:303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7734:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7776:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:21"},"nodeType":"YulFunctionCall","src":"7761:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7748:12:21"},"nodeType":"YulFunctionCall","src":"7748:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7738:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7827:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7829:77:21"},"nodeType":"YulFunctionCall","src":"7829:79:21"},"nodeType":"YulExpressionStatement","src":"7829:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7799:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7807:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7796:2:21"},"nodeType":"YulFunctionCall","src":"7796:30:21"},"nodeType":"YulIf","src":"7793:117:21"},{"nodeType":"YulAssignment","src":"7924:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7995:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7980:3:21"},"nodeType":"YulFunctionCall","src":"7980:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8004:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7934:45:21"},"nodeType":"YulFunctionCall","src":"7934:78:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7924:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7279:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7290:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7302:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7310:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7318:6:21","type":""}],"src":"7200:829:21"},{"body":{"nodeType":"YulBlock","src":"8079:32:21","statements":[{"nodeType":"YulAssignment","src":"8089:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"8100:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8089:7:21"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8061:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8071:7:21","type":""}],"src":"8035:76:21"},{"body":{"nodeType":"YulBlock","src":"8180:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8197:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8219:5:21"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"8202:16:21"},"nodeType":"YulFunctionCall","src":"8202:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8190:6:21"},"nodeType":"YulFunctionCall","src":"8190:36:21"},"nodeType":"YulExpressionStatement","src":"8190:36:21"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8168:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8175:3:21","type":""}],"src":"8117:115:21"},{"body":{"nodeType":"YulBlock","src":"8334:122:21","statements":[{"nodeType":"YulAssignment","src":"8344:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8356:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8367:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8352:3:21"},"nodeType":"YulFunctionCall","src":"8352:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8344:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8422:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8435:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8446:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8431:3:21"},"nodeType":"YulFunctionCall","src":"8431:17:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"8380:41:21"},"nodeType":"YulFunctionCall","src":"8380:69:21"},"nodeType":"YulExpressionStatement","src":"8380:69:21"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8306:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8318:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8329:4:21","type":""}],"src":"8238:218:21"},{"body":{"nodeType":"YulBlock","src":"8506:65:21","statements":[{"nodeType":"YulAssignment","src":"8516:49:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8531:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8538:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8527:3:21"},"nodeType":"YulFunctionCall","src":"8527:38:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8516:7:21"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8488:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8498:7:21","type":""}],"src":"8462:109:21"},{"body":{"nodeType":"YulBlock","src":"8640:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8657:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8679:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"8662:16:21"},"nodeType":"YulFunctionCall","src":"8662:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8650:6:21"},"nodeType":"YulFunctionCall","src":"8650:36:21"},"nodeType":"YulExpressionStatement","src":"8650:36:21"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8628:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8635:3:21","type":""}],"src":"8577:115:21"},{"body":{"nodeType":"YulBlock","src":"8794:122:21","statements":[{"nodeType":"YulAssignment","src":"8804:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8816:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8827:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8812:3:21"},"nodeType":"YulFunctionCall","src":"8812:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8804:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8882:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8895:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8906:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8891:3:21"},"nodeType":"YulFunctionCall","src":"8891:17:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"8840:41:21"},"nodeType":"YulFunctionCall","src":"8840:69:21"},"nodeType":"YulExpressionStatement","src":"8840:69:21"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8766:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8778:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8789:4:21","type":""}],"src":"8698:218:21"},{"body":{"nodeType":"YulBlock","src":"8965:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"9022:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9031:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9034:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9024:6:21"},"nodeType":"YulFunctionCall","src":"9024:12:21"},"nodeType":"YulExpressionStatement","src":"9024:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8988:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9013:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8995:17:21"},"nodeType":"YulFunctionCall","src":"8995:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8985:2:21"},"nodeType":"YulFunctionCall","src":"8985:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8978:6:21"},"nodeType":"YulFunctionCall","src":"8978:43:21"},"nodeType":"YulIf","src":"8975:63:21"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8958:5:21","type":""}],"src":"8922:122:21"},{"body":{"nodeType":"YulBlock","src":"9102:87:21","statements":[{"nodeType":"YulAssignment","src":"9112:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9134:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9121:12:21"},"nodeType":"YulFunctionCall","src":"9121:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9112:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9177:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9150:26:21"},"nodeType":"YulFunctionCall","src":"9150:33:21"},"nodeType":"YulExpressionStatement","src":"9150:33:21"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9080:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9088:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9096:5:21","type":""}],"src":"9050:139:21"},{"body":{"nodeType":"YulBlock","src":"9237:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"9293:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9302:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9305:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9295:6:21"},"nodeType":"YulFunctionCall","src":"9295:12:21"},"nodeType":"YulExpressionStatement","src":"9295:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9260:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9284:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"9267:16:21"},"nodeType":"YulFunctionCall","src":"9267:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9257:2:21"},"nodeType":"YulFunctionCall","src":"9257:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9250:6:21"},"nodeType":"YulFunctionCall","src":"9250:42:21"},"nodeType":"YulIf","src":"9247:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9230:5:21","type":""}],"src":"9195:120:21"},{"body":{"nodeType":"YulBlock","src":"9372:86:21","statements":[{"nodeType":"YulAssignment","src":"9382:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9404:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9391:12:21"},"nodeType":"YulFunctionCall","src":"9391:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9382:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9446:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"9420:25:21"},"nodeType":"YulFunctionCall","src":"9420:32:21"},"nodeType":"YulExpressionStatement","src":"9420:32:21"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9350:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9358:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9366:5:21","type":""}],"src":"9321:137:21"},{"body":{"nodeType":"YulBlock","src":"9506:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"9562:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9571:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9574:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9564:6:21"},"nodeType":"YulFunctionCall","src":"9564:12:21"},"nodeType":"YulExpressionStatement","src":"9564:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9529:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9553:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"9536:16:21"},"nodeType":"YulFunctionCall","src":"9536:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9526:2:21"},"nodeType":"YulFunctionCall","src":"9526:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9519:6:21"},"nodeType":"YulFunctionCall","src":"9519:42:21"},"nodeType":"YulIf","src":"9516:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9499:5:21","type":""}],"src":"9464:120:21"},{"body":{"nodeType":"YulBlock","src":"9641:86:21","statements":[{"nodeType":"YulAssignment","src":"9651:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9673:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9660:12:21"},"nodeType":"YulFunctionCall","src":"9660:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9651:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9715:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"9689:25:21"},"nodeType":"YulFunctionCall","src":"9689:32:21"},"nodeType":"YulExpressionStatement","src":"9689:32:21"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9619:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9627:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9635:5:21","type":""}],"src":"9590:137:21"},{"body":{"nodeType":"YulBlock","src":"9863:773:21","statements":[{"body":{"nodeType":"YulBlock","src":"9910:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9912:77:21"},"nodeType":"YulFunctionCall","src":"9912:79:21"},"nodeType":"YulExpressionStatement","src":"9912:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9884:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9893:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9880:3:21"},"nodeType":"YulFunctionCall","src":"9880:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9905:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9876:3:21"},"nodeType":"YulFunctionCall","src":"9876:33:21"},"nodeType":"YulIf","src":"9873:120:21"},{"nodeType":"YulBlock","src":"10003:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10018:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10032:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10022:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10047:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10082:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10093:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10078:3:21"},"nodeType":"YulFunctionCall","src":"10078:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10102:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10057:20:21"},"nodeType":"YulFunctionCall","src":"10057:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10047:6:21"}]}]},{"nodeType":"YulBlock","src":"10130:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10145:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10159:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10149:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10175:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10209:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10220:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10205:3:21"},"nodeType":"YulFunctionCall","src":"10205:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10229:7:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"10185:19:21"},"nodeType":"YulFunctionCall","src":"10185:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10175:6:21"}]}]},{"nodeType":"YulBlock","src":"10257:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10272:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10286:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10276:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10302:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10336:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10347:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10332:3:21"},"nodeType":"YulFunctionCall","src":"10332:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10356:7:21"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"10312:19:21"},"nodeType":"YulFunctionCall","src":"10312:52:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10302:6:21"}]}]},{"nodeType":"YulBlock","src":"10384:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10399:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10413:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10403:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10429:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:21"},"nodeType":"YulFunctionCall","src":"10459:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10439:19:21"},"nodeType":"YulFunctionCall","src":"10439:52:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10429:6:21"}]}]},{"nodeType":"YulBlock","src":"10511:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10526:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10540:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10530:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10557:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10591:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10602:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10587:3:21"},"nodeType":"YulFunctionCall","src":"10587:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10611:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10567:19:21"},"nodeType":"YulFunctionCall","src":"10567:52:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10557:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9801:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9812:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9824:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9832:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9840:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9848:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9856:6:21","type":""}],"src":"9733:903:21"},{"body":{"nodeType":"YulBlock","src":"10707:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10724:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10747:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10729:17:21"},"nodeType":"YulFunctionCall","src":"10729:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10717:6:21"},"nodeType":"YulFunctionCall","src":"10717:37:21"},"nodeType":"YulExpressionStatement","src":"10717:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10695:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10702:3:21","type":""}],"src":"10642:118:21"},{"body":{"nodeType":"YulBlock","src":"10864:124:21","statements":[{"nodeType":"YulAssignment","src":"10874:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10897:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10882:3:21"},"nodeType":"YulFunctionCall","src":"10882:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10874:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10954:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10978:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10963:3:21"},"nodeType":"YulFunctionCall","src":"10963:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10910:43:21"},"nodeType":"YulFunctionCall","src":"10910:71:21"},"nodeType":"YulExpressionStatement","src":"10910:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10836:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10848:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10859:4:21","type":""}],"src":"10766:222:21"},{"body":{"nodeType":"YulBlock","src":"11038:47:21","statements":[{"nodeType":"YulAssignment","src":"11048:31:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11063:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11070:8:21","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11059:3:21"},"nodeType":"YulFunctionCall","src":"11059:20:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11048:7:21"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11020:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11030:7:21","type":""}],"src":"10994:91:21"},{"body":{"nodeType":"YulBlock","src":"11154:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11171:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11193:5:21"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"11176:16:21"},"nodeType":"YulFunctionCall","src":"11176:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11164:6:21"},"nodeType":"YulFunctionCall","src":"11164:36:21"},"nodeType":"YulExpressionStatement","src":"11164:36:21"}]},"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11142:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11149:3:21","type":""}],"src":"11091:115:21"},{"body":{"nodeType":"YulBlock","src":"11516:768:21","statements":[{"nodeType":"YulAssignment","src":"11526:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11538:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11549:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11534:3:21"},"nodeType":"YulFunctionCall","src":"11534:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11526:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11605:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11618:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11629:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11614:3:21"},"nodeType":"YulFunctionCall","src":"11614:17:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11563:41:21"},"nodeType":"YulFunctionCall","src":"11563:69:21"},"nodeType":"YulExpressionStatement","src":"11563:69:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11684:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11708:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11693:3:21"},"nodeType":"YulFunctionCall","src":"11693:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11642:41:21"},"nodeType":"YulFunctionCall","src":"11642:70:21"},"nodeType":"YulExpressionStatement","src":"11642:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11764:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11777:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11788:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:21"},"nodeType":"YulFunctionCall","src":"11773:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11722:41:21"},"nodeType":"YulFunctionCall","src":"11722:70:21"},"nodeType":"YulExpressionStatement","src":"11722:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11844:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11857:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11868:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11853:3:21"},"nodeType":"YulFunctionCall","src":"11853:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11802:41:21"},"nodeType":"YulFunctionCall","src":"11802:70:21"},"nodeType":"YulExpressionStatement","src":"11802:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11924:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11937:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11948:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11933:3:21"},"nodeType":"YulFunctionCall","src":"11933:19:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11882:41:21"},"nodeType":"YulFunctionCall","src":"11882:71:21"},"nodeType":"YulExpressionStatement","src":"11882:71:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12005:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12018:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12029:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12014:3:21"},"nodeType":"YulFunctionCall","src":"12014:19:21"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"11963:41:21"},"nodeType":"YulFunctionCall","src":"11963:71:21"},"nodeType":"YulExpressionStatement","src":"11963:71:21"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"12086:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12099:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12110:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12095:3:21"},"nodeType":"YulFunctionCall","src":"12095:19:21"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12044:41:21"},"nodeType":"YulFunctionCall","src":"12044:71:21"},"nodeType":"YulExpressionStatement","src":"12044:71:21"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"12167:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12180:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12191:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12176:3:21"},"nodeType":"YulFunctionCall","src":"12176:19:21"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12125:41:21"},"nodeType":"YulFunctionCall","src":"12125:71:21"},"nodeType":"YulExpressionStatement","src":"12125:71:21"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"12248:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12261:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12272:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12257:3:21"},"nodeType":"YulFunctionCall","src":"12257:19:21"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12206:41:21"},"nodeType":"YulFunctionCall","src":"12206:71:21"},"nodeType":"YulExpressionStatement","src":"12206:71:21"}]},"name":"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11424:9:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"11436:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"11444:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11452:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11460:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11468:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11476:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11484:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11492:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11500:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11511:4:21","type":""}],"src":"11212:1072:21"},{"body":{"nodeType":"YulBlock","src":"12386:122:21","statements":[{"nodeType":"YulAssignment","src":"12396:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12408:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12404:3:21"},"nodeType":"YulFunctionCall","src":"12404:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12396:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12474:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12498:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:21"},"nodeType":"YulFunctionCall","src":"12483:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"12432:41:21"},"nodeType":"YulFunctionCall","src":"12432:69:21"},"nodeType":"YulExpressionStatement","src":"12432:69:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12358:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12370:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12381:4:21","type":""}],"src":"12290:218:21"},{"body":{"nodeType":"YulBlock","src":"12597:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"12643:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12645:77:21"},"nodeType":"YulFunctionCall","src":"12645:79:21"},"nodeType":"YulExpressionStatement","src":"12645:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12618:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12627:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12614:3:21"},"nodeType":"YulFunctionCall","src":"12614:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12639:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12610:3:21"},"nodeType":"YulFunctionCall","src":"12610:32:21"},"nodeType":"YulIf","src":"12607:119:21"},{"nodeType":"YulBlock","src":"12736:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12751:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12765:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12755:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12780:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12815:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12826:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12811:3:21"},"nodeType":"YulFunctionCall","src":"12811:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12835:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12790:20:21"},"nodeType":"YulFunctionCall","src":"12790:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12780:6:21"}]}]},{"nodeType":"YulBlock","src":"12863:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12878:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12892:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12882:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12908:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12943:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12954:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12939:3:21"},"nodeType":"YulFunctionCall","src":"12939:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12963:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12918:20:21"},"nodeType":"YulFunctionCall","src":"12918:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12908:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12559:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12570:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12582:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12590:6:21","type":""}],"src":"12514:474:21"},{"body":{"nodeType":"YulBlock","src":"13059:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"13105:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13107:77:21"},"nodeType":"YulFunctionCall","src":"13107:79:21"},"nodeType":"YulExpressionStatement","src":"13107:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13080:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13089:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13076:3:21"},"nodeType":"YulFunctionCall","src":"13076:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13101:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13072:3:21"},"nodeType":"YulFunctionCall","src":"13072:32:21"},"nodeType":"YulIf","src":"13069:119:21"},{"nodeType":"YulBlock","src":"13198:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13213:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13227:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13217:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13242:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13276:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13287:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13272:3:21"},"nodeType":"YulFunctionCall","src":"13272:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13296:7:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"13252:19:21"},"nodeType":"YulFunctionCall","src":"13252:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13242:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13029:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13040:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13052:6:21","type":""}],"src":"12994:327:21"},{"body":{"nodeType":"YulBlock","src":"13392:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13409:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13432:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13414:17:21"},"nodeType":"YulFunctionCall","src":"13414:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13402:6:21"},"nodeType":"YulFunctionCall","src":"13402:37:21"},"nodeType":"YulExpressionStatement","src":"13402:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13380:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13387:3:21","type":""}],"src":"13327:118:21"},{"body":{"nodeType":"YulBlock","src":"13549:124:21","statements":[{"nodeType":"YulAssignment","src":"13559:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13571:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13582:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13567:3:21"},"nodeType":"YulFunctionCall","src":"13567:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13559:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13639:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13663:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13648:3:21"},"nodeType":"YulFunctionCall","src":"13648:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13595:43:21"},"nodeType":"YulFunctionCall","src":"13595:71:21"},"nodeType":"YulExpressionStatement","src":"13595:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13521:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13533:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13544:4:21","type":""}],"src":"13451:222:21"},{"body":{"nodeType":"YulBlock","src":"13742:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13759:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13781:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13764:16:21"},"nodeType":"YulFunctionCall","src":"13764:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13752:6:21"},"nodeType":"YulFunctionCall","src":"13752:36:21"},"nodeType":"YulExpressionStatement","src":"13752:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13730:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13737:3:21","type":""}],"src":"13679:115:21"},{"body":{"nodeType":"YulBlock","src":"13896:122:21","statements":[{"nodeType":"YulAssignment","src":"13906:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13918:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13929:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13914:3:21"},"nodeType":"YulFunctionCall","src":"13914:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13906:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13984:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13997:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14008:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13993:3:21"},"nodeType":"YulFunctionCall","src":"13993:17:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13942:41:21"},"nodeType":"YulFunctionCall","src":"13942:69:21"},"nodeType":"YulExpressionStatement","src":"13942:69:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13868:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13880:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13891:4:21","type":""}],"src":"13800:218:21"},{"body":{"nodeType":"YulBlock","src":"14098:40:21","statements":[{"nodeType":"YulAssignment","src":"14109:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14125:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14119:5:21"},"nodeType":"YulFunctionCall","src":"14119:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14109:6:21"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14081:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14091:6:21","type":""}],"src":"14024:114:21"},{"body":{"nodeType":"YulBlock","src":"14255:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14272:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14277:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14265:6:21"},"nodeType":"YulFunctionCall","src":"14265:19:21"},"nodeType":"YulExpressionStatement","src":"14265:19:21"},{"nodeType":"YulAssignment","src":"14293:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14312:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14308:3:21"},"nodeType":"YulFunctionCall","src":"14308:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14293:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14227:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"14232:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14243:11:21","type":""}],"src":"14144:184:21"},{"body":{"nodeType":"YulBlock","src":"14406:60:21","statements":[{"nodeType":"YulAssignment","src":"14416:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14424:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14416:4:21"}]},{"nodeType":"YulAssignment","src":"14437:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14449:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14454:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14445:3:21"},"nodeType":"YulFunctionCall","src":"14445:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14437:4:21"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14393:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14401:4:21","type":""}],"src":"14334:132:21"},{"body":{"nodeType":"YulBlock","src":"14527:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14544:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14567:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14549:17:21"},"nodeType":"YulFunctionCall","src":"14549:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14537:6:21"},"nodeType":"YulFunctionCall","src":"14537:37:21"},"nodeType":"YulExpressionStatement","src":"14537:37:21"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14515:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14522:3:21","type":""}],"src":"14472:108:21"},{"body":{"nodeType":"YulBlock","src":"14666:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14710:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"14718:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14676:33:21"},"nodeType":"YulFunctionCall","src":"14676:46:21"},"nodeType":"YulExpressionStatement","src":"14676:46:21"},{"nodeType":"YulAssignment","src":"14731:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14749:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14754:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14745:3:21"},"nodeType":"YulFunctionCall","src":"14745:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14731:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14639:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14647:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14655:10:21","type":""}],"src":"14586:179:21"},{"body":{"nodeType":"YulBlock","src":"14846:38:21","statements":[{"nodeType":"YulAssignment","src":"14856:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14868:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14873:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14864:3:21"},"nodeType":"YulFunctionCall","src":"14864:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14856:4:21"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14833:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14841:4:21","type":""}],"src":"14771:113:21"},{"body":{"nodeType":"YulBlock","src":"15044:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15054:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15116:5:21"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15068:47:21"},"nodeType":"YulFunctionCall","src":"15068:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15058:6:21","type":""}]},{"nodeType":"YulAssignment","src":"15131:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15212:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"15217:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15138:73:21"},"nodeType":"YulFunctionCall","src":"15138:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15131:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"15233:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15298:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15248:49:21"},"nodeType":"YulFunctionCall","src":"15248:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15237:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15313:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15327:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15317:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15403:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15417:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15444:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15438:5:21"},"nodeType":"YulFunctionCall","src":"15438:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15421:13:21","type":""}]},{"nodeType":"YulAssignment","src":"15464:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15515:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"15530:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"15471:43:21"},"nodeType":"YulFunctionCall","src":"15471:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15464:3:21"}]},{"nodeType":"YulAssignment","src":"15547:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15610:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15557:52:21"},"nodeType":"YulFunctionCall","src":"15557:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15547:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15365:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"15368:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15362:2:21"},"nodeType":"YulFunctionCall","src":"15362:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15376:18:21","statements":[{"nodeType":"YulAssignment","src":"15378:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15387:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"15390:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15383:3:21"},"nodeType":"YulFunctionCall","src":"15383:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15378:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"15347:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15349:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15358:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15353:1:21","type":""}]}]},"src":"15343:284:21"},{"nodeType":"YulAssignment","src":"15636:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"15643:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15636:3:21"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15023:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15030:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15039:3:21","type":""}],"src":"14920:732:21"},{"body":{"nodeType":"YulBlock","src":"15886:468:21","statements":[{"nodeType":"YulAssignment","src":"15896:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15908:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15919:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15904:3:21"},"nodeType":"YulFunctionCall","src":"15904:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15896:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15975:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15988:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15999:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15984:3:21"},"nodeType":"YulFunctionCall","src":"15984:17:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"15933:41:21"},"nodeType":"YulFunctionCall","src":"15933:69:21"},"nodeType":"YulExpressionStatement","src":"15933:69:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16054:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16067:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16078:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16063:3:21"},"nodeType":"YulFunctionCall","src":"16063:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"16012:41:21"},"nodeType":"YulFunctionCall","src":"16012:70:21"},"nodeType":"YulExpressionStatement","src":"16012:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16136:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16149:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16160:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16145:3:21"},"nodeType":"YulFunctionCall","src":"16145:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16092:43:21"},"nodeType":"YulFunctionCall","src":"16092:72:21"},"nodeType":"YulExpressionStatement","src":"16092:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16185:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16196:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16181:3:21"},"nodeType":"YulFunctionCall","src":"16181:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16205:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16211:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16201:3:21"},"nodeType":"YulFunctionCall","src":"16201:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16174:6:21"},"nodeType":"YulFunctionCall","src":"16174:48:21"},"nodeType":"YulExpressionStatement","src":"16174:48:21"},{"nodeType":"YulAssignment","src":"16231:116:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16333:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"16342:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16239:93:21"},"nodeType":"YulFunctionCall","src":"16239:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16231:4:21"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15834:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15846:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15854:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15862:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15870:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15881:4:21","type":""}],"src":"15658:696:21"},{"body":{"nodeType":"YulBlock","src":"16402:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"16458:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16467:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16470:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16460:6:21"},"nodeType":"YulFunctionCall","src":"16460:12:21"},"nodeType":"YulExpressionStatement","src":"16460:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16425:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16449:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"16432:16:21"},"nodeType":"YulFunctionCall","src":"16432:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16422:2:21"},"nodeType":"YulFunctionCall","src":"16422:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16415:6:21"},"nodeType":"YulFunctionCall","src":"16415:42:21"},"nodeType":"YulIf","src":"16412:62:21"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16395:5:21","type":""}],"src":"16360:120:21"},{"body":{"nodeType":"YulBlock","src":"16537:86:21","statements":[{"nodeType":"YulAssignment","src":"16547:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16569:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16556:12:21"},"nodeType":"YulFunctionCall","src":"16556:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16547:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16611:5:21"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"16585:25:21"},"nodeType":"YulFunctionCall","src":"16585:32:21"},"nodeType":"YulExpressionStatement","src":"16585:32:21"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16515:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"16523:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16531:5:21","type":""}],"src":"16486:137:21"},{"body":{"nodeType":"YulBlock","src":"16710:389:21","statements":[{"body":{"nodeType":"YulBlock","src":"16756:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16758:77:21"},"nodeType":"YulFunctionCall","src":"16758:79:21"},"nodeType":"YulExpressionStatement","src":"16758:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16731:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16740:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16727:3:21"},"nodeType":"YulFunctionCall","src":"16727:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"16752:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16723:3:21"},"nodeType":"YulFunctionCall","src":"16723:32:21"},"nodeType":"YulIf","src":"16720:119:21"},{"nodeType":"YulBlock","src":"16849:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16864:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16878:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16868:6:21","type":""}]},{"nodeType":"YulAssignment","src":"16893:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16927:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"16938:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16923:3:21"},"nodeType":"YulFunctionCall","src":"16923:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16947:7:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"16903:19:21"},"nodeType":"YulFunctionCall","src":"16903:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16893:6:21"}]}]},{"nodeType":"YulBlock","src":"16975:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16990:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17004:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16994:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17020:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17054:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17065:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17050:3:21"},"nodeType":"YulFunctionCall","src":"17050:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17074:7:21"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"17030:19:21"},"nodeType":"YulFunctionCall","src":"17030:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17020:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16672:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16683:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16695:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16703:6:21","type":""}],"src":"16629:470:21"},{"body":{"nodeType":"YulBlock","src":"17279:363:21","statements":[{"nodeType":"YulAssignment","src":"17289:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17301:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17312:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17297:3:21"},"nodeType":"YulFunctionCall","src":"17297:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17289:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17368:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17381:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17392:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17377:3:21"},"nodeType":"YulFunctionCall","src":"17377:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"17326:41:21"},"nodeType":"YulFunctionCall","src":"17326:69:21"},"nodeType":"YulExpressionStatement","src":"17326:69:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17447:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17460:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17471:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17456:3:21"},"nodeType":"YulFunctionCall","src":"17456:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17405:41:21"},"nodeType":"YulFunctionCall","src":"17405:70:21"},"nodeType":"YulExpressionStatement","src":"17405:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17527:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17540:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17551:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17536:3:21"},"nodeType":"YulFunctionCall","src":"17536:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17485:41:21"},"nodeType":"YulFunctionCall","src":"17485:70:21"},"nodeType":"YulExpressionStatement","src":"17485:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17607:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17620:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17631:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17616:3:21"},"nodeType":"YulFunctionCall","src":"17616:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17565:41:21"},"nodeType":"YulFunctionCall","src":"17565:70:21"},"nodeType":"YulExpressionStatement","src":"17565:70:21"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17227:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17239:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17247:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17255:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17263:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17274:4:21","type":""}],"src":"17105:537:21"},{"body":{"nodeType":"YulBlock","src":"17690:48:21","statements":[{"nodeType":"YulAssignment","src":"17700:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17725:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17718:6:21"},"nodeType":"YulFunctionCall","src":"17718:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17711:6:21"},"nodeType":"YulFunctionCall","src":"17711:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17700:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17672:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17682:7:21","type":""}],"src":"17648:90:21"},{"body":{"nodeType":"YulBlock","src":"17803:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17820:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17840:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"17825:14:21"},"nodeType":"YulFunctionCall","src":"17825:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17813:6:21"},"nodeType":"YulFunctionCall","src":"17813:34:21"},"nodeType":"YulExpressionStatement","src":"17813:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17791:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17798:3:21","type":""}],"src":"17744:109:21"},{"body":{"nodeType":"YulBlock","src":"17951:118:21","statements":[{"nodeType":"YulAssignment","src":"17961:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17973:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17984:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17969:3:21"},"nodeType":"YulFunctionCall","src":"17969:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17961:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18035:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18048:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18059:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18044:3:21"},"nodeType":"YulFunctionCall","src":"18044:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"17997:37:21"},"nodeType":"YulFunctionCall","src":"17997:65:21"},"nodeType":"YulExpressionStatement","src":"17997:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17923:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17935:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17946:4:21","type":""}],"src":"17859:210:21"},{"body":{"nodeType":"YulBlock","src":"18141:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"18187:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18189:77:21"},"nodeType":"YulFunctionCall","src":"18189:79:21"},"nodeType":"YulExpressionStatement","src":"18189:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18162:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18171:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18158:3:21"},"nodeType":"YulFunctionCall","src":"18158:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18183:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18154:3:21"},"nodeType":"YulFunctionCall","src":"18154:32:21"},"nodeType":"YulIf","src":"18151:119:21"},{"nodeType":"YulBlock","src":"18280:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18295:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18309:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18299:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18324:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18359:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18370:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18355:3:21"},"nodeType":"YulFunctionCall","src":"18355:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18379:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18334:20:21"},"nodeType":"YulFunctionCall","src":"18334:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18324:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18111:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18122:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18134:6:21","type":""}],"src":"18075:329:21"},{"body":{"nodeType":"YulBlock","src":"18506:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18523:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"18528:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18516:6:21"},"nodeType":"YulFunctionCall","src":"18516:19:21"},"nodeType":"YulExpressionStatement","src":"18516:19:21"},{"nodeType":"YulAssignment","src":"18544:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18563:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18568:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18559:3:21"},"nodeType":"YulFunctionCall","src":"18559:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18544:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18478:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"18483:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18494:11:21","type":""}],"src":"18410:169:21"},{"body":{"nodeType":"YulBlock","src":"18691:59:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18713:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18721:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18709:3:21"},"nodeType":"YulFunctionCall","src":"18709:14:21"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"18725:17:21","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18702:6:21"},"nodeType":"YulFunctionCall","src":"18702:41:21"},"nodeType":"YulExpressionStatement","src":"18702:41:21"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18683:6:21","type":""}],"src":"18585:165:21"},{"body":{"nodeType":"YulBlock","src":"18902:220:21","statements":[{"nodeType":"YulAssignment","src":"18912:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18978:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18983:2:21","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18919:58:21"},"nodeType":"YulFunctionCall","src":"18919:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18912:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19084:3:21"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"18995:88:21"},"nodeType":"YulFunctionCall","src":"18995:93:21"},"nodeType":"YulExpressionStatement","src":"18995:93:21"},{"nodeType":"YulAssignment","src":"19097:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19108:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19113:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19104:3:21"},"nodeType":"YulFunctionCall","src":"19104:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19097:3:21"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18890:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18898:3:21","type":""}],"src":"18756:366:21"},{"body":{"nodeType":"YulBlock","src":"19299:248:21","statements":[{"nodeType":"YulAssignment","src":"19309:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19321:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19332:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19317:3:21"},"nodeType":"YulFunctionCall","src":"19317:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19309:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19356:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19367:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19352:3:21"},"nodeType":"YulFunctionCall","src":"19352:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19375:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19381:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19371:3:21"},"nodeType":"YulFunctionCall","src":"19371:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19345:6:21"},"nodeType":"YulFunctionCall","src":"19345:47:21"},"nodeType":"YulExpressionStatement","src":"19345:47:21"},{"nodeType":"YulAssignment","src":"19401:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19535:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19409:124:21"},"nodeType":"YulFunctionCall","src":"19409:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19401:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19279:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19294:4:21","type":""}],"src":"19128:419:21"},{"body":{"nodeType":"YulBlock","src":"19659:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19681:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19689:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19677:3:21"},"nodeType":"YulFunctionCall","src":"19677:14:21"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"19693:21:21","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19670:6:21"},"nodeType":"YulFunctionCall","src":"19670:45:21"},"nodeType":"YulExpressionStatement","src":"19670:45:21"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19651:6:21","type":""}],"src":"19553:169:21"},{"body":{"nodeType":"YulBlock","src":"19874:220:21","statements":[{"nodeType":"YulAssignment","src":"19884:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19950:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19955:2:21","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19891:58:21"},"nodeType":"YulFunctionCall","src":"19891:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19884:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20056:3:21"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"19967:88:21"},"nodeType":"YulFunctionCall","src":"19967:93:21"},"nodeType":"YulExpressionStatement","src":"19967:93:21"},{"nodeType":"YulAssignment","src":"20069:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20080:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20085:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20076:3:21"},"nodeType":"YulFunctionCall","src":"20076:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20069:3:21"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19862:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19870:3:21","type":""}],"src":"19728:366:21"},{"body":{"nodeType":"YulBlock","src":"20271:248:21","statements":[{"nodeType":"YulAssignment","src":"20281:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20293:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20304:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20289:3:21"},"nodeType":"YulFunctionCall","src":"20289:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20281:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20328:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20339:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20324:3:21"},"nodeType":"YulFunctionCall","src":"20324:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20347:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20353:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20343:3:21"},"nodeType":"YulFunctionCall","src":"20343:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20317:6:21"},"nodeType":"YulFunctionCall","src":"20317:47:21"},"nodeType":"YulExpressionStatement","src":"20317:47:21"},{"nodeType":"YulAssignment","src":"20373:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20507:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20381:124:21"},"nodeType":"YulFunctionCall","src":"20381:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20373:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20251:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20266:4:21","type":""}],"src":"20100:419:21"},{"body":{"nodeType":"YulBlock","src":"20651:206:21","statements":[{"nodeType":"YulAssignment","src":"20661:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20684:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20669:3:21"},"nodeType":"YulFunctionCall","src":"20669:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20661:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20741:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20754:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20765:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20750:3:21"},"nodeType":"YulFunctionCall","src":"20750:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20697:43:21"},"nodeType":"YulFunctionCall","src":"20697:71:21"},"nodeType":"YulExpressionStatement","src":"20697:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20822:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20846:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20831:3:21"},"nodeType":"YulFunctionCall","src":"20831:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20778:43:21"},"nodeType":"YulFunctionCall","src":"20778:72:21"},"nodeType":"YulExpressionStatement","src":"20778:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20615:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20627:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20635:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20646:4:21","type":""}],"src":"20525:332:21"},{"body":{"nodeType":"YulBlock","src":"20891:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20908:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20911:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20901:6:21"},"nodeType":"YulFunctionCall","src":"20901:88:21"},"nodeType":"YulExpressionStatement","src":"20901:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21005:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21008:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20998:6:21"},"nodeType":"YulFunctionCall","src":"20998:15:21"},"nodeType":"YulExpressionStatement","src":"20998:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21029:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21032:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21022:6:21"},"nodeType":"YulFunctionCall","src":"21022:15:21"},"nodeType":"YulExpressionStatement","src":"21022:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20863:180:21"},{"body":{"nodeType":"YulBlock","src":"21077:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21094:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21097:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21087:6:21"},"nodeType":"YulFunctionCall","src":"21087:88:21"},"nodeType":"YulExpressionStatement","src":"21087:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21191:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21194:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21184:6:21"},"nodeType":"YulFunctionCall","src":"21184:15:21"},"nodeType":"YulExpressionStatement","src":"21184:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21215:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21218:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21208:6:21"},"nodeType":"YulFunctionCall","src":"21208:15:21"},"nodeType":"YulExpressionStatement","src":"21208:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21049:180:21"},{"body":{"nodeType":"YulBlock","src":"21278:190:21","statements":[{"nodeType":"YulAssignment","src":"21288:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21315:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21297:17:21"},"nodeType":"YulFunctionCall","src":"21297:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21288:5:21"}]},{"body":{"nodeType":"YulBlock","src":"21411:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21413:16:21"},"nodeType":"YulFunctionCall","src":"21413:18:21"},"nodeType":"YulExpressionStatement","src":"21413:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21336:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21343:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21333:2:21"},"nodeType":"YulFunctionCall","src":"21333:77:21"},"nodeType":"YulIf","src":"21330:103:21"},{"nodeType":"YulAssignment","src":"21442:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21453:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21460:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21449:3:21"},"nodeType":"YulFunctionCall","src":"21449:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21442:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21264:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21274:3:21","type":""}],"src":"21235:233:21"},{"body":{"nodeType":"YulBlock","src":"21548:40:21","statements":[{"nodeType":"YulAssignment","src":"21559:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21575:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21569:5:21"},"nodeType":"YulFunctionCall","src":"21569:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21559:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21531:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21541:6:21","type":""}],"src":"21474:114:21"},{"body":{"nodeType":"YulBlock","src":"21705:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21722:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"21727:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21715:6:21"},"nodeType":"YulFunctionCall","src":"21715:19:21"},"nodeType":"YulExpressionStatement","src":"21715:19:21"},{"nodeType":"YulAssignment","src":"21743:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21762:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21767:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21758:3:21"},"nodeType":"YulFunctionCall","src":"21758:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21743:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21677:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"21682:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21693:11:21","type":""}],"src":"21594:184:21"},{"body":{"nodeType":"YulBlock","src":"21856:60:21","statements":[{"nodeType":"YulAssignment","src":"21866:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21874:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21866:4:21"}]},{"nodeType":"YulAssignment","src":"21887:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21899:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21904:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21895:3:21"},"nodeType":"YulFunctionCall","src":"21895:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21887:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21843:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21851:4:21","type":""}],"src":"21784:132:21"},{"body":{"nodeType":"YulBlock","src":"21977:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21994:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22017:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21999:17:21"},"nodeType":"YulFunctionCall","src":"21999:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21987:6:21"},"nodeType":"YulFunctionCall","src":"21987:37:21"},"nodeType":"YulExpressionStatement","src":"21987:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21965:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21972:3:21","type":""}],"src":"21922:108:21"},{"body":{"nodeType":"YulBlock","src":"22116:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22160:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"22168:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22126:33:21"},"nodeType":"YulFunctionCall","src":"22126:46:21"},"nodeType":"YulExpressionStatement","src":"22126:46:21"},{"nodeType":"YulAssignment","src":"22181:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22199:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22204:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22195:3:21"},"nodeType":"YulFunctionCall","src":"22195:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"22181:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"22089:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22097:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"22105:10:21","type":""}],"src":"22036:179:21"},{"body":{"nodeType":"YulBlock","src":"22296:38:21","statements":[{"nodeType":"YulAssignment","src":"22306:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22318:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22323:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22314:3:21"},"nodeType":"YulFunctionCall","src":"22314:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"22306:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22283:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"22291:4:21","type":""}],"src":"22221:113:21"},{"body":{"nodeType":"YulBlock","src":"22494:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"22504:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22566:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22518:47:21"},"nodeType":"YulFunctionCall","src":"22518:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22508:6:21","type":""}]},{"nodeType":"YulAssignment","src":"22581:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22662:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"22667:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22588:73:21"},"nodeType":"YulFunctionCall","src":"22588:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22581:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"22683:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22748:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22698:49:21"},"nodeType":"YulFunctionCall","src":"22698:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22687:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22763:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22777:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22767:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"22853:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"22867:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22894:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22888:5:21"},"nodeType":"YulFunctionCall","src":"22888:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22871:13:21","type":""}]},{"nodeType":"YulAssignment","src":"22914:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"22965:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"22980:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22921:43:21"},"nodeType":"YulFunctionCall","src":"22921:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22914:3:21"}]},{"nodeType":"YulAssignment","src":"22997:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23060:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23007:52:21"},"nodeType":"YulFunctionCall","src":"23007:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22997:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22815:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"22818:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22812:2:21"},"nodeType":"YulFunctionCall","src":"22812:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22826:18:21","statements":[{"nodeType":"YulAssignment","src":"22828:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22837:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"22840:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22833:3:21"},"nodeType":"YulFunctionCall","src":"22833:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22828:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"22797:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"22799:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"22808:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22803:1:21","type":""}]}]},"src":"22793:284:21"},{"nodeType":"YulAssignment","src":"23086:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"23093:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23086:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22473:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22480:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22489:3:21","type":""}],"src":"22370:732:21"},{"body":{"nodeType":"YulBlock","src":"23284:307:21","statements":[{"nodeType":"YulAssignment","src":"23294:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23306:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23317:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23302:3:21"},"nodeType":"YulFunctionCall","src":"23302:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23294:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23374:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23387:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23398:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23383:3:21"},"nodeType":"YulFunctionCall","src":"23383:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23330:43:21"},"nodeType":"YulFunctionCall","src":"23330:71:21"},"nodeType":"YulExpressionStatement","src":"23330:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23422:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23433:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23418:3:21"},"nodeType":"YulFunctionCall","src":"23418:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23442:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23448:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23438:3:21"},"nodeType":"YulFunctionCall","src":"23438:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23411:6:21"},"nodeType":"YulFunctionCall","src":"23411:48:21"},"nodeType":"YulExpressionStatement","src":"23411:48:21"},{"nodeType":"YulAssignment","src":"23468:116:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23570:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"23579:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23476:93:21"},"nodeType":"YulFunctionCall","src":"23476:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23468:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23248:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23260:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23268:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23279:4:21","type":""}],"src":"23108:483:21"},{"body":{"nodeType":"YulBlock","src":"23655:40:21","statements":[{"nodeType":"YulAssignment","src":"23666:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23682:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23676:5:21"},"nodeType":"YulFunctionCall","src":"23676:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23666:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23638:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23648:6:21","type":""}],"src":"23597:98:21"},{"body":{"nodeType":"YulBlock","src":"23814:34:21","statements":[{"nodeType":"YulAssignment","src":"23824:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"23839:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23824:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23786:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"23791:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23802:11:21","type":""}],"src":"23701:147:21"},{"body":{"nodeType":"YulBlock","src":"23916:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"23926:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"23935:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23930:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"23995:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"24020:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"24025:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24016:3:21"},"nodeType":"YulFunctionCall","src":"24016:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24039:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"24044:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24035:3:21"},"nodeType":"YulFunctionCall","src":"24035:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24029:5:21"},"nodeType":"YulFunctionCall","src":"24029:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24009:6:21"},"nodeType":"YulFunctionCall","src":"24009:39:21"},"nodeType":"YulExpressionStatement","src":"24009:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23956:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"23959:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23953:2:21"},"nodeType":"YulFunctionCall","src":"23953:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23967:19:21","statements":[{"nodeType":"YulAssignment","src":"23969:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23978:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"23981:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23974:3:21"},"nodeType":"YulFunctionCall","src":"23974:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23969:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"23949:3:21","statements":[]},"src":"23945:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"24078:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24083:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24074:3:21"},"nodeType":"YulFunctionCall","src":"24074:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"24092:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24067:6:21"},"nodeType":"YulFunctionCall","src":"24067:27:21"},"nodeType":"YulExpressionStatement","src":"24067:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"23898:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"23903:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"23908:6:21","type":""}],"src":"23854:246:21"},{"body":{"nodeType":"YulBlock","src":"24214:278:21","statements":[{"nodeType":"YulVariableDeclaration","src":"24224:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24270:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"24238:31:21"},"nodeType":"YulFunctionCall","src":"24238:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24228:6:21","type":""}]},{"nodeType":"YulAssignment","src":"24285:95:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24368:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24373:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24292:75:21"},"nodeType":"YulFunctionCall","src":"24292:88:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24285:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24428:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"24435:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24424:3:21"},"nodeType":"YulFunctionCall","src":"24424:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"24442:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24447:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24389:34:21"},"nodeType":"YulFunctionCall","src":"24389:65:21"},"nodeType":"YulExpressionStatement","src":"24389:65:21"},{"nodeType":"YulAssignment","src":"24463:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24474:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24479:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24470:3:21"},"nodeType":"YulFunctionCall","src":"24470:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24463:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24195:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24202:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24210:3:21","type":""}],"src":"24106:386:21"},{"body":{"nodeType":"YulBlock","src":"24632:137:21","statements":[{"nodeType":"YulAssignment","src":"24643:100:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24730:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"24739:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24650:79:21"},"nodeType":"YulFunctionCall","src":"24650:93:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24643:3:21"}]},{"nodeType":"YulAssignment","src":"24753:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"24760:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24753:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24611:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24617:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24628:3:21","type":""}],"src":"24498:271:21"},{"body":{"nodeType":"YulBlock","src":"24820:149:21","statements":[{"nodeType":"YulAssignment","src":"24830:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24853:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24835:17:21"},"nodeType":"YulFunctionCall","src":"24835:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24830:1:21"}]},{"nodeType":"YulAssignment","src":"24864:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24887:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24869:17:21"},"nodeType":"YulFunctionCall","src":"24869:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24864:1:21"}]},{"nodeType":"YulAssignment","src":"24898:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24910:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24913:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24906:3:21"},"nodeType":"YulFunctionCall","src":"24906:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24898:4:21"}]},{"body":{"nodeType":"YulBlock","src":"24940:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24942:16:21"},"nodeType":"YulFunctionCall","src":"24942:18:21"},"nodeType":"YulExpressionStatement","src":"24942:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"24931:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"24937:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24928:2:21"},"nodeType":"YulFunctionCall","src":"24928:11:21"},"nodeType":"YulIf","src":"24925:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24806:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"24809:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24815:4:21","type":""}],"src":"24775:194:21"},{"body":{"nodeType":"YulBlock","src":"25023:362:21","statements":[{"nodeType":"YulAssignment","src":"25033:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25056:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25038:17:21"},"nodeType":"YulFunctionCall","src":"25038:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25033:1:21"}]},{"nodeType":"YulAssignment","src":"25067:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25090:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25072:17:21"},"nodeType":"YulFunctionCall","src":"25072:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25067:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"25101:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25124:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"25127:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25120:3:21"},"nodeType":"YulFunctionCall","src":"25120:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"25105:11:21","type":""}]},{"nodeType":"YulAssignment","src":"25138:41:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"25167:11:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25149:17:21"},"nodeType":"YulFunctionCall","src":"25149:30:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"25138:7:21"}]},{"body":{"nodeType":"YulBlock","src":"25356:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25358:16:21"},"nodeType":"YulFunctionCall","src":"25358:18:21"},"nodeType":"YulExpressionStatement","src":"25358:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25289:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25282:6:21"},"nodeType":"YulFunctionCall","src":"25282:9:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25312:1:21"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"25319:7:21"},{"name":"x","nodeType":"YulIdentifier","src":"25328:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25315:3:21"},"nodeType":"YulFunctionCall","src":"25315:15:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25309:2:21"},"nodeType":"YulFunctionCall","src":"25309:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25262:2:21"},"nodeType":"YulFunctionCall","src":"25262:83:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25242:6:21"},"nodeType":"YulFunctionCall","src":"25242:113:21"},"nodeType":"YulIf","src":"25239:139:21"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25006:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"25009:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"25015:7:21","type":""}],"src":"24975:410:21"},{"body":{"nodeType":"YulBlock","src":"25435:147:21","statements":[{"nodeType":"YulAssignment","src":"25445:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25468:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25450:17:21"},"nodeType":"YulFunctionCall","src":"25450:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25445:1:21"}]},{"nodeType":"YulAssignment","src":"25479:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25502:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25484:17:21"},"nodeType":"YulFunctionCall","src":"25484:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25479:1:21"}]},{"nodeType":"YulAssignment","src":"25513:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25524:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"25527:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25520:3:21"},"nodeType":"YulFunctionCall","src":"25520:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"25513:3:21"}]},{"body":{"nodeType":"YulBlock","src":"25553:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25555:16:21"},"nodeType":"YulFunctionCall","src":"25555:18:21"},"nodeType":"YulExpressionStatement","src":"25555:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25545:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"25548:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25542:2:21"},"nodeType":"YulFunctionCall","src":"25542:10:21"},"nodeType":"YulIf","src":"25539:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25422:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"25425:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"25431:3:21","type":""}],"src":"25391:191:21"},{"body":{"nodeType":"YulBlock","src":"25632:172:21","statements":[{"nodeType":"YulAssignment","src":"25642:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25664:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"25647:16:21"},"nodeType":"YulFunctionCall","src":"25647:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25642:1:21"}]},{"nodeType":"YulAssignment","src":"25675:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25697:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"25680:16:21"},"nodeType":"YulFunctionCall","src":"25680:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25675:1:21"}]},{"nodeType":"YulAssignment","src":"25708:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25720:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"25723:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25716:3:21"},"nodeType":"YulFunctionCall","src":"25716:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25708:4:21"}]},{"body":{"nodeType":"YulBlock","src":"25775:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25777:16:21"},"nodeType":"YulFunctionCall","src":"25777:18:21"},"nodeType":"YulExpressionStatement","src":"25777:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"25741:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"25747:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25738:2:21"},"nodeType":"YulFunctionCall","src":"25738:36:21"},"nodeType":"YulIf","src":"25735:62:21"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25618:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"25621:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25627:4:21","type":""}],"src":"25588:216:21"},{"body":{"nodeType":"YulBlock","src":"25956:280:21","statements":[{"nodeType":"YulAssignment","src":"25966:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25989:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25974:3:21"},"nodeType":"YulFunctionCall","src":"25974:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25966:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26046:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26070:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26055:3:21"},"nodeType":"YulFunctionCall","src":"26055:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26002:43:21"},"nodeType":"YulFunctionCall","src":"26002:71:21"},"nodeType":"YulExpressionStatement","src":"26002:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26125:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26138:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26149:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26134:3:21"},"nodeType":"YulFunctionCall","src":"26134:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"26083:41:21"},"nodeType":"YulFunctionCall","src":"26083:70:21"},"nodeType":"YulExpressionStatement","src":"26083:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26201:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26225:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26210:3:21"},"nodeType":"YulFunctionCall","src":"26210:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"26163:37:21"},"nodeType":"YulFunctionCall","src":"26163:66:21"},"nodeType":"YulExpressionStatement","src":"26163:66:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25912:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25932:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25940:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25951:4:21","type":""}],"src":"25810:426:21"},{"body":{"nodeType":"YulBlock","src":"26446:448:21","statements":[{"nodeType":"YulAssignment","src":"26456:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26468:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26479:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26464:3:21"},"nodeType":"YulFunctionCall","src":"26464:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26456:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26537:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26550:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26561:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26546:3:21"},"nodeType":"YulFunctionCall","src":"26546:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26493:43:21"},"nodeType":"YulFunctionCall","src":"26493:71:21"},"nodeType":"YulExpressionStatement","src":"26493:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26618:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26631:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26642:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26627:3:21"},"nodeType":"YulFunctionCall","src":"26627:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26574:43:21"},"nodeType":"YulFunctionCall","src":"26574:72:21"},"nodeType":"YulExpressionStatement","src":"26574:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26698:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26711:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26722:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26707:3:21"},"nodeType":"YulFunctionCall","src":"26707:18:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"26656:41:21"},"nodeType":"YulFunctionCall","src":"26656:70:21"},"nodeType":"YulExpressionStatement","src":"26656:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26778:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26791:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26802:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26787:3:21"},"nodeType":"YulFunctionCall","src":"26787:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26736:41:21"},"nodeType":"YulFunctionCall","src":"26736:70:21"},"nodeType":"YulExpressionStatement","src":"26736:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"26858:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26871:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26882:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26867:3:21"},"nodeType":"YulFunctionCall","src":"26867:19:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26816:41:21"},"nodeType":"YulFunctionCall","src":"26816:71:21"},"nodeType":"YulExpressionStatement","src":"26816:71:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26386:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26398:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26406:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26414:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26422:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26430:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26441:4:21","type":""}],"src":"26242:652:21"},{"body":{"nodeType":"YulBlock","src":"27006:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27028:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27036:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27024:3:21"},"nodeType":"YulFunctionCall","src":"27024:14:21"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"27040:24:21","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27017:6:21"},"nodeType":"YulFunctionCall","src":"27017:48:21"},"nodeType":"YulExpressionStatement","src":"27017:48:21"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26998:6:21","type":""}],"src":"26900:172:21"},{"body":{"nodeType":"YulBlock","src":"27224:220:21","statements":[{"nodeType":"YulAssignment","src":"27234:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27300:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27305:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27241:58:21"},"nodeType":"YulFunctionCall","src":"27241:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27234:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27406:3:21"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"27317:88:21"},"nodeType":"YulFunctionCall","src":"27317:93:21"},"nodeType":"YulExpressionStatement","src":"27317:93:21"},{"nodeType":"YulAssignment","src":"27419:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27430:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27435:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27426:3:21"},"nodeType":"YulFunctionCall","src":"27426:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27419:3:21"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27212:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27220:3:21","type":""}],"src":"27078:366:21"},{"body":{"nodeType":"YulBlock","src":"27621:248:21","statements":[{"nodeType":"YulAssignment","src":"27631:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27643:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27654:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27639:3:21"},"nodeType":"YulFunctionCall","src":"27639:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27631:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27678:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27689:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27674:3:21"},"nodeType":"YulFunctionCall","src":"27674:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27697:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27703:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27693:3:21"},"nodeType":"YulFunctionCall","src":"27693:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27667:6:21"},"nodeType":"YulFunctionCall","src":"27667:47:21"},"nodeType":"YulExpressionStatement","src":"27667:47:21"},{"nodeType":"YulAssignment","src":"27723:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27857:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27731:124:21"},"nodeType":"YulFunctionCall","src":"27731:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27723:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27601:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27616:4:21","type":""}],"src":"27450:419:21"},{"body":{"nodeType":"YulBlock","src":"27903:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27920:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27923:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27913:6:21"},"nodeType":"YulFunctionCall","src":"27913:88:21"},"nodeType":"YulExpressionStatement","src":"27913:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28017:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28020:4:21","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28010:6:21"},"nodeType":"YulFunctionCall","src":"28010:15:21"},"nodeType":"YulExpressionStatement","src":"28010:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28041:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28044:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28034:6:21"},"nodeType":"YulFunctionCall","src":"28034:15:21"},"nodeType":"YulExpressionStatement","src":"28034:15:21"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"27875:180:21"},{"body":{"nodeType":"YulBlock","src":"28103:141:21","statements":[{"nodeType":"YulAssignment","src":"28113:32:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28139:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"28122:16:21"},"nodeType":"YulFunctionCall","src":"28122:23:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28113:5:21"}]},{"body":{"nodeType":"YulBlock","src":"28187:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28189:16:21"},"nodeType":"YulFunctionCall","src":"28189:18:21"},"nodeType":"YulExpressionStatement","src":"28189:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28160:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"28167:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28157:2:21"},"nodeType":"YulFunctionCall","src":"28157:29:21"},"nodeType":"YulIf","src":"28154:55:21"},{"nodeType":"YulAssignment","src":"28218:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28229:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"28236:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28225:3:21"},"nodeType":"YulFunctionCall","src":"28225:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28218:3:21"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28089:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28099:3:21","type":""}],"src":"28061:183:21"},{"body":{"nodeType":"YulBlock","src":"28293:170:21","statements":[{"nodeType":"YulAssignment","src":"28303:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28325:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"28308:16:21"},"nodeType":"YulFunctionCall","src":"28308:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28303:1:21"}]},{"nodeType":"YulAssignment","src":"28336:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28358:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"28341:16:21"},"nodeType":"YulFunctionCall","src":"28341:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28336:1:21"}]},{"nodeType":"YulAssignment","src":"28369:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28380:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"28383:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28376:3:21"},"nodeType":"YulFunctionCall","src":"28376:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28369:3:21"}]},{"body":{"nodeType":"YulBlock","src":"28434:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28436:16:21"},"nodeType":"YulFunctionCall","src":"28436:18:21"},"nodeType":"YulExpressionStatement","src":"28436:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"28401:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28406:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28398:2:21"},"nodeType":"YulFunctionCall","src":"28398:35:21"},"nodeType":"YulIf","src":"28395:61:21"}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28280:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"28283:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28289:3:21","type":""}],"src":"28250:213:21"},{"body":{"nodeType":"YulBlock","src":"28501:28:21","statements":[{"nodeType":"YulAssignment","src":"28511:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"28518:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28511:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28487:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28497:3:21","type":""}],"src":"28469:60:21"},{"body":{"nodeType":"YulBlock","src":"28594:81:21","statements":[{"nodeType":"YulAssignment","src":"28604:65:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28661:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"28644:16:21"},"nodeType":"YulFunctionCall","src":"28644:23:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"28635:8:21"},"nodeType":"YulFunctionCall","src":"28635:33:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28617:17:21"},"nodeType":"YulFunctionCall","src":"28617:52:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"28604:9:21"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28574:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"28584:9:21","type":""}],"src":"28535:140:21"},{"body":{"nodeType":"YulBlock","src":"28745:65:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28762:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28797:5:21"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"28767:29:21"},"nodeType":"YulFunctionCall","src":"28767:36:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28755:6:21"},"nodeType":"YulFunctionCall","src":"28755:49:21"},"nodeType":"YulExpressionStatement","src":"28755:49:21"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28733:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28740:3:21","type":""}],"src":"28681:129:21"},{"body":{"nodeType":"YulBlock","src":"28940:204:21","statements":[{"nodeType":"YulAssignment","src":"28950:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28962:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28973:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28958:3:21"},"nodeType":"YulFunctionCall","src":"28958:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28950:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29029:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29042:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29053:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29038:3:21"},"nodeType":"YulFunctionCall","src":"29038:17:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28986:42:21"},"nodeType":"YulFunctionCall","src":"28986:70:21"},"nodeType":"YulExpressionStatement","src":"28986:70:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29109:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29122:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29133:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29118:3:21"},"nodeType":"YulFunctionCall","src":"29118:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29066:42:21"},"nodeType":"YulFunctionCall","src":"29066:71:21"},"nodeType":"YulExpressionStatement","src":"29066:71:21"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28904:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28916:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28924:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28935:4:21","type":""}],"src":"28816:328:21"},{"body":{"nodeType":"YulBlock","src":"29275:205:21","statements":[{"nodeType":"YulAssignment","src":"29285:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29297:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29308:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29293:3:21"},"nodeType":"YulFunctionCall","src":"29293:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29285:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29365:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29378:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29389:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29374:3:21"},"nodeType":"YulFunctionCall","src":"29374:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29321:43:21"},"nodeType":"YulFunctionCall","src":"29321:71:21"},"nodeType":"YulExpressionStatement","src":"29321:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29445:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29458:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29469:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29454:3:21"},"nodeType":"YulFunctionCall","src":"29454:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29402:42:21"},"nodeType":"YulFunctionCall","src":"29402:71:21"},"nodeType":"YulExpressionStatement","src":"29402:71:21"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29239:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29251:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29259:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29270:4:21","type":""}],"src":"29150:330:21"},{"body":{"nodeType":"YulBlock","src":"29592:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29614:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29622:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29610:3:21"},"nodeType":"YulFunctionCall","src":"29610:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"29626:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29603:6:21"},"nodeType":"YulFunctionCall","src":"29603:48:21"},"nodeType":"YulExpressionStatement","src":"29603:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29584:6:21","type":""}],"src":"29486:172:21"},{"body":{"nodeType":"YulBlock","src":"29810:220:21","statements":[{"nodeType":"YulAssignment","src":"29820:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29886:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29891:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29827:58:21"},"nodeType":"YulFunctionCall","src":"29827:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29820:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29992:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"29903:88:21"},"nodeType":"YulFunctionCall","src":"29903:93:21"},"nodeType":"YulExpressionStatement","src":"29903:93:21"},{"nodeType":"YulAssignment","src":"30005:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30016:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30021:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30012:3:21"},"nodeType":"YulFunctionCall","src":"30012:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30005:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29798:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29806:3:21","type":""}],"src":"29664:366:21"},{"body":{"nodeType":"YulBlock","src":"30207:248:21","statements":[{"nodeType":"YulAssignment","src":"30217:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30229:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30240:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30225:3:21"},"nodeType":"YulFunctionCall","src":"30225:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30217:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30264:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30275:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30260:3:21"},"nodeType":"YulFunctionCall","src":"30260:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30283:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"30289:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30279:3:21"},"nodeType":"YulFunctionCall","src":"30279:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30253:6:21"},"nodeType":"YulFunctionCall","src":"30253:47:21"},"nodeType":"YulExpressionStatement","src":"30253:47:21"},{"nodeType":"YulAssignment","src":"30309:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30443:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30317:124:21"},"nodeType":"YulFunctionCall","src":"30317:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30309:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30187:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30202:4:21","type":""}],"src":"30036:419:21"},{"body":{"nodeType":"YulBlock","src":"30567:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30589:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30597:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30585:3:21"},"nodeType":"YulFunctionCall","src":"30585:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"30601:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30578:6:21"},"nodeType":"YulFunctionCall","src":"30578:49:21"},"nodeType":"YulExpressionStatement","src":"30578:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30559:6:21","type":""}],"src":"30461:173:21"},{"body":{"nodeType":"YulBlock","src":"30786:220:21","statements":[{"nodeType":"YulAssignment","src":"30796:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30862:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30867:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30803:58:21"},"nodeType":"YulFunctionCall","src":"30803:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30796:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30968:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"30879:88:21"},"nodeType":"YulFunctionCall","src":"30879:93:21"},"nodeType":"YulExpressionStatement","src":"30879:93:21"},{"nodeType":"YulAssignment","src":"30981:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30992:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30997:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30988:3:21"},"nodeType":"YulFunctionCall","src":"30988:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30981:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30774:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30782:3:21","type":""}],"src":"30640:366:21"},{"body":{"nodeType":"YulBlock","src":"31183:248:21","statements":[{"nodeType":"YulAssignment","src":"31193:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31216:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31201:3:21"},"nodeType":"YulFunctionCall","src":"31201:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31193:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31240:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31251:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31236:3:21"},"nodeType":"YulFunctionCall","src":"31236:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31259:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31265:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31255:3:21"},"nodeType":"YulFunctionCall","src":"31255:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31229:6:21"},"nodeType":"YulFunctionCall","src":"31229:47:21"},"nodeType":"YulExpressionStatement","src":"31229:47:21"},{"nodeType":"YulAssignment","src":"31285:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31419:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31293:124:21"},"nodeType":"YulFunctionCall","src":"31293:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31285:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31163:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31178:4:21","type":""}],"src":"31012:419:21"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2793":[{"length":32,"start":2200},{"length":32,"start":2727}],"2795":[{"length":32,"start":2131},{"length":32,"start":6364}],"2798":[{"length":32,"start":3508},{"length":32,"start":3838}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101575760003560e01c80638b673e7a116100c3578063afc69b531161007c578063afc69b5314610375578063c3f909d414610391578063d7ae1d30146103b2578063e82ad7d4146103ce578063ed5eb06d146103fe578063f2fde38b1461042e57610157565b80638b673e7a146102c25780638da5cb5b146102cc5780639f87fad7146102ea578063a21a23e414610306578063a410347f14610324578063a47c76961461034257610157565b80635fbbc0d2116101155780635fbbc0d21461022057806364d51a2a146102465780637341c10c1461026457806379ba509714610280578063808974ff1461028a57806382359740146102a657610157565b80620122911461015c57806304c357cb1461017c57806308e3898e14610198578063356dac71146101b45780633d18651e146101d25780635d3b1d30146101f0575b600080fd5b61016461044a565b6040516101739392919061239f565b60405180910390f35b6101966004803603810190610191919061248f565b6104aa565b005b6101b260048036038101906101ad919061265e565b6104e5565b005b6101bc610a96565b6040516101c991906126e6565b60405180910390f35b6101da610aa5565b6040516101e79190612728565b60405180910390f35b61020a600480360381019061020591906127c7565b610ac9565b6040516102179190612851565b60405180910390f35b610228610d73565b60405161023d9998979695949392919061288a565b60405180910390f35b61024e610db2565b60405161025b9190612917565b60405180910390f35b61027e6004803603810190610279919061248f565b610dd6565b005b610288611062565b005b6102a4600480360381019061029f9190612932565b6111f7565b005b6102c060048036038101906102bb9190612972565b611299565b005b6102ca6112d4565b005b6102d4611341565b6040516102e191906129ae565b60405180910390f35b61030460048036038101906102ff919061248f565b61136a565b005b61030e61171f565b60405161031b91906129d8565b60405180910390f35b61032c6118da565b6040516103399190612728565b60405180910390f35b61035c60048036038101906103579190612972565b6118fe565b60405161036c9493929190612ab1565b60405180910390f35b61038f600480360381019061038a9190612b29565b611b03565b005b610399611ccd565b6040516103a99493929190612b69565b60405180910390f35b6103cc60048036038101906103c7919061248f565b611ced565b005b6103e860048036038101906103e39190612972565b611f59565b6040516103f59190612bc9565b60405180910390f35b6104186004803603810190610413919061248f565b611f96565b6040516104259190612bc9565b60405180910390f35b61044860048036038101906104439190612be4565b6120cb565b005b60008060606003621e8480600067ffffffffffffffff8111156104705761046f61251b565b5b60405190808252806020026020018201604052801561049e5781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90612c6e565b60405180910390fd5b60005a905060006008600086815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1603610561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055890612cda565b60405180910390fd5b6000600860008681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008351036106d857806040015163ffffffff1667ffffffffffffffff81111561062e5761062d61251b565b5b60405190808252806020026020018201604052801561065c5781602001602082028036833780820191505090505b50925060005b816040015163ffffffff168110156106d2578581604051602001610687929190612cfa565b6040516020818303038152906040528051906020012060001c8482815181106106b3576106b2612d23565b5b60200260200101818152505080806106ca90612d81565b915050610662565b5061071d565b806040015163ffffffff1683511461071c576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b878660405160240161073b929190612e87565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001600260000160006101000a81548160ff02191690831515021790555060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff16836040516107ea9190612f28565b60006040518083038160008787f1925050503d8060008114610828576040519150601f19603f3d011682016040523d82523d6000602084013e61082d565b606091505b505090506000600260000160006101000a81548160ff02191690831515021790555060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a8761088c9190612f3f565b6108969190612f73565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108cf9190612fb5565b9050806bffffffffffffffffffffffff1660066000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16101561096d576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060066000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109c29190612fe9565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600860008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a8393929190613029565b60405180910390a2505050505050505050565b6000660e35fa931a0000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600260000160009054906101000a900460ff1615610b15576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8433610b218282611f96565b610b57576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c07576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060046000815480929190610c1c90612d81565b919050559050600060056000815480929190610c3790612d81565b91905055905060405180606001604052808a67ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff168152506008600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168967ffffffffffffffff168b7f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858d8d8d604051610d5b959493929190613060565b60405180910390a48194505050505095945050505050565b6000806000806000806000806000620186a080620186a080620186a0600080600080985098509850985098509850985098509850909192939495969798565b7f000000000000000000000000000000000000000000000000000000000000000081565b816000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8c576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610efc57806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401610ef391906129ae565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff16600760008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208054905003610f83576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f8d8484611f96565b61105c57600760008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc38460405161105391906129ae565b60405180910390a25b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e9906130ff565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600260000160009054906101000a900460ff1615611241576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112958282600067ffffffffffffffff8111156112615761126061251b565b5b60405190808252806020026020018201604052801561128f5781602001602082028036833780820191505090505b506104e5565b5050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb90612c6e565b60405180910390fd5b6112dc6120df565b604051806020016040528060001515815250600260008201518160000160006101000a81548160ff0219169083151502179055509050507f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be60405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b816000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611420576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461149057806040517fd8a3fb5200000000000000000000000000000000000000000000000000000000815260040161148791906129ae565b60405180910390fd5b838361149c8282611f96565b6114d2576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260000160009054906101000a900460ff161561151c576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600760008867ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060005b81805490508110156116d3578673ffffffffffffffffffffffffffffffffffffffff168282815481106115805761157f612d23565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116c057600082600184805490506115da9190612f3f565b815481106115eb576115ea612d23565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061162c5761162b612d23565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806116855761168461311f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055506116d3565b80806116cb90612d81565b91505061154a565b508667ffffffffffffffff167ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc8760405161170e91906129ae565b60405180910390a250505050505050565b60006003600081819054906101000a900467ffffffffffffffff16809291906117479061314e565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff1681525060066000600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550905050600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf336040516118b691906129ae565b60405180910390a2600360009054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119b5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600760008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002080805480602002602001604051908101604052809291908181526020018280548015611aed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611aa3575b5050505050905093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611bb3576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16611c4b919061317e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f8828484611cb2919061317e565b604051611cc09291906131f9565b60405180910390a2505050565b6000806000806004622625a0610a8c618205935093509350935090919293565b816000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611da3576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e1357806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611e0a91906129ae565b60405180910390fd5b600260000160009054906101000a900460ff1615611e5d576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16604051611edb929190613222565b60405180910390a2600660008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8d90612c6e565b60405180910390fd5b600080600760008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561204057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ff6575b5050505050905060005b81518110156120be578373ffffffffffffffffffffffffffffffffffffffff1682828151811061207d5761207c612d23565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036120ab576001925050506120c5565b80806120b690612d81565b91505061204a565b5060009150505b92915050565b6120d36120df565b6120dc8161216f565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461216d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216490613297565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036121dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d490613303565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600061ffff82169050919050565b6122b28161229b565b82525050565b600063ffffffff82169050919050565b6122d1816122b8565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61231681612303565b82525050565b6000612328838361230d565b60208301905092915050565b6000602082019050919050565b600061234c826122d7565b61235681856122e2565b9350612361836122f3565b8060005b83811015612392578151612379888261231c565b975061238483612334565b925050600181019050612365565b5085935050505092915050565b60006060820190506123b460008301866122a9565b6123c160208301856122c8565b81810360408301526123d38184612341565b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b61240e816123f1565b811461241957600080fd5b50565b60008135905061242b81612405565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061245c82612431565b9050919050565b61246c81612451565b811461247757600080fd5b50565b60008135905061248981612463565b92915050565b600080604083850312156124a6576124a56123e7565b5b60006124b48582860161241c565b92505060206124c58582860161247a565b9150509250929050565b6000819050919050565b6124e2816124cf565b81146124ed57600080fd5b50565b6000813590506124ff816124d9565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125538261250a565b810181811067ffffffffffffffff821117156125725761257161251b565b5b80604052505050565b60006125856123dd565b9050612591828261254a565b919050565b600067ffffffffffffffff8211156125b1576125b061251b565b5b602082029050602081019050919050565b600080fd5b60006125da6125d584612596565b61257b565b905080838252602082019050602084028301858111156125fd576125fc6125c2565b5b835b81811015612626578061261288826124f0565b8452602084019350506020810190506125ff565b5050509392505050565b600082601f83011261264557612644612505565b5b81356126558482602086016125c7565b91505092915050565b600080600060608486031215612677576126766123e7565b5b6000612685868287016124f0565b93505060206126968682870161247a565b925050604084013567ffffffffffffffff8111156126b7576126b66123ec565b5b6126c386828701612630565b9150509250925092565b6000819050919050565b6126e0816126cd565b82525050565b60006020820190506126fb60008301846126d7565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61272281612701565b82525050565b600060208201905061273d6000830184612719565b92915050565b61274c81612303565b811461275757600080fd5b50565b60008135905061276981612743565b92915050565b6127788161229b565b811461278357600080fd5b50565b6000813590506127958161276f565b92915050565b6127a4816122b8565b81146127af57600080fd5b50565b6000813590506127c18161279b565b92915050565b600080600080600060a086880312156127e3576127e26123e7565b5b60006127f18882890161275a565b95505060206128028882890161241c565b945050604061281388828901612786565b9350506060612824888289016127b2565b9250506080612835888289016127b2565b9150509295509295909350565b61284b816124cf565b82525050565b60006020820190506128666000830184612842565b92915050565b600062ffffff82169050919050565b6128848161286c565b82525050565b6000610120820190506128a0600083018c6122c8565b6128ad602083018b6122c8565b6128ba604083018a6122c8565b6128c760608301896122c8565b6128d460808301886122c8565b6128e160a083018761287b565b6128ee60c083018661287b565b6128fb60e083018561287b565b61290961010083018461287b565b9a9950505050505050505050565b600060208201905061292c60008301846122a9565b92915050565b60008060408385031215612949576129486123e7565b5b6000612957858286016124f0565b92505060206129688582860161247a565b9150509250929050565b600060208284031215612988576129876123e7565b5b60006129968482850161241c565b91505092915050565b6129a881612451565b82525050565b60006020820190506129c3600083018461299f565b92915050565b6129d2816123f1565b82525050565b60006020820190506129ed60008301846129c9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612a2881612451565b82525050565b6000612a3a8383612a1f565b60208301905092915050565b6000602082019050919050565b6000612a5e826129f3565b612a6881856129fe565b9350612a7383612a0f565b8060005b83811015612aa4578151612a8b8882612a2e565b9750612a9683612a46565b925050600181019050612a77565b5085935050505092915050565b6000608082019050612ac66000830187612719565b612ad360208301866129c9565b612ae0604083018561299f565b8181036060830152612af28184612a53565b905095945050505050565b612b0681612701565b8114612b1157600080fd5b50565b600081359050612b2381612afd565b92915050565b60008060408385031215612b4057612b3f6123e7565b5b6000612b4e8582860161241c565b9250506020612b5f85828601612b14565b9150509250929050565b6000608082019050612b7e60008301876122a9565b612b8b60208301866122c8565b612b9860408301856122c8565b612ba560608301846122c8565b95945050505050565b60008115159050919050565b612bc381612bae565b82525050565b6000602082019050612bde6000830184612bba565b92915050565b600060208284031215612bfa57612bf96123e7565b5b6000612c088482850161247a565b91505092915050565b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b6000612c58600f83612c11565b9150612c6382612c22565b602082019050919050565b60006020820190508181036000830152612c8781612c4b565b9050919050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b6000612cc4601383612c11565b9150612ccf82612c8e565b602082019050919050565b60006020820190508181036000830152612cf381612cb7565b9050919050565b6000604082019050612d0f6000830185612842565b612d1c6020830184612842565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d8c826124cf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dbe57612dbd612d52565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612dfe816124cf565b82525050565b6000612e108383612df5565b60208301905092915050565b6000602082019050919050565b6000612e3482612dc9565b612e3e8185612dd4565b9350612e4983612de5565b8060005b83811015612e7a578151612e618882612e04565b9750612e6c83612e1c565b925050600181019050612e4d565b5085935050505092915050565b6000604082019050612e9c6000830185612842565b8181036020830152612eae8184612e29565b90509392505050565b600081519050919050565b600081905092915050565b60005b83811015612eeb578082015181840152602081019050612ed0565b60008484015250505050565b6000612f0282612eb7565b612f0c8185612ec2565b9350612f1c818560208601612ecd565b80840191505092915050565b6000612f348284612ef7565b915081905092915050565b6000612f4a826124cf565b9150612f55836124cf565b9250828203905081811115612f6d57612f6c612d52565b5b92915050565b6000612f7e826124cf565b9150612f89836124cf565b9250828202612f97816124cf565b91508282048414831517612fae57612fad612d52565b5b5092915050565b6000612fc0826124cf565b9150612fcb836124cf565b9250828201905080821115612fe357612fe2612d52565b5b92915050565b6000612ff482612701565b9150612fff83612701565b925082820390506bffffffffffffffffffffffff81111561302357613022612d52565b5b92915050565b600060608201905061303e6000830186612842565b61304b6020830185612719565b6130586040830184612bba565b949350505050565b600060a0820190506130756000830188612842565b6130826020830187612842565b61308f60408301866122a9565b61309c60608301856122c8565b6130a960808301846122c8565b9695505050505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006130e9601683612c11565b91506130f4826130b3565b602082019050919050565b60006020820190508181036000830152613118816130dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000613159826123f1565b915067ffffffffffffffff820361317357613172612d52565b5b600182019050919050565b600061318982612701565b915061319483612701565b925082820190506bffffffffffffffffffffffff8111156131b8576131b7612d52565b5b92915050565b6000819050919050565b60006131e36131de6131d984612701565b6131be565b6124cf565b9050919050565b6131f3816131c8565b82525050565b600060408201905061320e60008301856131ea565b61321b60208301846131ea565b9392505050565b6000604082019050613237600083018561299f565b61324460208301846131ea565b9392505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000613281601683612c11565b915061328c8261324b565b602082019050919050565b600060208201905081810360008301526132b081613274565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006132ed601783612c11565b91506132f8826132b7565b602082019050919050565b6000602082019050818103600083015261331c816132e0565b905091905056fea26469706673582212205fc45a7e57abe309375b0ba35123512293d8f2273060345dbdfc18dededa6d8b64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xAFC69B53 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xED5EB06D EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42E JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x342 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x5FBBC0D2 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x82359740 EQ PUSH2 0x2A6 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x27C7 JUMP JUMPDEST PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH2 0x1062 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x2932 JUMP JUMPDEST PUSH2 0x11F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0x12D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30E PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH2 0x1B03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x1CED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1F59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x49E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x6D8 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x6D2 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x687 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x6CA SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x662 JUMP JUMPDEST POP PUSH2 0x71D JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x73B SWAP3 SWAP2 SWAP1 PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x82D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP8 PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x2F73 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x2FB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0x2FE9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xE35FA931A0000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 CALLER PUSH2 0xB21 DUP3 DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC1C SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC37 SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0xD5B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND PUSH1 0x7 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF8D DUP5 DUP5 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x105C JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x752EAD9F4536EC1319EE3A5A604E1D65EDED22E0924251552BA14AE4FAA1BBC3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1053 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E9 SWAP1 PUSH2 0x30FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1241 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1295 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x128F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x4E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DC PUSH2 0x20DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1490 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x149C DUP3 DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x151C JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1580 JUMPI PUSH2 0x157F PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C0 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x162C JUMPI PUSH2 0x162B PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x311F JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x16D3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x16CB SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x154A JUMP JUMPDEST POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xF9BC9D5B5733D904409DEF43A5ECC888DBDAC9A95687780D8FD489D3BB3813FC DUP8 PUSH1 0x40 MLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1747 SWAP1 PUSH2 0x314E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x18B6 SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1AED JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1AA3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x317E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x1CB2 SWAP2 SWAP1 PUSH2 0x317E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC0 SWAP3 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH3 0x2625A0 PUSH2 0xA8C PUSH2 0x8205 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E13 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0A SWAP2 SWAP1 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1EDB SWAP3 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8D SWAP1 PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2040 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1FF6 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20BE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x207D JUMPI PUSH2 0x207C PUSH2 0x2D23 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20AB JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x20C5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x20B6 SWAP1 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x204A JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D3 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x20DC DUP2 PUSH2 0x216F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x216D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2164 SWAP1 PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D4 SWAP1 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B2 DUP2 PUSH2 0x229B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D1 DUP2 PUSH2 0x22B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2316 DUP2 PUSH2 0x2303 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2328 DUP4 DUP4 PUSH2 0x230D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234C DUP3 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x2356 DUP2 DUP6 PUSH2 0x22E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2361 DUP4 PUSH2 0x22F3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2392 JUMPI DUP2 MLOAD PUSH2 0x2379 DUP9 DUP3 PUSH2 0x231C JUMP JUMPDEST SWAP8 POP PUSH2 0x2384 DUP4 PUSH2 0x2334 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2365 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x23C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22C8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23D3 DUP2 DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x240E DUP2 PUSH2 0x23F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242B DUP2 PUSH2 0x2405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C DUP3 PUSH2 0x2431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x246C DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP2 EQ PUSH2 0x2477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2489 DUP2 PUSH2 0x2463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A6 JUMPI PUSH2 0x24A5 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24B4 DUP6 DUP3 DUP7 ADD PUSH2 0x241C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C5 DUP6 DUP3 DUP7 ADD PUSH2 0x247A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E2 DUP2 PUSH2 0x24CF JUMP JUMPDEST DUP2 EQ PUSH2 0x24ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24FF DUP2 PUSH2 0x24D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2553 DUP3 PUSH2 0x250A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2572 JUMPI PUSH2 0x2571 PUSH2 0x251B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2585 PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP PUSH2 0x2591 DUP3 DUP3 PUSH2 0x254A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25B1 JUMPI PUSH2 0x25B0 PUSH2 0x251B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25DA PUSH2 0x25D5 DUP5 PUSH2 0x2596 JUMP JUMPDEST PUSH2 0x257B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x25FD JUMPI PUSH2 0x25FC PUSH2 0x25C2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2626 JUMPI DUP1 PUSH2 0x2612 DUP9 DUP3 PUSH2 0x24F0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25FF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x2505 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2655 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2677 JUMPI PUSH2 0x2676 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2685 DUP7 DUP3 DUP8 ADD PUSH2 0x24F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2696 DUP7 DUP3 DUP8 ADD PUSH2 0x247A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B7 JUMPI PUSH2 0x26B6 PUSH2 0x23EC JUMP JUMPDEST JUMPDEST PUSH2 0x26C3 DUP7 DUP3 DUP8 ADD PUSH2 0x2630 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26E0 DUP2 PUSH2 0x26CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2722 DUP2 PUSH2 0x2701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x273D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2719 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x274C DUP2 PUSH2 0x2303 JUMP JUMPDEST DUP2 EQ PUSH2 0x2757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2769 DUP2 PUSH2 0x2743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2778 DUP2 PUSH2 0x229B JUMP JUMPDEST DUP2 EQ PUSH2 0x2783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2795 DUP2 PUSH2 0x276F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27A4 DUP2 PUSH2 0x22B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x27AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C1 DUP2 PUSH2 0x279B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x27E3 JUMPI PUSH2 0x27E2 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F1 DUP9 DUP3 DUP10 ADD PUSH2 0x275A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2802 DUP9 DUP3 DUP10 ADD PUSH2 0x241C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2813 DUP9 DUP3 DUP10 ADD PUSH2 0x2786 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2824 DUP9 DUP3 DUP10 ADD PUSH2 0x27B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2835 DUP9 DUP3 DUP10 ADD PUSH2 0x27B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x284B DUP2 PUSH2 0x24CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2866 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2884 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x28A0 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28AD PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28BA PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28C7 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28D4 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x28E1 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x28EE PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x28FB PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x2909 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x287B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x292C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2949 JUMPI PUSH2 0x2948 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2957 DUP6 DUP3 DUP7 ADD PUSH2 0x24F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2968 DUP6 DUP3 DUP7 ADD PUSH2 0x247A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2996 DUP5 DUP3 DUP6 ADD PUSH2 0x241C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29A8 DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x299F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29D2 DUP2 PUSH2 0x23F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A28 DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3A DUP4 DUP4 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5E DUP3 PUSH2 0x29F3 JUMP JUMPDEST PUSH2 0x2A68 DUP2 DUP6 PUSH2 0x29FE JUMP JUMPDEST SWAP4 POP PUSH2 0x2A73 DUP4 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AA4 JUMPI DUP2 MLOAD PUSH2 0x2A8B DUP9 DUP3 PUSH2 0x2A2E JUMP JUMPDEST SWAP8 POP PUSH2 0x2A96 DUP4 PUSH2 0x2A46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A77 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2AC6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2AD3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0x2AE0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x299F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2AF2 DUP2 DUP5 PUSH2 0x2A53 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2B06 DUP2 PUSH2 0x2701 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B23 DUP2 PUSH2 0x2AFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B40 JUMPI PUSH2 0x2B3F PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B4E DUP6 DUP3 DUP7 ADD PUSH2 0x241C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B5F DUP6 DUP3 DUP7 ADD PUSH2 0x2B14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B7E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x2B8B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x2B98 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x2BA5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC3 DUP2 PUSH2 0x2BAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFA JUMPI PUSH2 0x2BF9 PUSH2 0x23E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C08 DUP5 DUP3 DUP6 ADD PUSH2 0x247A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C58 PUSH1 0xF DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C63 DUP3 PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C87 DUP2 PUSH2 0x2C4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC4 PUSH1 0x13 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCF DUP3 PUSH2 0x2C8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CF3 DUP2 PUSH2 0x2CB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D0F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x2D1C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2842 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8C DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DBE JUMPI PUSH2 0x2DBD PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DFE DUP2 PUSH2 0x24CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E10 DUP4 DUP4 PUSH2 0x2DF5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E34 DUP3 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0x2E3E DUP2 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E49 DUP4 PUSH2 0x2DE5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E7A JUMPI DUP2 MLOAD PUSH2 0x2E61 DUP9 DUP3 PUSH2 0x2E04 JUMP JUMPDEST SWAP8 POP PUSH2 0x2E6C DUP4 PUSH2 0x2E1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E4D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E9C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2842 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2EAE DUP2 DUP5 PUSH2 0x2E29 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F02 DUP3 PUSH2 0x2EB7 JUMP JUMPDEST PUSH2 0x2F0C DUP2 DUP6 PUSH2 0x2EC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F1C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2ECD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F34 DUP3 DUP5 PUSH2 0x2EF7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4A DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F55 DUP4 PUSH2 0x24CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2F6D JUMPI PUSH2 0x2F6C PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7E DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F89 DUP4 PUSH2 0x24CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2F97 DUP2 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2FAE JUMPI PUSH2 0x2FAD PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC0 DUP3 PUSH2 0x24CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCB DUP4 PUSH2 0x24CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FE3 JUMPI PUSH2 0x2FE2 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF4 DUP3 PUSH2 0x2701 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFF DUP4 PUSH2 0x2701 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3023 JUMPI PUSH2 0x3022 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x303E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x304B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x3058 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2BBA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3075 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x3082 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x308F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x309C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x30A9 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x22C8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 PUSH1 0x16 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x30F4 DUP3 PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3118 DUP2 PUSH2 0x30DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3159 DUP3 PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3173 JUMPI PUSH2 0x3172 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3189 DUP3 PUSH2 0x2701 JUMP JUMPDEST SWAP2 POP PUSH2 0x3194 DUP4 PUSH2 0x2701 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31B8 JUMPI PUSH2 0x31B7 PUSH2 0x2D52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E3 PUSH2 0x31DE PUSH2 0x31D9 DUP5 PUSH2 0x2701 JUMP JUMPDEST PUSH2 0x31BE JUMP JUMPDEST PUSH2 0x24CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31F3 DUP2 PUSH2 0x31C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x320E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31EA JUMP JUMPDEST PUSH2 0x321B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3237 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x3244 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3281 PUSH1 0x16 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x328C DUP3 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32B0 DUP2 PUSH2 0x3274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32ED PUSH1 0x17 DUP4 PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F8 DUP3 PUSH2 0x32B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331C DUP2 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xC4 GAS PUSH31 0x57ABE309375B0BA35123512293D8F2273060345DBDFC18DEDEDA6D8B64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"487:9706:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7730:142;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9801:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4092:1199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9680:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5839:769;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8979:590;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;644:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7876:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1026:316:2;;;:::i;:::-;;3641:171:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9948:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:113;;;:::i;:::-;;1382:81:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8225:496:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6612:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6885:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5493:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8725:250;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;7248:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10071:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2635:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7730:142:16;7790:6;7798;7806:16;7838:1;7841:7;7864:1;7850:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7830:37;;;;;;7730:142;;;:::o;9801:143::-;9914:25;;;;;;;;;;:::i;:::-;;;;;;;;4092:1199;4209:16;4228:9;4209:28;;4279:1;4247:10;:22;4258:10;4247:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;4243:83;;4290:29;;;;;;;;;;:::i;:::-;;;;;;;;4243:83;4331:18;4352:10;:22;4363:10;4352:22;;;;;;;;;;;4331:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:1;4385:6;:13;:18;4381:284;;4436:3;:12;;;4422:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4413:36;;4462:9;4457:119;4481:3;:12;;;4477:16;;:1;:16;4457:119;;;4551:10;4563:1;4540:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4530:36;;;;;;4522:45;;4510:6;4517:1;4510:9;;;;;;;;:::i;:::-;;;;;;;:57;;;;;4495:3;;;;;:::i;:::-;;;;4457:119;;;;4381:284;;;4609:3;:12;;;4592:29;;:6;:13;:29;4588:77;;4638:20;;;;;;;;;;;;;;4588:77;4381:284;4671:19;4696:20;4742:32;;;4776:10;4788:6;4719:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4696:99;;4827:4;4801:8;:23;;;:30;;;;;;;;;;;;;;;;;;4838:12;4856:9;:14;;4876:3;:20;;;4856:50;;4898:7;4856:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4837:69;;;4938:5;4912:8;:23;;;:31;;;;;;;;;;;;;;;;;;4950:14;5011;4986:39;;4998:9;4987:8;:20;;;;:::i;:::-;4986:39;;;;:::i;:::-;4974:8;:52;;;;;;:::i;:::-;4950:77;;5074:7;5037:44;;:15;:26;5053:3;:9;;;5037:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;5033:93;;;5098:21;;;;;;;;;;;;;;5033:93;5169:7;5131:15;:26;5147:3;:9;;;5131:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5190:10;:22;5201:10;5190:22;;;;;;;;;;;;5182:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5245:10;5224:62;5257:10;5269:7;5278;5224:62;;;;;;;;:::i;:::-;;;;;;;;4203:1088;;;;;;4092:1199;;;:::o;9680:117::-;9740:6;9761:16;9754:23;;9680:117;:::o;566:32::-;;;:::o;5839:769::-;6083:7;9607:8;:23;;;;;;;;;;;;9603:62;;;9647:11;;;;;;;;;;;;;;9603:62;6054:6:::1;6062:10;3001:34;3017:6;3025:9;3001:15;:34::i;:::-;2996:80;;3052:17;;;;;;;;;;;;;;2996:80;6143:1:::2;6102:43;;:15;:23;6118:6;6102:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;::::0;6098:92:::2;;6162:21;;;;;;;;;;;;;;6098:92;6196:17;6216:15;;:17;;;;;;;;;:::i;:::-;;;;;6196:37;;6239:15;6257:13;;:15;;;;;;;;;:::i;:::-;;;;;6239:33;;6303:82;;;;;;;;6319:6;6303:82;;;;;;6345:17;6303:82;;;;;;6374:9;6303:82;;;;::::0;6279:10:::2;:21;6290:9;6279:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6565:10;6397:184;;6473:6;6397:184;;6425:8;6397:184;6441:9;6458:7;6487:28;6523:17;6548:9;6397:184;;;;;;;;;;:::i;:::-;;;;;;;;6594:9;6587:16;;;;9670:1:::1;;5839:769:::0;;;;;;;:::o;8979:590::-;9045:37;9090;9135;9180;9225;9270:19;9297;9324;9351;9400:6;9426;9452;9478;9504;9530:1;9539;9548;9557;9385:179;;;;;;;;;;;;;;;;;;8979:590;;;;;;;;;:::o;644:43::-;;;:::o;7876:345::-;7962:6;7523:13;7539:15;:23;7555:6;7539:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;7523:45;;7595:1;7578:19;;:5;:19;;;7574:68;;7614:21;;;;;;;;;;;;;;7574:68;7665:5;7651:19;;:10;:19;;;7647:68;;7702:5;7687:21;;;;;;;;;;;:::i;:::-;;;;;;;;7647:68;8010:13:::1;7980:43;;:11;:19;7992:6;7980:19;;;;;;;;;;;;;;;:26;;;;:43:::0;7976:89:::1;;8040:18;;;;;;;;;;;;;;7976:89;8075:34;8091:6;8099:9;8075:15;:34::i;:::-;8119:7;8071:61;8138:11;:19;8150:6;8138:19;;;;;;;;;;;;;;;8163:9;8138:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8198:6;8184:32;;;8206:9;8184:32;;;;;;:::i;:::-;;;;;;;;7720:1;7517:209:::0;7876:345;;;:::o;1026:316:2:-;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;3641:171:16:-;9607:8;:23;;;;;;;;;;;;9603:62;;;9647:11;;;;;;;;;;;;;;9603:62;3736:71:::1;3767:10;3779:9;3804:1;3790:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3736:30;:71::i;:::-;3641:171:::0;;:::o;9948:119::-;10037:25;;;;;;;;;;:::i;:::-;;;;;;;;2518:113;2075:20:2;:18;:20::i;:::-;2573:31:16::1;;;;;;;;2597:5;2573:31;;;;::::0;2562:8:::1;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2615:11;;;;;;;;;;2518:113::o:0;1382:81:2:-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;8225:496:16:-;8326:6;7523:13;7539:15;:23;7555:6;7539:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;7523:45;;7595:1;7578:19;;:5;:19;;;7574:68;;7614:21;;;;;;;;;;;;;;7574:68;7665:5;7651:19;;:10;:19;;;7647:68;;7702:5;7687:21;;;;;;;;;;;:::i;:::-;;;;;;;;7647:68;8352:6:::1;8360:9;3001:34;3017:6;3025:9;3001:15;:34::i;:::-;2996:80;;3052:17;;;;;;;;;;;;;;2996:80;9607:8:::2;:23;;;;;;;;;;;;9603:62;;;9647:11;;;;;;;;;;;;;;9603:62;8390:27:::3;8420:11;:19;8432:6;8420:19;;;;;;;;;;;;;;;8390:49;;8450:9;8445:226;8469:9;:16;;;;8465:1;:20;8445:226;;;8520:9;8504:25;;:9;8514:1;8504:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:25;;::::0;8500:165:::3;;8541:12;8556:9;8585:1;8566:9;:16;;;;:20;;;;:::i;:::-;8556:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8541:46;;8612:4;8597:9;8607:1;8597:12;;;;;;;;:::i;:::-;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;8626:9;:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8651:5;;;8500:165;8487:3;;;;;:::i;:::-;;;;8445:226;;;;8698:6;8682:34;;;8706:9;8682:34;;;;;;:::i;:::-;;;;;;;;8384:337;7720:1:::1;;7517:209:::0;8225:496;;;:::o;6612:269::-;6669:13;6690:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6746:45;;;;;;;;6767:10;6746:45;;;;;;6788:1;6746:45;;;;;6712:15;:31;6728:14;;;;;;;;;;;6712:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6822:14;;;;;;;;;;;6802:47;;;6838:10;6802:47;;;;;;:::i;:::-;;;;;;;;6862:14;;;;;;;;;;;6855:21;;6612:269;:::o;602:38::-;;;:::o;6885:359::-;6965:14;6981:15;6998:13;7013:26;7092:1;7051:43;;:15;:23;7067:6;7051:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;7047:92;;7111:21;;;;;;;;;;;;;;7047:92;7152:15;:23;7168:6;7152:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;7185:1;7188:15;:23;7204:6;7188:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;7219:11;:19;7231:6;7219:19;;;;;;;;;;;;;;;7144:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6885:359;;;;;:::o;5493:342::-;5608:1;5567:43;;:15;:23;5583:6;5567:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;5563:92;;5627:21;;;;;;;;;;;;;;5563:92;5660:17;5680:15;:23;5696:6;5680:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5660:51;;5752:7;5717:15;:23;5733:6;5717:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5789:6;5770:60;;;5797:10;5822:7;5809:10;:20;;;;:::i;:::-;5770:60;;;;;;;:::i;:::-;;;;;;;;5557:278;5493:342;;:::o;8725:250::-;8788:34;8830:18;8856:23;8887:33;8943:1;8946:9;8957:5;8964;8935:35;;;;;;;;8725:250;;;;:::o;7248:228::-;7335:6;7523:13;7539:15;:23;7555:6;7539:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;7523:45;;7595:1;7578:19;;:5;:19;;;7574:68;;7614:21;;;;;;;;;;;;;;7574:68;7665:5;7651:19;;:10;:19;;;7647:68;;7702:5;7687:21;;;;;;;;;;;:::i;:::-;;;;;;;;7647:68;9607:8:::1;:23;;;;;;;;;;;;9603:62;;;9647:11;;;;;;;;;;;;;;9603:62;7388:6:::2;7367:66;;;7396:3;7401:15;:23;7417:6;7401:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;7367:66;;;;;;;:::i;:::-;;;;;;;;7447:15;:23;7463:6;7447:23;;;;;;;;;;;;;;;;7439:32:::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7517:209:::0;7248:228;;;:::o;10071:120::-;10149:4;10161:25;;;;;;;;;;:::i;:::-;;;;;;;;2635:290;2715:4;2727:26;2756:11;:19;2768:6;2756:19;;;;;;;;;;;;;;;2727:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2786:9;2781:122;2805:9;:16;2801:1;:20;2781:122;;;2856:9;2840:25;;:9;2850:1;2840:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;2836:61;;2884:4;2877:11;;;;;;2836:61;2823:3;;;;;:::i;:::-;;;;2781:122;;;;2915:5;2908:12;;;2635:290;;;;;:::o;847:98:2:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;7:89:21:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:114::-;510:6;544:5;538:12;528:22;;443:114;;;:::o;563:184::-;662:11;696:6;691:3;684:19;736:4;731:3;727:14;712:29;;563:184;;;;:::o;753:132::-;820:4;843:3;835:11;;873:4;868:3;864:14;856:22;;753:132;;;:::o;891:77::-;928:7;957:5;946:16;;891:77;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:179::-;1157:10;1178:46;1220:3;1212:6;1178:46;:::i;:::-;1256:4;1251:3;1247:14;1233:28;;1088:179;;;;:::o;1273:113::-;1343:4;1375;1370:3;1366:14;1358:22;;1273:113;;;:::o;1422:732::-;1541:3;1570:54;1618:5;1570:54;:::i;:::-;1640:86;1719:6;1714:3;1640:86;:::i;:::-;1633:93;;1750:56;1800:5;1750:56;:::i;:::-;1829:7;1860:1;1845:284;1870:6;1867:1;1864:13;1845:284;;;1946:6;1940:13;1973:63;2032:3;2017:13;1973:63;:::i;:::-;1966:70;;2059:60;2112:6;2059:60;:::i;:::-;2049:70;;1905:224;1892:1;1889;1885:9;1880:14;;1845:284;;;1849:14;2145:3;2138:10;;1546:608;;;1422:732;;;;:::o;2160:585::-;2355:4;2393:2;2382:9;2378:18;2370:26;;2406:69;2472:1;2461:9;2457:17;2448:6;2406:69;:::i;:::-;2485:70;2551:2;2540:9;2536:18;2527:6;2485:70;:::i;:::-;2602:9;2596:4;2592:20;2587:2;2576:9;2572:18;2565:48;2630:108;2733:4;2724:6;2630:108;:::i;:::-;2622:116;;2160:585;;;;;;:::o;2751:75::-;2784:6;2817:2;2811:9;2801:19;;2751:75;:::o;2832:117::-;2941:1;2938;2931:12;2955:117;3064:1;3061;3054:12;3078:101;3114:7;3154:18;3147:5;3143:30;3132:41;;3078:101;;;:::o;3185:120::-;3257:23;3274:5;3257:23;:::i;:::-;3250:5;3247:34;3237:62;;3295:1;3292;3285:12;3237:62;3185:120;:::o;3311:137::-;3356:5;3394:6;3381:20;3372:29;;3410:32;3436:5;3410:32;:::i;:::-;3311:137;;;;:::o;3454:126::-;3491:7;3531:42;3524:5;3520:54;3509:65;;3454:126;;;:::o;3586:96::-;3623:7;3652:24;3670:5;3652:24;:::i;:::-;3641:35;;3586:96;;;:::o;3688:122::-;3761:24;3779:5;3761:24;:::i;:::-;3754:5;3751:35;3741:63;;3800:1;3797;3790:12;3741:63;3688:122;:::o;3816:139::-;3862:5;3900:6;3887:20;3878:29;;3916:33;3943:5;3916:33;:::i;:::-;3816:139;;;;:::o;3961:472::-;4028:6;4036;4085:2;4073:9;4064:7;4060:23;4056:32;4053:119;;;4091:79;;:::i;:::-;4053:119;4211:1;4236:52;4280:7;4271:6;4260:9;4256:22;4236:52;:::i;:::-;4226:62;;4182:116;4337:2;4363:53;4408:7;4399:6;4388:9;4384:22;4363:53;:::i;:::-;4353:63;;4308:118;3961:472;;;;;:::o;4439:77::-;4476:7;4505:5;4494:16;;4439:77;;;:::o;4522:122::-;4595:24;4613:5;4595:24;:::i;:::-;4588:5;4585:35;4575:63;;4634:1;4631;4624:12;4575:63;4522:122;:::o;4650:139::-;4696:5;4734:6;4721:20;4712:29;;4750:33;4777:5;4750:33;:::i;:::-;4650:139;;;;:::o;4795:117::-;4904:1;4901;4894:12;4918:102;4959:6;5010:2;5006:7;5001:2;4994:5;4990:14;4986:28;4976:38;;4918:102;;;:::o;5026:180::-;5074:77;5071:1;5064:88;5171:4;5168:1;5161:15;5195:4;5192:1;5185:15;5212:281;5295:27;5317:4;5295:27;:::i;:::-;5287:6;5283:40;5425:6;5413:10;5410:22;5389:18;5377:10;5374:34;5371:62;5368:88;;;5436:18;;:::i;:::-;5368:88;5476:10;5472:2;5465:22;5255:238;5212:281;;:::o;5499:129::-;5533:6;5560:20;;:::i;:::-;5550:30;;5589:33;5617:4;5609:6;5589:33;:::i;:::-;5499:129;;;:::o;5634:311::-;5711:4;5801:18;5793:6;5790:30;5787:56;;;5823:18;;:::i;:::-;5787:56;5873:4;5865:6;5861:17;5853:25;;5933:4;5927;5923:15;5915:23;;5634:311;;;:::o;5951:117::-;6060:1;6057;6050:12;6091:710;6187:5;6212:81;6228:64;6285:6;6228:64;:::i;:::-;6212:81;:::i;:::-;6203:90;;6313:5;6342:6;6335:5;6328:21;6376:4;6369:5;6365:16;6358:23;;6429:4;6421:6;6417:17;6409:6;6405:30;6458:3;6450:6;6447:15;6444:122;;;6477:79;;:::i;:::-;6444:122;6592:6;6575:220;6609:6;6604:3;6601:15;6575:220;;;6684:3;6713:37;6746:3;6734:10;6713:37;:::i;:::-;6708:3;6701:50;6780:4;6775:3;6771:14;6764:21;;6651:144;6635:4;6630:3;6626:14;6619:21;;6575:220;;;6579:21;6193:608;;6091:710;;;;;:::o;6824:370::-;6895:5;6944:3;6937:4;6929:6;6925:17;6921:27;6911:122;;6952:79;;:::i;:::-;6911:122;7069:6;7056:20;7094:94;7184:3;7176:6;7169:4;7161:6;7157:17;7094:94;:::i;:::-;7085:103;;6901:293;6824:370;;;;:::o;7200:829::-;7302:6;7310;7318;7367:2;7355:9;7346:7;7342:23;7338:32;7335:119;;;7373:79;;:::i;:::-;7335:119;7493:1;7518:53;7563:7;7554:6;7543:9;7539:22;7518:53;:::i;:::-;7508:63;;7464:117;7620:2;7646:53;7691:7;7682:6;7671:9;7667:22;7646:53;:::i;:::-;7636:63;;7591:118;7776:2;7765:9;7761:18;7748:32;7807:18;7799:6;7796:30;7793:117;;;7829:79;;:::i;:::-;7793:117;7934:78;8004:7;7995:6;7984:9;7980:22;7934:78;:::i;:::-;7924:88;;7719:303;7200:829;;;;;:::o;8035:76::-;8071:7;8100:5;8089:16;;8035:76;;;:::o;8117:115::-;8202:23;8219:5;8202:23;:::i;:::-;8197:3;8190:36;8117:115;;:::o;8238:218::-;8329:4;8367:2;8356:9;8352:18;8344:26;;8380:69;8446:1;8435:9;8431:17;8422:6;8380:69;:::i;:::-;8238:218;;;;:::o;8462:109::-;8498:7;8538:26;8531:5;8527:38;8516:49;;8462:109;;;:::o;8577:115::-;8662:23;8679:5;8662:23;:::i;:::-;8657:3;8650:36;8577:115;;:::o;8698:218::-;8789:4;8827:2;8816:9;8812:18;8804:26;;8840:69;8906:1;8895:9;8891:17;8882:6;8840:69;:::i;:::-;8698:218;;;;:::o;8922:122::-;8995:24;9013:5;8995:24;:::i;:::-;8988:5;8985:35;8975:63;;9034:1;9031;9024:12;8975:63;8922:122;:::o;9050:139::-;9096:5;9134:6;9121:20;9112:29;;9150:33;9177:5;9150:33;:::i;:::-;9050:139;;;;:::o;9195:120::-;9267:23;9284:5;9267:23;:::i;:::-;9260:5;9257:34;9247:62;;9305:1;9302;9295:12;9247:62;9195:120;:::o;9321:137::-;9366:5;9404:6;9391:20;9382:29;;9420:32;9446:5;9420:32;:::i;:::-;9321:137;;;;:::o;9464:120::-;9536:23;9553:5;9536:23;:::i;:::-;9529:5;9526:34;9516:62;;9574:1;9571;9564:12;9516:62;9464:120;:::o;9590:137::-;9635:5;9673:6;9660:20;9651:29;;9689:32;9715:5;9689:32;:::i;:::-;9590:137;;;;:::o;9733:903::-;9824:6;9832;9840;9848;9856;9905:3;9893:9;9884:7;9880:23;9876:33;9873:120;;;9912:79;;:::i;:::-;9873:120;10032:1;10057:53;10102:7;10093:6;10082:9;10078:22;10057:53;:::i;:::-;10047:63;;10003:117;10159:2;10185:52;10229:7;10220:6;10209:9;10205:22;10185:52;:::i;:::-;10175:62;;10130:117;10286:2;10312:52;10356:7;10347:6;10336:9;10332:22;10312:52;:::i;:::-;10302:62;;10257:117;10413:2;10439:52;10483:7;10474:6;10463:9;10459:22;10439:52;:::i;:::-;10429:62;;10384:117;10540:3;10567:52;10611:7;10602:6;10591:9;10587:22;10567:52;:::i;:::-;10557:62;;10511:118;9733:903;;;;;;;;:::o;10642:118::-;10729:24;10747:5;10729:24;:::i;:::-;10724:3;10717:37;10642:118;;:::o;10766:222::-;10859:4;10897:2;10886:9;10882:18;10874:26;;10910:71;10978:1;10967:9;10963:17;10954:6;10910:71;:::i;:::-;10766:222;;;;:::o;10994:91::-;11030:7;11070:8;11063:5;11059:20;11048:31;;10994:91;;;:::o;11091:115::-;11176:23;11193:5;11176:23;:::i;:::-;11171:3;11164:36;11091:115;;:::o;11212:1072::-;11511:4;11549:3;11538:9;11534:19;11526:27;;11563:69;11629:1;11618:9;11614:17;11605:6;11563:69;:::i;:::-;11642:70;11708:2;11697:9;11693:18;11684:6;11642:70;:::i;:::-;11722;11788:2;11777:9;11773:18;11764:6;11722:70;:::i;:::-;11802;11868:2;11857:9;11853:18;11844:6;11802:70;:::i;:::-;11882:71;11948:3;11937:9;11933:19;11924:6;11882:71;:::i;:::-;11963;12029:3;12018:9;12014:19;12005:6;11963:71;:::i;:::-;12044;12110:3;12099:9;12095:19;12086:6;12044:71;:::i;:::-;12125;12191:3;12180:9;12176:19;12167:6;12125:71;:::i;:::-;12206;12272:3;12261:9;12257:19;12248:6;12206:71;:::i;:::-;11212:1072;;;;;;;;;;;;:::o;12290:218::-;12381:4;12419:2;12408:9;12404:18;12396:26;;12432:69;12498:1;12487:9;12483:17;12474:6;12432:69;:::i;:::-;12290:218;;;;:::o;12514:474::-;12582:6;12590;12639:2;12627:9;12618:7;12614:23;12610:32;12607:119;;;12645:79;;:::i;:::-;12607:119;12765:1;12790:53;12835:7;12826:6;12815:9;12811:22;12790:53;:::i;:::-;12780:63;;12736:117;12892:2;12918:53;12963:7;12954:6;12943:9;12939:22;12918:53;:::i;:::-;12908:63;;12863:118;12514:474;;;;;:::o;12994:327::-;13052:6;13101:2;13089:9;13080:7;13076:23;13072:32;13069:119;;;13107:79;;:::i;:::-;13069:119;13227:1;13252:52;13296:7;13287:6;13276:9;13272:22;13252:52;:::i;:::-;13242:62;;13198:116;12994:327;;;;:::o;13327:118::-;13414:24;13432:5;13414:24;:::i;:::-;13409:3;13402:37;13327:118;;:::o;13451:222::-;13544:4;13582:2;13571:9;13567:18;13559:26;;13595:71;13663:1;13652:9;13648:17;13639:6;13595:71;:::i;:::-;13451:222;;;;:::o;13679:115::-;13764:23;13781:5;13764:23;:::i;:::-;13759:3;13752:36;13679:115;;:::o;13800:218::-;13891:4;13929:2;13918:9;13914:18;13906:26;;13942:69;14008:1;13997:9;13993:17;13984:6;13942:69;:::i;:::-;13800:218;;;;:::o;14024:114::-;14091:6;14125:5;14119:12;14109:22;;14024:114;;;:::o;14144:184::-;14243:11;14277:6;14272:3;14265:19;14317:4;14312:3;14308:14;14293:29;;14144:184;;;;:::o;14334:132::-;14401:4;14424:3;14416:11;;14454:4;14449:3;14445:14;14437:22;;14334:132;;;:::o;14472:108::-;14549:24;14567:5;14549:24;:::i;:::-;14544:3;14537:37;14472:108;;:::o;14586:179::-;14655:10;14676:46;14718:3;14710:6;14676:46;:::i;:::-;14754:4;14749:3;14745:14;14731:28;;14586:179;;;;:::o;14771:113::-;14841:4;14873;14868:3;14864:14;14856:22;;14771:113;;;:::o;14920:732::-;15039:3;15068:54;15116:5;15068:54;:::i;:::-;15138:86;15217:6;15212:3;15138:86;:::i;:::-;15131:93;;15248:56;15298:5;15248:56;:::i;:::-;15327:7;15358:1;15343:284;15368:6;15365:1;15362:13;15343:284;;;15444:6;15438:13;15471:63;15530:3;15515:13;15471:63;:::i;:::-;15464:70;;15557:60;15610:6;15557:60;:::i;:::-;15547:70;;15403:224;15390:1;15387;15383:9;15378:14;;15343:284;;;15347:14;15643:3;15636:10;;15044:608;;;14920:732;;;;:::o;15658:696::-;15881:4;15919:3;15908:9;15904:19;15896:27;;15933:69;15999:1;15988:9;15984:17;15975:6;15933:69;:::i;:::-;16012:70;16078:2;16067:9;16063:18;16054:6;16012:70;:::i;:::-;16092:72;16160:2;16149:9;16145:18;16136:6;16092:72;:::i;:::-;16211:9;16205:4;16201:20;16196:2;16185:9;16181:18;16174:48;16239:108;16342:4;16333:6;16239:108;:::i;:::-;16231:116;;15658:696;;;;;;;:::o;16360:120::-;16432:23;16449:5;16432:23;:::i;:::-;16425:5;16422:34;16412:62;;16470:1;16467;16460:12;16412:62;16360:120;:::o;16486:137::-;16531:5;16569:6;16556:20;16547:29;;16585:32;16611:5;16585:32;:::i;:::-;16486:137;;;;:::o;16629:470::-;16695:6;16703;16752:2;16740:9;16731:7;16727:23;16723:32;16720:119;;;16758:79;;:::i;:::-;16720:119;16878:1;16903:52;16947:7;16938:6;16927:9;16923:22;16903:52;:::i;:::-;16893:62;;16849:116;17004:2;17030:52;17074:7;17065:6;17054:9;17050:22;17030:52;:::i;:::-;17020:62;;16975:117;16629:470;;;;;:::o;17105:537::-;17274:4;17312:3;17301:9;17297:19;17289:27;;17326:69;17392:1;17381:9;17377:17;17368:6;17326:69;:::i;:::-;17405:70;17471:2;17460:9;17456:18;17447:6;17405:70;:::i;:::-;17485;17551:2;17540:9;17536:18;17527:6;17485:70;:::i;:::-;17565;17631:2;17620:9;17616:18;17607:6;17565:70;:::i;:::-;17105:537;;;;;;;:::o;17648:90::-;17682:7;17725:5;17718:13;17711:21;17700:32;;17648:90;;;:::o;17744:109::-;17825:21;17840:5;17825:21;:::i;:::-;17820:3;17813:34;17744:109;;:::o;17859:210::-;17946:4;17984:2;17973:9;17969:18;17961:26;;17997:65;18059:1;18048:9;18044:17;18035:6;17997:65;:::i;:::-;17859:210;;;;:::o;18075:329::-;18134:6;18183:2;18171:9;18162:7;18158:23;18154:32;18151:119;;;18189:79;;:::i;:::-;18151:119;18309:1;18334:53;18379:7;18370:6;18359:9;18355:22;18334:53;:::i;:::-;18324:63;;18280:117;18075:329;;;;:::o;18410:169::-;18494:11;18528:6;18523:3;18516:19;18568:4;18563:3;18559:14;18544:29;;18410:169;;;;:::o;18585:165::-;18725:17;18721:1;18713:6;18709:14;18702:41;18585:165;:::o;18756:366::-;18898:3;18919:67;18983:2;18978:3;18919:67;:::i;:::-;18912:74;;18995:93;19084:3;18995:93;:::i;:::-;19113:2;19108:3;19104:12;19097:19;;18756:366;;;:::o;19128:419::-;19294:4;19332:2;19321:9;19317:18;19309:26;;19381:9;19375:4;19371:20;19367:1;19356:9;19352:17;19345:47;19409:131;19535:4;19409:131;:::i;:::-;19401:139;;19128:419;;;:::o;19553:169::-;19693:21;19689:1;19681:6;19677:14;19670:45;19553:169;:::o;19728:366::-;19870:3;19891:67;19955:2;19950:3;19891:67;:::i;:::-;19884:74;;19967:93;20056:3;19967:93;:::i;:::-;20085:2;20080:3;20076:12;20069:19;;19728:366;;;:::o;20100:419::-;20266:4;20304:2;20293:9;20289:18;20281:26;;20353:9;20347:4;20343:20;20339:1;20328:9;20324:17;20317:47;20381:131;20507:4;20381:131;:::i;:::-;20373:139;;20100:419;;;:::o;20525:332::-;20646:4;20684:2;20673:9;20669:18;20661:26;;20697:71;20765:1;20754:9;20750:17;20741:6;20697:71;:::i;:::-;20778:72;20846:2;20835:9;20831:18;20822:6;20778:72;:::i;:::-;20525:332;;;;;:::o;20863:180::-;20911:77;20908:1;20901:88;21008:4;21005:1;20998:15;21032:4;21029:1;21022:15;21049:180;21097:77;21094:1;21087:88;21194:4;21191:1;21184:15;21218:4;21215:1;21208:15;21235:233;21274:3;21297:24;21315:5;21297:24;:::i;:::-;21288:33;;21343:66;21336:5;21333:77;21330:103;;21413:18;;:::i;:::-;21330:103;21460:1;21453:5;21449:13;21442:20;;21235:233;;;:::o;21474:114::-;21541:6;21575:5;21569:12;21559:22;;21474:114;;;:::o;21594:184::-;21693:11;21727:6;21722:3;21715:19;21767:4;21762:3;21758:14;21743:29;;21594:184;;;;:::o;21784:132::-;21851:4;21874:3;21866:11;;21904:4;21899:3;21895:14;21887:22;;21784:132;;;:::o;21922:108::-;21999:24;22017:5;21999:24;:::i;:::-;21994:3;21987:37;21922:108;;:::o;22036:179::-;22105:10;22126:46;22168:3;22160:6;22126:46;:::i;:::-;22204:4;22199:3;22195:14;22181:28;;22036:179;;;;:::o;22221:113::-;22291:4;22323;22318:3;22314:14;22306:22;;22221:113;;;:::o;22370:732::-;22489:3;22518:54;22566:5;22518:54;:::i;:::-;22588:86;22667:6;22662:3;22588:86;:::i;:::-;22581:93;;22698:56;22748:5;22698:56;:::i;:::-;22777:7;22808:1;22793:284;22818:6;22815:1;22812:13;22793:284;;;22894:6;22888:13;22921:63;22980:3;22965:13;22921:63;:::i;:::-;22914:70;;23007:60;23060:6;23007:60;:::i;:::-;22997:70;;22853:224;22840:1;22837;22833:9;22828:14;;22793:284;;;22797:14;23093:3;23086:10;;22494:608;;;22370:732;;;;:::o;23108:483::-;23279:4;23317:2;23306:9;23302:18;23294:26;;23330:71;23398:1;23387:9;23383:17;23374:6;23330:71;:::i;:::-;23448:9;23442:4;23438:20;23433:2;23422:9;23418:18;23411:48;23476:108;23579:4;23570:6;23476:108;:::i;:::-;23468:116;;23108:483;;;;;:::o;23597:98::-;23648:6;23682:5;23676:12;23666:22;;23597:98;;;:::o;23701:147::-;23802:11;23839:3;23824:18;;23701:147;;;;:::o;23854:246::-;23935:1;23945:113;23959:6;23956:1;23953:13;23945:113;;;24044:1;24039:3;24035:11;24029:18;24025:1;24020:3;24016:11;24009:39;23981:2;23978:1;23974:10;23969:15;;23945:113;;;24092:1;24083:6;24078:3;24074:16;24067:27;23916:184;23854:246;;;:::o;24106:386::-;24210:3;24238:38;24270:5;24238:38;:::i;:::-;24292:88;24373:6;24368:3;24292:88;:::i;:::-;24285:95;;24389:65;24447:6;24442:3;24435:4;24428:5;24424:16;24389:65;:::i;:::-;24479:6;24474:3;24470:16;24463:23;;24214:278;24106:386;;;;:::o;24498:271::-;24628:3;24650:93;24739:3;24730:6;24650:93;:::i;:::-;24643:100;;24760:3;24753:10;;24498:271;;;;:::o;24775:194::-;24815:4;24835:20;24853:1;24835:20;:::i;:::-;24830:25;;24869:20;24887:1;24869:20;:::i;:::-;24864:25;;24913:1;24910;24906:9;24898:17;;24937:1;24931:4;24928:11;24925:37;;;24942:18;;:::i;:::-;24925:37;24775:194;;;;:::o;24975:410::-;25015:7;25038:20;25056:1;25038:20;:::i;:::-;25033:25;;25072:20;25090:1;25072:20;:::i;:::-;25067:25;;25127:1;25124;25120:9;25149:30;25167:11;25149:30;:::i;:::-;25138:41;;25328:1;25319:7;25315:15;25312:1;25309:22;25289:1;25282:9;25262:83;25239:139;;25358:18;;:::i;:::-;25239:139;25023:362;24975:410;;;;:::o;25391:191::-;25431:3;25450:20;25468:1;25450:20;:::i;:::-;25445:25;;25484:20;25502:1;25484:20;:::i;:::-;25479:25;;25527:1;25524;25520:9;25513:16;;25548:3;25545:1;25542:10;25539:36;;;25555:18;;:::i;:::-;25539:36;25391:191;;;;:::o;25588:216::-;25627:4;25647:19;25664:1;25647:19;:::i;:::-;25642:24;;25680:19;25697:1;25680:19;:::i;:::-;25675:24;;25723:1;25720;25716:9;25708:17;;25747:26;25741:4;25738:36;25735:62;;;25777:18;;:::i;:::-;25735:62;25588:216;;;;:::o;25810:426::-;25951:4;25989:2;25978:9;25974:18;25966:26;;26002:71;26070:1;26059:9;26055:17;26046:6;26002:71;:::i;:::-;26083:70;26149:2;26138:9;26134:18;26125:6;26083:70;:::i;:::-;26163:66;26225:2;26214:9;26210:18;26201:6;26163:66;:::i;:::-;25810:426;;;;;;:::o;26242:652::-;26441:4;26479:3;26468:9;26464:19;26456:27;;26493:71;26561:1;26550:9;26546:17;26537:6;26493:71;:::i;:::-;26574:72;26642:2;26631:9;26627:18;26618:6;26574:72;:::i;:::-;26656:70;26722:2;26711:9;26707:18;26698:6;26656:70;:::i;:::-;26736;26802:2;26791:9;26787:18;26778:6;26736:70;:::i;:::-;26816:71;26882:3;26871:9;26867:19;26858:6;26816:71;:::i;:::-;26242:652;;;;;;;;:::o;26900:172::-;27040:24;27036:1;27028:6;27024:14;27017:48;26900:172;:::o;27078:366::-;27220:3;27241:67;27305:2;27300:3;27241:67;:::i;:::-;27234:74;;27317:93;27406:3;27317:93;:::i;:::-;27435:2;27430:3;27426:12;27419:19;;27078:366;;;:::o;27450:419::-;27616:4;27654:2;27643:9;27639:18;27631:26;;27703:9;27697:4;27693:20;27689:1;27678:9;27674:17;27667:47;27731:131;27857:4;27731:131;:::i;:::-;27723:139;;27450:419;;;:::o;27875:180::-;27923:77;27920:1;27913:88;28020:4;28017:1;28010:15;28044:4;28041:1;28034:15;28061:183;28099:3;28122:23;28139:5;28122:23;:::i;:::-;28113:32;;28167:18;28160:5;28157:29;28154:55;;28189:18;;:::i;:::-;28154:55;28236:1;28229:5;28225:13;28218:20;;28061:183;;;:::o;28250:213::-;28289:3;28308:19;28325:1;28308:19;:::i;:::-;28303:24;;28341:19;28358:1;28341:19;:::i;:::-;28336:24;;28383:1;28380;28376:9;28369:16;;28406:26;28401:3;28398:35;28395:61;;;28436:18;;:::i;:::-;28395:61;28250:213;;;;:::o;28469:60::-;28497:3;28518:5;28511:12;;28469:60;;;:::o;28535:140::-;28584:9;28617:52;28635:33;28644:23;28661:5;28644:23;:::i;:::-;28635:33;:::i;:::-;28617:52;:::i;:::-;28604:65;;28535:140;;;:::o;28681:129::-;28767:36;28797:5;28767:36;:::i;:::-;28762:3;28755:49;28681:129;;:::o;28816:328::-;28935:4;28973:2;28962:9;28958:18;28950:26;;28986:70;29053:1;29042:9;29038:17;29029:6;28986:70;:::i;:::-;29066:71;29133:2;29122:9;29118:18;29109:6;29066:71;:::i;:::-;28816:328;;;;;:::o;29150:330::-;29270:4;29308:2;29297:9;29293:18;29285:26;;29321:71;29389:1;29378:9;29374:17;29365:6;29321:71;:::i;:::-;29402;29469:2;29458:9;29454:18;29445:6;29402:71;:::i;:::-;29150:330;;;;;:::o;29486:172::-;29626:24;29622:1;29614:6;29610:14;29603:48;29486:172;:::o;29664:366::-;29806:3;29827:67;29891:2;29886:3;29827:67;:::i;:::-;29820:74;;29903:93;29992:3;29903:93;:::i;:::-;30021:2;30016:3;30012:12;30005:19;;29664:366;;;:::o;30036:419::-;30202:4;30240:2;30229:9;30225:18;30217:26;;30289:9;30283:4;30279:20;30275:1;30264:9;30260:17;30253:47;30317:131;30443:4;30317:131;:::i;:::-;30309:139;;30036:419;;;:::o;30461:173::-;30601:25;30597:1;30589:6;30585:14;30578:49;30461:173;:::o;30640:366::-;30782:3;30803:67;30867:2;30862:3;30803:67;:::i;:::-;30796:74;;30879:93;30968:3;30879:93;:::i;:::-;30997:2;30992:3;30988:12;30981:19;;30640:366;;;:::o;31012:419::-;31178:4;31216:2;31205:9;31201:18;31193:26;;31265:9;31259:4;31255:20;31251:1;31240:9;31236:17;31229:47;31293:131;31419:4;31293:131;:::i;:::-;31285:139;;31012:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2629000","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","MAX_CONSUMERS()":"infinite","acceptOwnership()":"54629","acceptSubscriptionOwnerTransfer(uint64)":"833","addConsumer(uint64,address)":"infinite","cancelSubscription(uint64,address)":"infinite","consumerIsAdded(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"infinite","fundSubscription(uint64,uint96)":"infinite","getConfig()":"infinite","getFallbackWeiPerUnitLink()":"427","getFeeConfig()":"infinite","getRequestConfig()":"908","getSubscription(uint64)":"infinite","owner()":"2567","pendingRequestExists(uint64)":"791","removeConsumer(uint64,address)":"infinite","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"966","setConfig()":"27474","transferOwnership(address)":"30786"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","consumerIsAdded(uint64,address)":"ed5eb06d","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"08e3898e","fundSubscription(uint64,uint96)":"afc69b53","getConfig()":"c3f909d4","getFallbackWeiPerUnitLink()":"356dac71","getFeeConfig()":"5fbbc0d2","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","owner()":"8da5cb5b","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb","setConfig()":"8b673e7a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackWeiPerUnitLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setConfig()\":{\"notice\":\"Sets the configuration of the vrfv2 mock coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport {VRFCoordinatorV2Interface} from \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport {VRFConsumerBaseV2} from \\\"../VRFConsumerBaseV2.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n// solhint-disable chainlink-solidity/prefix-immutable-variables-with-i\\n// solhint-disable gas-custom-errors\\n// solhint-disable avoid-low-level-calls\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n  uint16 public immutable MAX_CONSUMERS = 100;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n  error TooManyConsumers();\\n  error InvalidConsumer();\\n  error InvalidRandomWords();\\n  error Reentrant();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n  event ConsumerAdded(uint64 indexed subId, address consumer);\\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\\n  event ConfigSet();\\n\\n  struct Config {\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n  }\\n  Config private s_config;\\n  uint64 internal s_currentSubId;\\n  uint256 internal s_nextRequestId = 1;\\n  uint256 internal s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) internal s_subscriptions; /* subId */ /* subscription */\\n  mapping(uint64 => address[]) internal s_consumers; /* subId */ /* consumers */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) ConfirmedOwner(msg.sender) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n    setConfig();\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 mock coordinator\\n   */\\n  function setConfig() public onlyOwner {\\n    s_config = Config({reentrancyLock: false});\\n    emit ConfigSet();\\n  }\\n\\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\\n    address[] memory consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    s_config.reentrancyLock = true;\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n    s_config.reentrancyLock = false;\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override nonReentrant onlyValidConsumer(_subId, msg.sender) returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(\\n    uint64 _subId\\n  ) external view override returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig() external pure override returns (uint16, uint32, bytes32[] memory) {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n\\n    if (consumerIsAdded(_subId, _consumer)) {\\n      return;\\n    }\\n\\n    s_consumers[_subId].push(_consumer);\\n    emit ConsumerAdded(_subId, _consumer);\\n  }\\n\\n  function removeConsumer(\\n    uint64 _subId,\\n    address _consumer\\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\\n    address[] storage consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[consumers.length - 1];\\n        consumers[i] = last;\\n        consumers.pop();\\n        break;\\n      }\\n    }\\n\\n    emit ConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  function getConfig()\\n    external\\n    pure\\n    returns (\\n      uint16 minimumRequestConfirmations,\\n      uint32 maxGasLimit,\\n      uint32 stalenessSeconds,\\n      uint32 gasAfterPaymentCalculation\\n    )\\n  {\\n    return (4, 2_500_000, 2_700, 33285);\\n  }\\n\\n  function getFeeConfig()\\n    external\\n    pure\\n    returns (\\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\\n      uint24 reqsForTier2,\\n      uint24 reqsForTier3,\\n      uint24 reqsForTier4,\\n      uint24 reqsForTier5\\n    )\\n  {\\n    return (\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      0,\\n      0,\\n      0,\\n      0\\n    );\\n  }\\n\\n  modifier nonReentrant() {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n    _;\\n  }\\n\\n  function getFallbackWeiPerUnitLink() external pure returns (int256) {\\n    return 4000000000000000; // 0.004 Ether\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 /*_subId*/, address /*_newOwner*/) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 /*_subId*/) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function pendingRequestExists(uint64 /*subId*/) public pure override returns (bool) {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0x3dbc30f324813e8bcf782008c3806b35a55ad3a043a2ffeee8df540eb9d7c020\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2884,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_config","offset":0,"slot":"2","type":"t_struct(Config)2881_storage"},{"astId":2886,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"3","type":"t_uint64"},{"astId":2889,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"4","type":"t_uint256"},{"astId":2892,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"5","type":"t_uint256"},{"astId":2902,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint64,t_struct(Subscription)2897_storage)"},{"astId":2907,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_consumers","offset":0,"slot":"7","type":"t_mapping(t_uint64,t_array(t_address)dyn_storage)"},{"astId":2919,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(Request)2914_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_struct(Request)2914_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)2914_storage"},"t_mapping(t_uint64,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint64,t_struct(Subscription)2897_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)2897_storage"},"t_struct(Config)2881_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Config","members":[{"astId":2880,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"reentrancyLock","offset":0,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"},"t_struct(Request)2914_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":2909,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":2911,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":2913,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)2897_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":2894,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2896,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"notice":"fulfillRandomWordsWithOverride allows the user to pass in their own random words."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"owner()":{"notice":"Get the current owner"},"setConfig()":{"notice":"Sets the configuration of the vrfv2 mock coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"VRFCoordinatorV2_5Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPrice","type":"uint96"},{"internalType":"int256","name":"_weiPerUnitLink","type":"int256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[],"name":"FailedToSendNative","type":"error"},{"inputs":[],"name":"FailedToTransferLink","type":"error"},{"inputs":[],"name":"IndexOutOfRange","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidExtraArgsTag","type":"error"},{"inputs":[],"name":"InvalidRandomWords","type":"error"},{"inputs":[],"name":"InvalidRequest","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[],"name":"LinkAlreadySet","type":"error"},{"inputs":[],"name":"LinkNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"NotImplemented","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[],"name":"ConfigSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NativeFundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"nativePayment","type":"bool"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"bool","name":"onlyPremium","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":false,"internalType":"bytes","name":"extraArgs","type":"bytes"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountNative","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldNativeBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNativeBalance","type":"uint256"}],"name":"SubscriptionFundedWithNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_NATIVE_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"consumerIsAdded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"},{"internalType":"uint256[]","name":"_words","type":"uint256[]"}],"name":"fulfillRandomWordsWithOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"subOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_base_fee","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_gas_price","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_wei_per_unit_link","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"recoverNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"_req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_config","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"bool","name":"reentrancyLock","type":"bool"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeNativePPM","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkDiscountPPM","type":"uint32"},{"internalType":"uint8","name":"nativePremiumPercentage","type":"uint8"},{"internalType":"uint8","name":"linkPremiumPercentage","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_currentSubNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalNativeBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"linkNativeFeed","type":"address"}],"name":"setLINKAndLINKNativeFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill","_words":"user-provided random words"}},"fundSubscription(uint256,uint256)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","reqCount":"- Requests count of subscription.","subOwner":"- owner of the subscription."}},"ownerCancelSubscription(uint256)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"recoverNativeFunds(address)":{"params":{"to":"address to send native to"}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setLINKAndLINKNativeFeed(address,address)":{"params":{"link":"- address of link token","linkNativeFeed":"address of the link native feed"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1323":{"entryPoint":null,"id":1323,"parameterSlots":0,"returnSlots":0},"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_3827":{"entryPoint":null,"id":3827,"parameterSlots":3,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":425,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":1239,"id":193,"parameterSlots":0,"returnSlots":0},"@setConfig_3851":{"entryPoint":728,"id":3851,"parameterSlots":0,"returnSlots":0},"abi_decode_t_int256_fromMemory":{"entryPoint":1500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96_fromMemory":{"entryPoint":1441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory":{"entryPoint":1523,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":1673,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1940,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1712,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1826,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_int256":{"entryPoint":1464,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":1391,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1386,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1860,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":1632,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1746,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":1474,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":1415,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4840:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"378:65:21","statements":[{"nodeType":"YulAssignment","src":"388:49:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:38:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:21"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:21","type":""}],"src":"334:109:21"},{"body":{"nodeType":"YulBlock","src":"491:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:21"},"nodeType":"YulFunctionCall","src":"549:12:21"},"nodeType":"YulExpressionStatement","src":"549:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:21"},"nodeType":"YulFunctionCall","src":"521:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:21"},"nodeType":"YulFunctionCall","src":"511:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:21"},"nodeType":"YulFunctionCall","src":"504:42:21"},"nodeType":"YulIf","src":"501:62:21"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:21","type":""}],"src":"449:120:21"},{"body":{"nodeType":"YulBlock","src":"637:79:21","statements":[{"nodeType":"YulAssignment","src":"647:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:21"},"nodeType":"YulFunctionCall","src":"656:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:21"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:21"},"nodeType":"YulFunctionCall","src":"678:32:21"},"nodeType":"YulExpressionStatement","src":"678:32:21"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:21","type":""}],"src":"575:141:21"},{"body":{"nodeType":"YulBlock","src":"766:32:21","statements":[{"nodeType":"YulAssignment","src":"776:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"787:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"776:7:21"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"748:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"758:7:21","type":""}],"src":"722:76:21"},{"body":{"nodeType":"YulBlock","src":"846:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"902:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"914:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"904:6:21"},"nodeType":"YulFunctionCall","src":"904:12:21"},"nodeType":"YulExpressionStatement","src":"904:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"869:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"893:5:21"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"876:16:21"},"nodeType":"YulFunctionCall","src":"876:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"866:2:21"},"nodeType":"YulFunctionCall","src":"866:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"859:6:21"},"nodeType":"YulFunctionCall","src":"859:42:21"},"nodeType":"YulIf","src":"856:62:21"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"839:5:21","type":""}],"src":"804:120:21"},{"body":{"nodeType":"YulBlock","src":"992:79:21","statements":[{"nodeType":"YulAssignment","src":"1002:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1017:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1011:5:21"},"nodeType":"YulFunctionCall","src":"1011:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1002:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1059:5:21"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1033:25:21"},"nodeType":"YulFunctionCall","src":"1033:32:21"},"nodeType":"YulExpressionStatement","src":"1033:32:21"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"970:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"978:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"986:5:21","type":""}],"src":"930:141:21"},{"body":{"nodeType":"YulBlock","src":"1185:549:21","statements":[{"body":{"nodeType":"YulBlock","src":"1231:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1233:77:21"},"nodeType":"YulFunctionCall","src":"1233:79:21"},"nodeType":"YulExpressionStatement","src":"1233:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1206:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1202:3:21"},"nodeType":"YulFunctionCall","src":"1202:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1227:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1198:3:21"},"nodeType":"YulFunctionCall","src":"1198:32:21"},"nodeType":"YulIf","src":"1195:119:21"},{"nodeType":"YulBlock","src":"1324:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1339:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1353:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1343:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1368:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1413:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1424:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1409:3:21"},"nodeType":"YulFunctionCall","src":"1409:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1433:7:21"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1378:30:21"},"nodeType":"YulFunctionCall","src":"1378:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1368:6:21"}]}]},{"nodeType":"YulBlock","src":"1461:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1476:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1490:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1480:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1506:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1551:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1562:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1547:3:21"},"nodeType":"YulFunctionCall","src":"1547:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1571:7:21"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1516:30:21"},"nodeType":"YulFunctionCall","src":"1516:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1506:6:21"}]}]},{"nodeType":"YulBlock","src":"1599:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1614:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1628:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1618:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1644:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1689:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1700:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1685:3:21"},"nodeType":"YulFunctionCall","src":"1685:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1709:7:21"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"1654:30:21"},"nodeType":"YulFunctionCall","src":"1654:63:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1644:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1139:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1150:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1162:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1170:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1178:6:21","type":""}],"src":"1077:657:21"},{"body":{"nodeType":"YulBlock","src":"1836:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1853:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1858:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1846:6:21"},"nodeType":"YulFunctionCall","src":"1846:19:21"},"nodeType":"YulExpressionStatement","src":"1846:19:21"},{"nodeType":"YulAssignment","src":"1874:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1893:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1898:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1889:3:21"},"nodeType":"YulFunctionCall","src":"1889:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1874:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1808:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1813:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1824:11:21","type":""}],"src":"1740:169:21"},{"body":{"nodeType":"YulBlock","src":"2021:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2043:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2051:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2039:3:21"},"nodeType":"YulFunctionCall","src":"2039:14:21"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"2055:26:21","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:21"},"nodeType":"YulFunctionCall","src":"2032:50:21"},"nodeType":"YulExpressionStatement","src":"2032:50:21"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2013:6:21","type":""}],"src":"1915:174:21"},{"body":{"nodeType":"YulBlock","src":"2241:220:21","statements":[{"nodeType":"YulAssignment","src":"2251:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2317:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2322:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2258:58:21"},"nodeType":"YulFunctionCall","src":"2258:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2251:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2423:3:21"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"2334:88:21"},"nodeType":"YulFunctionCall","src":"2334:93:21"},"nodeType":"YulExpressionStatement","src":"2334:93:21"},{"nodeType":"YulAssignment","src":"2436:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2447:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2452:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2443:3:21"},"nodeType":"YulFunctionCall","src":"2443:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2436:3:21"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2229:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2237:3:21","type":""}],"src":"2095:366:21"},{"body":{"nodeType":"YulBlock","src":"2638:248:21","statements":[{"nodeType":"YulAssignment","src":"2648:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2660:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:21"},"nodeType":"YulFunctionCall","src":"2656:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2648:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2695:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2706:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:21"},"nodeType":"YulFunctionCall","src":"2691:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2714:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2720:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2710:3:21"},"nodeType":"YulFunctionCall","src":"2710:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2684:6:21"},"nodeType":"YulFunctionCall","src":"2684:47:21"},"nodeType":"YulExpressionStatement","src":"2684:47:21"},{"nodeType":"YulAssignment","src":"2740:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2874:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2748:124:21"},"nodeType":"YulFunctionCall","src":"2748:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2740:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2618:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2633:4:21","type":""}],"src":"2467:419:21"},{"body":{"nodeType":"YulBlock","src":"2998:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3020:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3016:3:21"},"nodeType":"YulFunctionCall","src":"3016:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3032:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3009:6:21"},"nodeType":"YulFunctionCall","src":"3009:49:21"},"nodeType":"YulExpressionStatement","src":"3009:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2990:6:21","type":""}],"src":"2892:173:21"},{"body":{"nodeType":"YulBlock","src":"3217:220:21","statements":[{"nodeType":"YulAssignment","src":"3227:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3293:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3298:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3234:58:21"},"nodeType":"YulFunctionCall","src":"3234:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3227:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3399:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"3310:88:21"},"nodeType":"YulFunctionCall","src":"3310:93:21"},"nodeType":"YulExpressionStatement","src":"3310:93:21"},{"nodeType":"YulAssignment","src":"3412:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3423:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3428:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3419:3:21"},"nodeType":"YulFunctionCall","src":"3419:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3412:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3205:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3213:3:21","type":""}],"src":"3071:366:21"},{"body":{"nodeType":"YulBlock","src":"3614:248:21","statements":[{"nodeType":"YulAssignment","src":"3624:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3636:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3647:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:21"},"nodeType":"YulFunctionCall","src":"3632:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3624:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3671:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3682:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3667:3:21"},"nodeType":"YulFunctionCall","src":"3667:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3690:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3660:6:21"},"nodeType":"YulFunctionCall","src":"3660:47:21"},"nodeType":"YulExpressionStatement","src":"3660:47:21"},{"nodeType":"YulAssignment","src":"3716:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3850:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3724:124:21"},"nodeType":"YulFunctionCall","src":"3724:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3716:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3594:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3609:4:21","type":""}],"src":"3443:419:21"},{"body":{"nodeType":"YulBlock","src":"3974:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3996:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4004:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3992:3:21"},"nodeType":"YulFunctionCall","src":"3992:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4008:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3985:6:21"},"nodeType":"YulFunctionCall","src":"3985:48:21"},"nodeType":"YulExpressionStatement","src":"3985:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3966:6:21","type":""}],"src":"3868:172:21"},{"body":{"nodeType":"YulBlock","src":"4192:220:21","statements":[{"nodeType":"YulAssignment","src":"4202:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4268:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4209:58:21"},"nodeType":"YulFunctionCall","src":"4209:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4202:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4374:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"4285:88:21"},"nodeType":"YulFunctionCall","src":"4285:93:21"},"nodeType":"YulExpressionStatement","src":"4285:93:21"},{"nodeType":"YulAssignment","src":"4387:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4398:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4403:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:21"},"nodeType":"YulFunctionCall","src":"4394:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4387:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4180:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4188:3:21","type":""}],"src":"4046:366:21"},{"body":{"nodeType":"YulBlock","src":"4589:248:21","statements":[{"nodeType":"YulAssignment","src":"4599:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4622:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4607:3:21"},"nodeType":"YulFunctionCall","src":"4607:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4599:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4657:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:21"},"nodeType":"YulFunctionCall","src":"4642:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4665:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4671:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4661:3:21"},"nodeType":"YulFunctionCall","src":"4661:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4635:6:21"},"nodeType":"YulFunctionCall","src":"4635:47:21"},"nodeType":"YulExpressionStatement","src":"4635:47:21"},{"nodeType":"YulAssignment","src":"4691:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4825:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4699:124:21"},"nodeType":"YulFunctionCall","src":"4699:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4691:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4569:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4584:4:21","type":""}],"src":"4418:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xE SSTORE PUSH1 0x64 PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x6448 CODESIZE SUB DUP1 PUSH3 0x6448 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x5F3 JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x13D JUMPI PUSH3 0x13C DUP2 PUSH3 0x1A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1A0 PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x7B6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x211 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH3 0x2E8 PUSH3 0x4D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x55F SWAP1 PUSH3 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x592 DUP2 PUSH3 0x56F JUMP JUMPDEST DUP2 EQ PUSH3 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5B2 DUP2 PUSH3 0x587 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5CD DUP2 PUSH3 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5ED DUP2 PUSH3 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x60F JUMPI PUSH3 0x60E PUSH3 0x56A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x61F DUP7 DUP3 DUP8 ADD PUSH3 0x5A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x632 DUP7 DUP3 DUP8 ADD PUSH3 0x5A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x645 DUP7 DUP3 DUP8 ADD PUSH3 0x5DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x698 PUSH1 0x18 DUP4 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x6A5 DUP3 PUSH3 0x660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x6CB DUP2 PUSH3 0x689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70A PUSH1 0x17 DUP4 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x717 DUP3 PUSH3 0x6D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x73D DUP2 PUSH3 0x6FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x77C PUSH1 0x16 DUP4 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x789 DUP3 PUSH3 0x744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7AF DUP2 PUSH3 0x76D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x5C4D PUSH3 0x7FB PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xD66 ADD MSTORE PUSH2 0x115C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xCE1 ADD MSTORE PUSH2 0x3271 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xD26 ADD MSTORE PUSH2 0x11C4 ADD MSTORE PUSH2 0x5C4D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xAEFB212F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDAC83D29 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDAC83D29 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDC311DD3 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0xDCAB3DCF EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x806 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xAEFB212F EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xB2A7CAC5 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xBEC4C08C EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xCB631797 EQ PUSH2 0x71F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x9B1C385E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9B1C385E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x9D40A6FD EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xAA433AFF EQ PUSH2 0x667 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x953E9C75 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x95B55CFC EQ PUSH2 0x58F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x72E9D565 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x72E9D565 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x8402595E EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x86FE91C7 EQ PUSH2 0x4E5 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x65982744 EQ PUSH2 0x428 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x13478329 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13478329 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18E3DD27 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x1EEBC117 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x2F622E6B EQ PUSH2 0x36E JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x88070F5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xAE09540 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x115E3C0D EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x4666 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x4715 JUMP JUMPDEST PUSH2 0xF71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x482A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x11E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x48DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x48F8 JUMP JUMPDEST PUSH2 0x1308 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x4925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x1513 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x49A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH2 0x164F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x1844 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x525 PUSH2 0x19DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x48DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x4A0A JUMP JUMPDEST PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x4A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x628 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x4A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x4B16 JUMP JUMPDEST PUSH2 0x247C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x26EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x4715 JUMP JUMPDEST PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x2878 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x2A89 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x2C27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x2FE6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x798 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH2 0x326F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x804 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x48F8 JUMP JUMPDEST PUSH2 0x3293 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x48F8 JUMP JUMPDEST PUSH2 0x3565 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x13 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9CB SWAP1 PUSH2 0x4DB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F7 SWAP1 PUSH2 0x4DB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xB26 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAAA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB01 JUMPI PUSH2 0xB00 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB18 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB0 JUMP JUMPDEST POP PUSH2 0xB6B JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB89 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x4F52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP8 PUSH1 0x60 ADD MLOAD MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCC9 JUMPI PUSH2 0xCC8 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x4F9D JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xDA6 JUMPI PUSH32 0x0 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x4F9D JUMP JUMPDEST PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x5042 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x10 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x4248 JUMP JUMPDEST POP POP DUP7 PUSH1 0x0 ADD MLOAD DUP12 PUSH32 0xAEB4B4786571E184246D39587F659ABF0E26F41F6A3358692250382C0CDB47B7 DUP14 DUP5 DUP8 DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE45 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xE64 DUP2 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xE6C PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE78 DUP6 PUSH2 0x367D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xEB0 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF61 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP5 DUP5 PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114D SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x11EE PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x11F6 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x122F PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3A67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12D0 DUP3 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xD623472500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1310 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x13D9 PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3A67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x150A PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C2 SWAP3 SWAP2 SWAP1 PUSH2 0x51E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x523E JUMP JUMPDEST PUSH2 0x3A67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x151B PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2D118A6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D6 SWAP1 PUSH2 0x52C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x17EC PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1840 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180C JUMPI PUSH2 0x180B PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x183A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x8F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x184C PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18C5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19BC JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1903 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1940 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x4AED7C8EED0496C8C19EA2681FCCA25741C1602342E38B045D9F1E8E905D2E9C DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19B1 SWAP3 SWAP2 SWAP1 PUSH2 0x5309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C72 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1CB1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLVALUE PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2F SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D86 SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x7603B205D03651EE812F803FCCDE89F1012E545A9C99F0ABFEA9CEDD0FD8E902 DUP3 CALLVALUE DUP5 PUSH2 0x1DE3 SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF1 SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E07 PUSH2 0x3631 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD CALLDATALOAD CALLER PUSH2 0x1E17 DUP3 DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x1E5A JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E51 SWAP3 SWAP2 SWAP1 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F14 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2F SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1F57 PUSH2 0x1F52 DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1F4D SWAP2 SWAP1 PUSH2 0x536A JUMP JUMPDEST PUSH2 0x3BB2 JUMP JUMPDEST PUSH2 0x3CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F81 SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F9F SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1FBA SWAP2 SWAP1 PUSH2 0x536A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2080 SWAP2 SWAP1 PUSH2 0x55C8 JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP10 PUSH1 0x0 ADD CALLDATALOAD PUSH32 0xEB0E3652E0F44F417695E6E90F2F42C99B65CD7169074C5A654B16B9748C3A4E DUP7 DUP7 DUP14 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x56C6 JUMP JUMPDEST DUP15 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20EE SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST DUP16 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2101 SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH2 0x2114 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x573D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214E PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x1 NUMBER PUSH2 0x2177 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST BLOCKHASH ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x218D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x584E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP2 POP PUSH1 0x1 DUP2 PUSH2 0x21B5 SWAP2 SWAP1 PUSH2 0x589C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2227 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2426 SWAP3 SWAP2 SWAP1 PUSH2 0x4288 JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x243E DUP4 PUSH1 0x8 PUSH2 0x3D42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP3 PUSH32 0x1D3015D7BA850FA198DC7B1A3F5D42779313A681035F77C8C03764C61005518D CALLER PUSH1 0x40 MLOAD PUSH2 0x246F SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2484 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x2548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x2559 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x259A PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2618 SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x266F SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP8 DUP5 PUSH2 0x26CC SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26DA SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26F2 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2736 DUP2 PUSH2 0x3B49 JUMP JUMPDEST PUSH2 0x2740 DUP3 DUP3 PUSH2 0x3D5C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2752 PUSH1 0x8 PUSH2 0x3EF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x278D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1390F2A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH2 0x279B SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT DUP1 PUSH2 0x27AB JUMPI POP PUSH1 0x0 DUP5 EQ JUMPDEST PUSH2 0x27B5 JUMPI DUP1 PUSH2 0x27B7 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP3 PUSH2 0x27C7 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E3 JUMPI PUSH2 0x27E2 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2811 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x286E JUMPI PUSH2 0x283E DUP8 DUP3 PUSH2 0x282E SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x8 PUSH2 0x3F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x2867 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2880 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x28C4 DUP2 PUSH2 0x3B49 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29A0 JUMPI PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2997 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xD4114AB6E9AF9F597C52041F32D62DC57C5C4E4C0D4427006069635E216C9386 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2A7D SWAP3 SWAP2 SWAP1 PUSH2 0x58D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x2A93 DUP2 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0x2A9B PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2B0C JUMPI POP PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x64 PUSH2 0xFFFF AND DUP2 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x2B68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH32 0x1E980D04AA7648E205713E5E8EA3808672AC163D10936D36F91B2C88AC1575E1 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C17 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2C31 DUP2 PUSH2 0x3579 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C3D DUP3 DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x2C80 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C77 SWAP3 SWAP2 SWAP1 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C88 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D2C JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D23 SWAP3 SWAP2 SWAP1 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2DC4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2D7A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x2DDB SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2F38 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E13 JUMPI PUSH2 0x2E12 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F27 JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E4B JUMPI PUSH2 0x2E4A PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E7E JUMPI PUSH2 0x2E7D PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2EEC JUMPI PUSH2 0x2EEB PUSH2 0x5901 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2F38 JUMP JUMPDEST DUP1 PUSH2 0x2F31 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH32 0x32158C6058347C1601B2D12BC696AC6901D8A9A9AA3BA10C27AB0A983E8425A7 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2FD5 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2FF0 DUP2 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0x2FF8 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30E4 JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x21A4DAD170A6BF476C31BBCF4A16628295B0E450672EEC25D7C93308E05344A1 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x30DB SWAP3 SWAP2 SWAP1 PUSH2 0x58D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3134 DUP3 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3255 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x320B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x329B PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3323 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3380 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x339D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C1 SWAP2 SWAP1 PUSH2 0x5945 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3437 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342E SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3560 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x344D SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34AC SWAP3 SWAP2 SWAP1 PUSH2 0x5972 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34EF SWAP2 SWAP1 PUSH2 0x523E JUMP JUMPDEST PUSH2 0x3525 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C07FC4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3556 SWAP3 SWAP2 SWAP1 PUSH2 0x5972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x356D PUSH2 0x39D7 JUMP JUMPDEST PUSH2 0x3576 DUP2 PUSH2 0x3F1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x35BD DUP2 PUSH2 0x3B49 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x362D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3624 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x367B JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37FB JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3727 JUMPI PUSH2 0x3726 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH2 0x37F4 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP1 POP PUSH2 0x3708 JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x386E SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST POP POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x38F3 DUP6 PUSH1 0x8 PUSH2 0x404B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3962 JUMPI DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3933 SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39D0 JUMPI DUP3 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x39A1 SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5C SWAP1 PUSH2 0x59E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x3A9E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3AC7 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3B04 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B09 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3B44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3BBA PUSH2 0x4333 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x3BDE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0x3CA4 JUMP JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 DUP4 SWAP1 PUSH2 0x3C2B SWAP2 SWAP1 PUSH2 0x5A3E JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x3C81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5247FDCE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x3C94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AA7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3CA1 SWAP2 SWAP1 PUSH2 0x5B38 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3CDE SWAP2 SWAP1 PUSH2 0x5B90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x4065 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D68 DUP5 PUSH2 0x367D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3DDA JUMPI POP PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3E96 JUMPI PUSH2 0x3E95 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E4D SWAP3 SWAP2 SWAP1 PUSH2 0x5972 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E90 SWAP2 SWAP1 PUSH2 0x523E JUMP JUMPDEST PUSH2 0x3A67 JUMP JUMPDEST JUMPDEST PUSH2 0x3EAE DUP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AA1 JUMP JUMPDEST DUP4 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3EE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EFE DUP3 PUSH1 0x0 ADD PUSH2 0x40D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F14 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x40E6 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F84 SWAP1 PUSH2 0x5BF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405D DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x4111 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4071 DUP4 DUP4 PUSH2 0x4225 JUMP JUMPDEST PUSH2 0x40CA JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x40CF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x40FE JUMPI PUSH2 0x40FD PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x4219 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x4143 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x415B SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x41CA JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x417C JUMPI PUSH2 0x417B PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x41A0 JUMPI PUSH2 0x419F PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x41DE JUMPI PUSH2 0x41DD PUSH2 0x5901 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x421F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x4254 SWAP1 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x4266 JUMPI POP PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4284 SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4301 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4300 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x42A8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x430E SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4330 SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4361 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4349 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437C DUP2 PUSH2 0x4365 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x439B DUP2 PUSH2 0x4382 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43B6 DUP2 PUSH2 0x43A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D2 DUP2 PUSH2 0x43BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x43EE PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x4373 JUMP JUMPDEST PUSH2 0x43FB PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x4408 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x43AD JUMP JUMPDEST PUSH2 0x4415 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x4422 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x442F PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x443C PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x4449 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x43C9 JUMP JUMPDEST PUSH2 0x4457 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x43C9 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448C DUP2 PUSH2 0x4479 JUMP JUMPDEST DUP2 EQ PUSH2 0x4497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44A9 DUP2 PUSH2 0x4483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44DA DUP3 PUSH2 0x44AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44EA DUP2 PUSH2 0x44CF JUMP JUMPDEST DUP2 EQ PUSH2 0x44F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4507 DUP2 PUSH2 0x44E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x455B DUP3 PUSH2 0x4512 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x457A JUMPI PUSH2 0x4579 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458D PUSH2 0x4465 JUMP JUMPDEST SWAP1 POP PUSH2 0x4599 DUP3 DUP3 PUSH2 0x4552 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45B9 JUMPI PUSH2 0x45B8 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45E2 PUSH2 0x45DD DUP5 PUSH2 0x459E JUMP JUMPDEST PUSH2 0x4583 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4605 JUMPI PUSH2 0x4604 PUSH2 0x45CA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x462E JUMPI DUP1 PUSH2 0x461A DUP9 DUP3 PUSH2 0x449A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4607 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x464D JUMPI PUSH2 0x464C PUSH2 0x450D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x465D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x467F JUMPI PUSH2 0x467E PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x468D DUP7 DUP3 DUP8 ADD PUSH2 0x449A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x469E DUP7 DUP3 DUP8 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46BF JUMPI PUSH2 0x46BE PUSH2 0x4474 JUMP JUMPDEST JUMPDEST PUSH2 0x46CB DUP7 DUP3 DUP8 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46EC JUMPI PUSH2 0x46EB PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46FA DUP6 DUP3 DUP7 ADD PUSH2 0x449A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x470B DUP6 DUP3 DUP7 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x472C JUMPI PUSH2 0x472B PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x473A DUP6 DUP3 DUP7 ADD PUSH2 0x449A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x474B DUP6 DUP3 DUP7 ADD PUSH2 0x449A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4768 DUP2 PUSH2 0x4755 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4783 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x475F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47AA DUP2 PUSH2 0x4789 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x47A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F0 PUSH2 0x47EB PUSH2 0x47E6 DUP5 PUSH2 0x44AF JUMP JUMPDEST PUSH2 0x47CB JUMP JUMPDEST PUSH2 0x44AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4802 DUP3 PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4814 DUP3 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4824 DUP2 PUSH2 0x4809 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x483F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x481B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4850 DUP3 PUSH2 0x44AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4860 DUP2 PUSH2 0x4845 JUMP JUMPDEST DUP2 EQ PUSH2 0x486B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x487D DUP2 PUSH2 0x4857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4899 JUMPI PUSH2 0x4898 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48A7 DUP5 DUP3 DUP6 ADD PUSH2 0x486E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48C6 JUMPI PUSH2 0x48C5 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48D4 DUP5 DUP3 DUP6 ADD PUSH2 0x449A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x490E JUMPI PUSH2 0x490D PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x491C DUP5 DUP3 DUP6 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x493A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4957 JUMPI PUSH2 0x4956 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4965 DUP6 DUP3 DUP7 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4976 DUP6 DUP3 DUP7 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498B DUP3 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499B DUP2 PUSH2 0x4980 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x49C5 DUP2 PUSH2 0x44CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A01 JUMPI PUSH2 0x4A00 PUSH2 0x49E6 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A20 JUMPI PUSH2 0x4A1F PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A3E JUMPI PUSH2 0x4A3D PUSH2 0x4474 JUMP JUMPDEST JUMPDEST PUSH2 0x4A4A DUP5 DUP3 DUP6 ADD PUSH2 0x49EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A5C DUP2 PUSH2 0x4479 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A9A DUP2 PUSH2 0x4A7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4AD6 JUMPI PUSH2 0x4AD5 PUSH2 0x450D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AF3 JUMPI PUSH2 0x4AF2 PUSH2 0x4ABB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4B0F JUMPI PUSH2 0x4B0E PUSH2 0x45CA JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4B30 JUMPI PUSH2 0x4B2F PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3E DUP8 DUP3 DUP9 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4B4F DUP8 DUP3 DUP9 ADD PUSH2 0x449A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B70 JUMPI PUSH2 0x4B6F PUSH2 0x4474 JUMP JUMPDEST JUMPDEST PUSH2 0x4B7C DUP8 DUP3 DUP9 ADD PUSH2 0x4AC0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BBF DUP2 PUSH2 0x4479 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD1 DUP4 DUP4 PUSH2 0x4BB6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF5 DUP3 PUSH2 0x4B8A JUMP JUMPDEST PUSH2 0x4BFF DUP2 DUP6 PUSH2 0x4B95 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C0A DUP4 PUSH2 0x4BA6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C3B JUMPI DUP2 MLOAD PUSH2 0x4C22 DUP9 DUP3 PUSH2 0x4BC5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4C2D DUP4 PUSH2 0x4BDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C0E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C62 DUP2 DUP5 PUSH2 0x4BEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C9F DUP2 PUSH2 0x44CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CB1 DUP4 DUP4 PUSH2 0x4C96 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD5 DUP3 PUSH2 0x4C6A JUMP JUMPDEST PUSH2 0x4CDF DUP2 DUP6 PUSH2 0x4C75 JUMP JUMPDEST SWAP4 POP PUSH2 0x4CEA DUP4 PUSH2 0x4C86 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D1B JUMPI DUP2 MLOAD PUSH2 0x4D02 DUP9 DUP3 PUSH2 0x4CA5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4D0D DUP4 PUSH2 0x4CBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4CEE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4D3D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x47A1 JUMP JUMPDEST PUSH2 0x4D4A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x47A1 JUMP JUMPDEST PUSH2 0x4D57 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4A91 JUMP JUMPDEST PUSH2 0x4D64 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x4D76 DUP2 DUP5 PUSH2 0x4CCA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4DC9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4DDC JUMPI PUSH2 0x4DDB PUSH2 0x4D82 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4DF7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x4E04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E74 DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4EA6 JUMPI PUSH2 0x4EA5 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4EC6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A53 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4ED8 DUP2 DUP5 PUSH2 0x4BEA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F15 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4EFA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F2C DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH2 0x4F36 DUP2 DUP6 PUSH2 0x4EEC JUMP JUMPDEST SWAP4 POP PUSH2 0x4F46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5E DUP3 DUP5 PUSH2 0x4F21 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F74 DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F7F DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4F97 JUMPI PUSH2 0x4F96 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA8 DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FB3 DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4FC1 DUP2 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4FD8 JUMPI PUSH2 0x4FD7 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FEA DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF5 DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x500D JUMPI PUSH2 0x500C PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x504D DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x5058 DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5068 JUMPI PUSH2 0x5067 PUSH2 0x5013 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5088 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x5095 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x47A1 JUMP JUMPDEST PUSH2 0x50A2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x43AD JUMP JUMPDEST PUSH2 0x50AF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x43AD JUMP JUMPDEST PUSH2 0x50BC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x43AD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50D6 PUSH1 0x0 DUP4 PUSH2 0x4EEC JUMP JUMPDEST SWAP2 POP PUSH2 0x50E1 DUP3 PUSH2 0x50C6 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F7 DUP3 PUSH2 0x50C9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x511C PUSH2 0x5117 PUSH2 0x5112 DUP5 PUSH2 0x4789 JUMP JUMPDEST PUSH2 0x47CB JUMP JUMPDEST PUSH2 0x4479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x512C DUP2 PUSH2 0x5101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5147 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x5154 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5123 JUMP JUMPDEST PUSH2 0x5161 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5123 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5174 DUP3 PUSH2 0x4789 JUMP JUMPDEST SWAP2 POP PUSH2 0x517F DUP4 PUSH2 0x4789 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51A3 JUMPI PUSH2 0x51A2 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51B4 DUP3 PUSH2 0x4789 JUMP JUMPDEST SWAP2 POP PUSH2 0x51BF DUP4 PUSH2 0x4789 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51E3 JUMPI PUSH2 0x51E2 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x51FE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x520B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5123 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x521B DUP2 PUSH2 0x43A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5238 DUP2 PUSH2 0x5212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5254 JUMPI PUSH2 0x5253 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5262 DUP5 DUP3 DUP6 ADD PUSH2 0x5229 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B2 PUSH1 0x16 DUP4 PUSH2 0x526B JUMP JUMPDEST SWAP2 POP PUSH2 0x52BD DUP3 PUSH2 0x527C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52E1 DUP2 PUSH2 0x52A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52F3 DUP3 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5303 DUP2 PUSH2 0x52E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x531E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x52FA JUMP JUMPDEST PUSH2 0x532B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5347 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x5354 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x49BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x5387 JUMPI PUSH2 0x5386 PUSH2 0x535B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x53A9 JUMPI PUSH2 0x53A8 PUSH2 0x5360 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x53C5 JUMPI PUSH2 0x53C4 PUSH2 0x5365 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D6 DUP2 PUSH2 0x4382 JUMP JUMPDEST DUP2 EQ PUSH2 0x53E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53F3 DUP2 PUSH2 0x53CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x540F JUMPI PUSH2 0x540E PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x541D DUP5 DUP3 DUP6 ADD PUSH2 0x53E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5488 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x544B JUMP JUMPDEST PUSH2 0x5492 DUP7 DUP4 PUSH2 0x544B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C5 PUSH2 0x54C0 PUSH2 0x54BB DUP5 PUSH2 0x4479 JUMP JUMPDEST PUSH2 0x47CB JUMP JUMPDEST PUSH2 0x4479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54DF DUP4 PUSH2 0x54AA JUMP JUMPDEST PUSH2 0x54F3 PUSH2 0x54EB DUP3 PUSH2 0x54CC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5458 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5508 PUSH2 0x54FB JUMP JUMPDEST PUSH2 0x5513 DUP2 DUP5 DUP5 PUSH2 0x54D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5537 JUMPI PUSH2 0x552C PUSH1 0x0 DUP3 PUSH2 0x5500 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5519 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x557C JUMPI PUSH2 0x554D DUP2 PUSH2 0x5426 JUMP JUMPDEST PUSH2 0x5556 DUP5 PUSH2 0x543B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5565 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5579 PUSH2 0x5571 DUP6 PUSH2 0x543B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5518 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5581 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B8 DUP4 DUP4 PUSH2 0x558E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55D1 DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55EA JUMPI PUSH2 0x55E9 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH2 0x55F4 DUP3 SLOAD PUSH2 0x4DB1 JUMP JUMPDEST PUSH2 0x55FF DUP3 DUP3 DUP6 PUSH2 0x553B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5632 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5620 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x562A DUP6 DUP3 PUSH2 0x55AC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5692 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5640 DUP7 PUSH2 0x5426 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5668 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5643 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5685 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5681 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x558E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x56A3 DUP2 PUSH2 0x4365 JUMP JUMPDEST DUP2 EQ PUSH2 0x56AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x56C0 DUP2 PUSH2 0x569A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56DC JUMPI PUSH2 0x56DB PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x56EA DUP5 DUP3 DUP6 ADD PUSH2 0x56B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570F DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH2 0x5719 DUP2 DUP6 PUSH2 0x56F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5729 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF7 JUMP JUMPDEST PUSH2 0x5732 DUP2 PUSH2 0x4512 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x5752 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x575F PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x576C PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4373 JUMP JUMPDEST PUSH2 0x5779 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x5786 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4392 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x5798 DUP2 DUP5 PUSH2 0x5704 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57BD DUP3 PUSH2 0x57A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57CF DUP3 PUSH2 0x57B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57E7 PUSH2 0x57E2 DUP3 PUSH2 0x44CF JUMP JUMPDEST PUSH2 0x57C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5812 PUSH2 0x580D DUP3 PUSH2 0x57ED JUMP JUMPDEST PUSH2 0x57F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5830 DUP3 PUSH2 0x5818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5848 PUSH2 0x5843 DUP3 PUSH2 0x4A7D JUMP JUMPDEST PUSH2 0x5825 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585A DUP3 DUP8 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x586A DUP3 DUP7 PUSH2 0x5801 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x587A DUP3 DUP6 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x588A DUP3 DUP5 PUSH2 0x5837 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58A7 DUP3 PUSH2 0x4A7D JUMP JUMPDEST SWAP2 POP PUSH2 0x58B2 DUP4 PUSH2 0x4A7D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58D2 JUMPI PUSH2 0x58D1 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x58ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x58FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x49BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x593F DUP2 PUSH2 0x4483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x595B JUMPI PUSH2 0x595A PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5969 DUP5 DUP3 DUP6 ADD PUSH2 0x5930 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5987 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x5994 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59D1 PUSH1 0x16 DUP4 PUSH2 0x526B JUMP JUMPDEST SWAP2 POP PUSH2 0x59DC DUP3 PUSH2 0x599B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A00 DUP2 PUSH2 0x59C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A4A DUP4 DUP4 PUSH2 0x5A07 JUMP JUMPDEST DUP3 PUSH2 0x5A55 DUP2 CALLDATALOAD PUSH2 0x5A12 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x5A95 JUMPI PUSH2 0x5A90 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x544B JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x5ABB JUMPI PUSH2 0x5ABA PUSH2 0x5A9D JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x5ACC JUMPI PUSH2 0x5ACB PUSH2 0x5AA2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5AF6 DUP2 PUSH2 0x5212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B12 JUMPI PUSH2 0x5B11 PUSH2 0x5AE2 JUMP JUMPDEST JUMPDEST PUSH2 0x5B1C PUSH1 0x20 PUSH2 0x4583 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5B2C DUP5 DUP3 DUP6 ADD PUSH2 0x5AE7 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B4E JUMPI PUSH2 0x5B4D PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B5C DUP5 DUP3 DUP6 ADD PUSH2 0x5AFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B6E DUP2 PUSH2 0x43A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5B8A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5B65 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BE1 PUSH1 0x17 DUP4 PUSH2 0x526B JUMP JUMPDEST SWAP2 POP PUSH2 0x5BEC DUP3 PUSH2 0x5BAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C10 DUP2 PUSH2 0x5BD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 MUL PUSH22 0xFB1436620D93153BBD5811CC21D64DD343EAE989BCB1 BYTE 0xE7 PUSH7 0xF0FA48DA64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"476:8662:17:-:0;;;1358:1;1323:36;;1396:3;1363:36;;1599:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8338:10:9;355:8:1;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;1707:8:17::1;1694:21;;;;;;;;::::0;::::1;1735:9;1721:23;;;;;;;;::::0;::::1;1772:15;1750:37;;;;::::0;::::1;1793:11;:9;;;:11;;:::i;:::-;1599:210:::0;;;476:8662;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;1891:397:17:-;2075:20:2;:18;;;:20;;:::i;:::-;1946:315:17::1;;;;;;;;1990:1;1946:315;;;;;;2012:1;1946:315;;;;;;2101:5;1946:315;;;;;;2039:1;1946:315;;;;;;2076:1;1946:315;;;;;;2143:1;1946:315;;;;;;2187:1;1946:315;;;;;;2221:1;1946:315;;;;;;2253:1;1946:315;;;;::::0;1935:8:::1;:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:11;;;;;;;;;;1891:397::o:0;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;88:117:21:-;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:76::-;758:7;787:5;776:16;;722:76;;;:::o;804:120::-;876:23;893:5;876:23;:::i;:::-;869:5;866:34;856:62;;914:1;911;904:12;856:62;804:120;:::o;930:141::-;986:5;1017:6;1011:13;1002:22;;1033:32;1059:5;1033:32;:::i;:::-;930:141;;;;:::o;1077:657::-;1162:6;1170;1178;1227:2;1215:9;1206:7;1202:23;1198:32;1195:119;;;1233:79;;:::i;:::-;1195:119;1353:1;1378:63;1433:7;1424:6;1413:9;1409:22;1378:63;:::i;:::-;1368:73;;1324:127;1490:2;1516:63;1571:7;1562:6;1551:9;1547:22;1516:63;:::i;:::-;1506:73;;1461:128;1628:2;1654:63;1709:7;1700:6;1689:9;1685:22;1654:63;:::i;:::-;1644:73;;1599:128;1077:657;;;;;:::o;1740:169::-;1824:11;1858:6;1853:3;1846:19;1898:4;1893:3;1889:14;1874:29;;1740:169;;;;:::o;1915:174::-;2055:26;2051:1;2043:6;2039:14;2032:50;1915:174;:::o;2095:366::-;2237:3;2258:67;2322:2;2317:3;2258:67;:::i;:::-;2251:74;;2334:93;2423:3;2334:93;:::i;:::-;2452:2;2447:3;2443:12;2436:19;;2095:366;;;:::o;2467:419::-;2633:4;2671:2;2660:9;2656:18;2648:26;;2720:9;2714:4;2710:20;2706:1;2695:9;2691:17;2684:47;2748:131;2874:4;2748:131;:::i;:::-;2740:139;;2467:419;;;:::o;2892:173::-;3032:25;3028:1;3020:6;3016:14;3009:49;2892:173;:::o;3071:366::-;3213:3;3234:67;3298:2;3293:3;3234:67;:::i;:::-;3227:74;;3310:93;3399:3;3310:93;:::i;:::-;3428:2;3423:3;3419:12;3412:19;;3071:366;;;:::o;3443:419::-;3609:4;3647:2;3636:9;3632:18;3624:26;;3696:9;3690:4;3686:20;3682:1;3671:9;3667:17;3660:47;3724:131;3850:4;3724:131;:::i;:::-;3716:139;;3443:419;;;:::o;3868:172::-;4008:24;4004:1;3996:6;3992:14;3985:48;3868:172;:::o;4046:366::-;4188:3;4209:67;4273:2;4268:3;4209:67;:::i;:::-;4202:74;;4285:93;4374:3;4285:93;:::i;:::-;4403:2;4398:3;4394:12;4387:19;;4046:366;;;:::o;4418:419::-;4584:4;4622:2;4611:9;4607:18;4599:26;;4671:9;4665:4;4661:20;4657:1;4646:9;4642:17;4635:47;4699:131;4825:4;4699:131;:::i;:::-;4691:139;;4418:419;;;:::o;476:8662:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@LINK_1070":{"entryPoint":4508,"id":1070,"parameterSlots":0,"returnSlots":0},"@LINK_NATIVE_FEED_1074":{"entryPoint":5673,"id":1074,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_1077":{"entryPoint":5390,"id":1077,"parameterSlots":0,"returnSlots":0},"@_add_424":{"entryPoint":16485,"id":424,"parameterSlots":2,"returnSlots":1},"@_argsToBytes_2682":{"entryPoint":15530,"id":2682,"parameterSlots":1,"returnSlots":1},"@_at_558":{"entryPoint":16614,"id":558,"parameterSlots":2,"returnSlots":1},"@_cancelSubscriptionHelper_2295":{"entryPoint":15708,"id":2295,"parameterSlots":2,"returnSlots":0},"@_contains_527":{"entryPoint":16933,"id":527,"parameterSlots":2,"returnSlots":1},"@_deleteSubscription_2238":{"entryPoint":13949,"id":2238,"parameterSlots":1,"returnSlots":2},"@_fromBytes_4271":{"entryPoint":15282,"id":4271,"parameterSlots":2,"returnSlots":1},"@_length_541":{"entryPoint":16597,"id":541,"parameterSlots":1,"returnSlots":1},"@_mustSendNative_2356":{"entryPoint":15009,"id":2356,"parameterSlots":2,"returnSlots":0},"@_nonReentrant_1285":{"entryPoint":13873,"id":1285,"parameterSlots":0,"returnSlots":0},"@_onlySubOwner_2332":{"entryPoint":13689,"id":2332,"parameterSlots":1,"returnSlots":0},"@_remove_508":{"entryPoint":16657,"id":508,"parameterSlots":2,"returnSlots":1},"@_requireSufficientBalance_1298":{"entryPoint":14951,"id":1298,"parameterSlots":1,"returnSlots":0},"@_requireValidSubscription_1315":{"entryPoint":15177,"id":1315,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":16159,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":14807,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":5711,"id":146,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_2075":{"entryPoint":10360,"id":2075,"parameterSlots":1,"returnSlots":0},"@addConsumer_2140":{"entryPoint":10889,"id":2140,"parameterSlots":2,"returnSlots":0},"@add_875":{"entryPoint":15682,"id":875,"parameterSlots":2,"returnSlots":1},"@at_953":{"entryPoint":16133,"id":953,"parameterSlots":2,"returnSlots":1},"@cancelSubscription_4519":{"entryPoint":3674,"id":4519,"parameterSlots":2,"returnSlots":0},"@consumerIsAdded_3868":{"entryPoint":7167,"id":3868,"parameterSlots":2,"returnSlots":1},"@createSubscription_1972":{"entryPoint":8516,"id":1972,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWordsWithOverride_4103":{"entryPoint":2288,"id":4103,"parameterSlots":3,"returnSlots":0},"@fulfillRandomWords_3909":{"entryPoint":6116,"id":3909,"parameterSlots":2,"returnSlots":0},"@fundSubscriptionWithNative_1746":{"entryPoint":7274,"id":1746,"parameterSlots":1,"returnSlots":0},"@fundSubscription_4229":{"entryPoint":3953,"id":4229,"parameterSlots":2,"returnSlots":0},"@getActiveSubscriptionIds_1879":{"entryPoint":10052,"id":1879,"parameterSlots":2,"returnSlots":1},"@getSubscription_1795":{"entryPoint":12522,"id":1795,"parameterSlots":1,"returnSlots":5},"@i_base_fee_3728":{"entryPoint":4546,"id":3728,"parameterSlots":0,"returnSlots":0},"@i_gas_price_3730":{"entryPoint":12911,"id":3730,"parameterSlots":0,"returnSlots":0},"@i_wei_per_unit_link_3732":{"entryPoint":4442,"id":3732,"parameterSlots":0,"returnSlots":0},"@length_932":{"entryPoint":16112,"id":932,"parameterSlots":1,"returnSlots":1},"@onTokenTransfer_1694":{"entryPoint":9340,"id":1694,"parameterSlots":4,"returnSlots":0},"@ownerCancelSubscription_1385":{"entryPoint":9962,"id":1385,"parameterSlots":1,"returnSlots":0},"@owner_156":{"entryPoint":7126,"id":156,"parameterSlots":0,"returnSlots":1},"@pendingRequestExists_4531":{"entryPoint":4820,"id":4531,"parameterSlots":1,"returnSlots":1},"@recoverFunds_1462":{"entryPoint":12947,"id":1462,"parameterSlots":1,"returnSlots":0},"@recoverNativeFunds_1528":{"entryPoint":6212,"id":1528,"parameterSlots":1,"returnSlots":0},"@removeConsumer_4470":{"entryPoint":11303,"id":4470,"parameterSlots":2,"returnSlots":0},"@remove_896":{"entryPoint":16459,"id":896,"parameterSlots":2,"returnSlots":1},"@requestRandomWords_4363":{"entryPoint":7677,"id":4363,"parameterSlots":1,"returnSlots":1},"@requestSubscriptionOwnerTransfer_2013":{"entryPoint":12262,"id":2013,"parameterSlots":2,"returnSlots":0},"@s_config_1265":{"entryPoint":2095,"id":1265,"parameterSlots":0,"returnSlots":0},"@s_currentSubNonce_1172":{"entryPoint":8490,"id":1172,"parameterSlots":0,"returnSlots":0},"@s_totalBalance_1177":{"entryPoint":6593,"id":1177,"parameterSlots":0,"returnSlots":0},"@s_totalNativeBalance_1179":{"entryPoint":4478,"id":1179,"parameterSlots":0,"returnSlots":0},"@setConfig_3851":{"entryPoint":6623,"id":3851,"parameterSlots":0,"returnSlots":0},"@setLINKAndLINKNativeFeed_1360":{"entryPoint":5395,"id":1360,"parameterSlots":2,"returnSlots":0},"@transferOwnership_110":{"entryPoint":13669,"id":110,"parameterSlots":1,"returnSlots":0},"@withdrawNative_1611":{"entryPoint":4582,"id":1611,"parameterSlots":1,"returnSlots":0},"@withdraw_1578":{"entryPoint":4872,"id":1578,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":17871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":17656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":18542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":17976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":23271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":21033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":19136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_ExtraArgsV1_$2654_memory_ptr":{"entryPoint":23292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_RandomWordsRequest_$2667_calldata_ptr":{"entryPoint":18923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":22193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":17562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":22832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":21476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":18563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18752,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":19222,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":21054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr":{"entryPoint":23352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_RandomWordsRequest_$2667_calldata_ptr":{"entryPoint":18954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":22214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":18608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":22853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":18133,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18022,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":18197,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint32":{"entryPoint":21497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":19621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":19397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_fromStack":{"entryPoint":21242,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":19606,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":18876,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":22486,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":19658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":19434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":23397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":17325,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":22529,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":22276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack":{"entryPoint":18834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack":{"entryPoint":18459,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":18271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":21157,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":22980,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":23508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack":{"entryPoint":23412,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":17267,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":19382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":19027,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":17298,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":19089,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack":{"entryPoint":22583,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":17353,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":20771,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":18337,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed":{"entryPoint":22606,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20716,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":18891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":21257,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":22744,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":22898,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":20969,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":20786,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":19528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":18653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$248__to_t_address__fromStack_reversed":{"entryPoint":18849,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_LinkTokenInterface_$371__to_t_address__fromStack_reversed":{"entryPoint":18474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":18286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr__to_t_struct$_ExtraArgsV1_$2654_memory_ptr__fromStack_reversed":{"entryPoint":23440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":18725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":17368,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":19042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":21298,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":20145,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":19938,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":22333,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":20595,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":19104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":18352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":19752,"id":null,"parameterSlots":6,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":21354,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":17795,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":17509,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":17822,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":19590,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19366,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":21542,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":19562,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19338,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":23047,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":20193,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":19645,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19421,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":19573,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":19349,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":22259,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20204,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":21099,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":23207,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":20447,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":22684,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":20841,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20546,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20381,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20329,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":20905,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":21819,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":17615,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":18501,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":17313,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":22509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":23058,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":18261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":17253,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":17583,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":17529,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":17282,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":19069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17340,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":18313,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":21784,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":23102,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_address_payable_to_t_address":{"entryPoint":21224,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$248_to_t_address":{"entryPoint":18816,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_LinkTokenInterface_$371_to_t_address":{"entryPoint":18441,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":18423,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":18389,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":21674,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":20737,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":21960,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":20215,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":21563,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":19889,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":21932,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":17746,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18379,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":20073,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":22468,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":22519,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":22450,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint64":{"entryPoint":22565,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":21902,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20026,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":20499,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":19842,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":22785,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19979,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17699,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":21708,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":19131,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":17677,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":21344,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":18918,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":23266,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":21339,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":23202,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":23197,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":17866,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":21349,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":17524,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":17519,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":17682,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_192":{"entryPoint":22552,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":22437,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":21579,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":21889,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":21760,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":21116,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":22939,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":20678,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":23467,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":21592,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":21718,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":17633,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":18519,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":21010,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":22170,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":17539,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":21453,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":21755,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47504:21","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:21","statements":[{"nodeType":"YulAssignment","src":"61:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:21"},"nodeType":"YulFunctionCall","src":"72:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:21","type":""}],"src":"7:89:21"},{"body":{"nodeType":"YulBlock","src":"165:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:21"},"nodeType":"YulFunctionCall","src":"187:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:21"},"nodeType":"YulFunctionCall","src":"175:36:21"},"nodeType":"YulExpressionStatement","src":"175:36:21"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:21","type":""}],"src":"102:115:21"},{"body":{"nodeType":"YulBlock","src":"267:49:21","statements":[{"nodeType":"YulAssignment","src":"277:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:21"},"nodeType":"YulFunctionCall","src":"288:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:21","type":""}],"src":"223:93:21"},{"body":{"nodeType":"YulBlock","src":"385:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:21"},"nodeType":"YulFunctionCall","src":"407:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:21"},"nodeType":"YulFunctionCall","src":"395:36:21"},"nodeType":"YulExpressionStatement","src":"395:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:21","type":""}],"src":"322:115:21"},{"body":{"nodeType":"YulBlock","src":"485:48:21","statements":[{"nodeType":"YulAssignment","src":"495:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"520:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"513:6:21"},"nodeType":"YulFunctionCall","src":"513:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"506:6:21"},"nodeType":"YulFunctionCall","src":"506:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"495:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"467:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"477:7:21","type":""}],"src":"443:90:21"},{"body":{"nodeType":"YulBlock","src":"598:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"615:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"635:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"620:14:21"},"nodeType":"YulFunctionCall","src":"620:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"608:6:21"},"nodeType":"YulFunctionCall","src":"608:34:21"},"nodeType":"YulExpressionStatement","src":"608:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"586:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"593:3:21","type":""}],"src":"539:109:21"},{"body":{"nodeType":"YulBlock","src":"697:43:21","statements":[{"nodeType":"YulAssignment","src":"707:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"722:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"729:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"718:3:21"},"nodeType":"YulFunctionCall","src":"718:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"707:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"679:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"689:7:21","type":""}],"src":"654:86:21"},{"body":{"nodeType":"YulBlock","src":"807:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"824:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"845:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"829:15:21"},"nodeType":"YulFunctionCall","src":"829:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"817:6:21"},"nodeType":"YulFunctionCall","src":"817:35:21"},"nodeType":"YulExpressionStatement","src":"817:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"795:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"802:3:21","type":""}],"src":"746:112:21"},{"body":{"nodeType":"YulBlock","src":"1160:760:21","statements":[{"nodeType":"YulAssignment","src":"1170:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1182:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1193:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1178:3:21"},"nodeType":"YulFunctionCall","src":"1178:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1170:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1249:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1262:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1273:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1258:3:21"},"nodeType":"YulFunctionCall","src":"1258:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"1207:41:21"},"nodeType":"YulFunctionCall","src":"1207:69:21"},"nodeType":"YulExpressionStatement","src":"1207:69:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1328:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1341:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1352:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1337:3:21"},"nodeType":"YulFunctionCall","src":"1337:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1286:41:21"},"nodeType":"YulFunctionCall","src":"1286:70:21"},"nodeType":"YulExpressionStatement","src":"1286:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1404:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1428:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1413:3:21"},"nodeType":"YulFunctionCall","src":"1413:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1366:37:21"},"nodeType":"YulFunctionCall","src":"1366:66:21"},"nodeType":"YulExpressionStatement","src":"1366:66:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1484:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1497:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1508:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1493:3:21"},"nodeType":"YulFunctionCall","src":"1493:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1442:41:21"},"nodeType":"YulFunctionCall","src":"1442:70:21"},"nodeType":"YulExpressionStatement","src":"1442:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1564:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1577:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1588:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:21"},"nodeType":"YulFunctionCall","src":"1573:19:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1522:41:21"},"nodeType":"YulFunctionCall","src":"1522:71:21"},"nodeType":"YulExpressionStatement","src":"1522:71:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1645:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1658:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1669:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:21"},"nodeType":"YulFunctionCall","src":"1654:19:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1603:41:21"},"nodeType":"YulFunctionCall","src":"1603:71:21"},"nodeType":"YulExpressionStatement","src":"1603:71:21"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"1726:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1739:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1750:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1735:3:21"},"nodeType":"YulFunctionCall","src":"1735:19:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1684:41:21"},"nodeType":"YulFunctionCall","src":"1684:71:21"},"nodeType":"YulExpressionStatement","src":"1684:71:21"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"1805:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1818:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1829:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1814:3:21"},"nodeType":"YulFunctionCall","src":"1814:19:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1765:39:21"},"nodeType":"YulFunctionCall","src":"1765:69:21"},"nodeType":"YulExpressionStatement","src":"1765:69:21"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"1884:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1897:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1908:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1893:3:21"},"nodeType":"YulFunctionCall","src":"1893:19:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1844:39:21"},"nodeType":"YulFunctionCall","src":"1844:69:21"},"nodeType":"YulExpressionStatement","src":"1844:69:21"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1080:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1088:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1096:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1104:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1112:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1120:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1128:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1136:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1144:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1155:4:21","type":""}],"src":"864:1056:21"},{"body":{"nodeType":"YulBlock","src":"1966:35:21","statements":[{"nodeType":"YulAssignment","src":"1976:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1992:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1986:5:21"},"nodeType":"YulFunctionCall","src":"1986:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1976:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1959:6:21","type":""}],"src":"1926:75:21"},{"body":{"nodeType":"YulBlock","src":"2096:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2113:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2116:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2106:6:21"},"nodeType":"YulFunctionCall","src":"2106:12:21"},"nodeType":"YulExpressionStatement","src":"2106:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2007:117:21"},{"body":{"nodeType":"YulBlock","src":"2219:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2236:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2239:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2229:6:21"},"nodeType":"YulFunctionCall","src":"2229:12:21"},"nodeType":"YulExpressionStatement","src":"2229:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2130:117:21"},{"body":{"nodeType":"YulBlock","src":"2298:32:21","statements":[{"nodeType":"YulAssignment","src":"2308:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2319:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2308:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2280:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2290:7:21","type":""}],"src":"2253:77:21"},{"body":{"nodeType":"YulBlock","src":"2379:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2436:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2445:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2448:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2438:6:21"},"nodeType":"YulFunctionCall","src":"2438:12:21"},"nodeType":"YulExpressionStatement","src":"2438:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2402:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2427:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2409:17:21"},"nodeType":"YulFunctionCall","src":"2409:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2399:2:21"},"nodeType":"YulFunctionCall","src":"2399:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2392:6:21"},"nodeType":"YulFunctionCall","src":"2392:43:21"},"nodeType":"YulIf","src":"2389:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2372:5:21","type":""}],"src":"2336:122:21"},{"body":{"nodeType":"YulBlock","src":"2516:87:21","statements":[{"nodeType":"YulAssignment","src":"2526:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2548:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2535:12:21"},"nodeType":"YulFunctionCall","src":"2535:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2526:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2591:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2564:26:21"},"nodeType":"YulFunctionCall","src":"2564:33:21"},"nodeType":"YulExpressionStatement","src":"2564:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2494:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2502:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2510:5:21","type":""}],"src":"2464:139:21"},{"body":{"nodeType":"YulBlock","src":"2654:81:21","statements":[{"nodeType":"YulAssignment","src":"2664:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2679:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2686:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2675:3:21"},"nodeType":"YulFunctionCall","src":"2675:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2664:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2636:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2646:7:21","type":""}],"src":"2609:126:21"},{"body":{"nodeType":"YulBlock","src":"2786:51:21","statements":[{"nodeType":"YulAssignment","src":"2796:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2825:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2807:17:21"},"nodeType":"YulFunctionCall","src":"2807:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2796:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2768:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2778:7:21","type":""}],"src":"2741:96:21"},{"body":{"nodeType":"YulBlock","src":"2886:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2943:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2952:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2945:6:21"},"nodeType":"YulFunctionCall","src":"2945:12:21"},"nodeType":"YulExpressionStatement","src":"2945:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2909:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2934:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2916:17:21"},"nodeType":"YulFunctionCall","src":"2916:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2906:2:21"},"nodeType":"YulFunctionCall","src":"2906:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2899:6:21"},"nodeType":"YulFunctionCall","src":"2899:43:21"},"nodeType":"YulIf","src":"2896:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2879:5:21","type":""}],"src":"2843:122:21"},{"body":{"nodeType":"YulBlock","src":"3023:87:21","statements":[{"nodeType":"YulAssignment","src":"3033:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3055:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3042:12:21"},"nodeType":"YulFunctionCall","src":"3042:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3033:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3098:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3071:26:21"},"nodeType":"YulFunctionCall","src":"3071:33:21"},"nodeType":"YulExpressionStatement","src":"3071:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3001:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3009:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3017:5:21","type":""}],"src":"2971:139:21"},{"body":{"nodeType":"YulBlock","src":"3205:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3222:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3225:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3215:6:21"},"nodeType":"YulFunctionCall","src":"3215:12:21"},"nodeType":"YulExpressionStatement","src":"3215:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3116:117:21"},{"body":{"nodeType":"YulBlock","src":"3287:54:21","statements":[{"nodeType":"YulAssignment","src":"3297:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3315:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3322:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3311:3:21"},"nodeType":"YulFunctionCall","src":"3311:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3331:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3327:3:21"},"nodeType":"YulFunctionCall","src":"3327:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3307:3:21"},"nodeType":"YulFunctionCall","src":"3307:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3297:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3270:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3280:6:21","type":""}],"src":"3239:102:21"},{"body":{"nodeType":"YulBlock","src":"3375:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3392:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3395:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3385:6:21"},"nodeType":"YulFunctionCall","src":"3385:88:21"},"nodeType":"YulExpressionStatement","src":"3385:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3489:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3492:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3482:6:21"},"nodeType":"YulFunctionCall","src":"3482:15:21"},"nodeType":"YulExpressionStatement","src":"3482:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3513:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3516:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3506:6:21"},"nodeType":"YulFunctionCall","src":"3506:15:21"},"nodeType":"YulExpressionStatement","src":"3506:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3347:180:21"},{"body":{"nodeType":"YulBlock","src":"3576:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3608:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3638:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3616:21:21"},"nodeType":"YulFunctionCall","src":"3616:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:21"},"nodeType":"YulFunctionCall","src":"3604:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3590:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3755:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3757:16:21"},"nodeType":"YulFunctionCall","src":"3757:18:21"},"nodeType":"YulExpressionStatement","src":"3757:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3698:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3710:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3695:2:21"},"nodeType":"YulFunctionCall","src":"3695:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3734:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3746:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3731:2:21"},"nodeType":"YulFunctionCall","src":"3731:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3692:2:21"},"nodeType":"YulFunctionCall","src":"3692:62:21"},"nodeType":"YulIf","src":"3689:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3793:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3797:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3786:6:21"},"nodeType":"YulFunctionCall","src":"3786:22:21"},"nodeType":"YulExpressionStatement","src":"3786:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3562:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"3570:4:21","type":""}],"src":"3533:281:21"},{"body":{"nodeType":"YulBlock","src":"3861:88:21","statements":[{"nodeType":"YulAssignment","src":"3871:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3881:18:21"},"nodeType":"YulFunctionCall","src":"3881:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3871:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3930:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"3938:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3910:19:21"},"nodeType":"YulFunctionCall","src":"3910:33:21"},"nodeType":"YulExpressionStatement","src":"3910:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3845:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3854:6:21","type":""}],"src":"3820:129:21"},{"body":{"nodeType":"YulBlock","src":"4037:229:21","statements":[{"body":{"nodeType":"YulBlock","src":"4142:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4144:16:21"},"nodeType":"YulFunctionCall","src":"4144:18:21"},"nodeType":"YulExpressionStatement","src":"4144:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4114:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4122:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4111:2:21"},"nodeType":"YulFunctionCall","src":"4111:30:21"},"nodeType":"YulIf","src":"4108:56:21"},{"nodeType":"YulAssignment","src":"4174:25:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4186:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4194:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4182:3:21"},"nodeType":"YulFunctionCall","src":"4182:17:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4174:4:21"}]},{"nodeType":"YulAssignment","src":"4236:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4248:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"4254:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4244:3:21"},"nodeType":"YulFunctionCall","src":"4244:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4236:4:21"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4021:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4032:4:21","type":""}],"src":"3955:311:21"},{"body":{"nodeType":"YulBlock","src":"4361:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4378:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4381:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4371:6:21"},"nodeType":"YulFunctionCall","src":"4371:12:21"},"nodeType":"YulExpressionStatement","src":"4371:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4272:117:21"},{"body":{"nodeType":"YulBlock","src":"4514:608:21","statements":[{"nodeType":"YulAssignment","src":"4524:90:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4606:6:21"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4549:56:21"},"nodeType":"YulFunctionCall","src":"4549:64:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4533:15:21"},"nodeType":"YulFunctionCall","src":"4533:81:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4524:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"4623:16:21","value":{"name":"array","nodeType":"YulIdentifier","src":"4634:5:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4627:3:21","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4656:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"4663:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4649:6:21"},"nodeType":"YulFunctionCall","src":"4649:21:21"},"nodeType":"YulExpressionStatement","src":"4649:21:21"},{"nodeType":"YulAssignment","src":"4679:23:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4690:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4697:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4686:3:21"},"nodeType":"YulFunctionCall","src":"4686:16:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4679:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"4712:44:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4730:6:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4742:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4750:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4738:3:21"},"nodeType":"YulFunctionCall","src":"4738:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4726:3:21"},"nodeType":"YulFunctionCall","src":"4726:30:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4716:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4784:103:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4798:77:21"},"nodeType":"YulFunctionCall","src":"4798:79:21"},"nodeType":"YulExpressionStatement","src":"4798:79:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4771:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"4779:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4768:2:21"},"nodeType":"YulFunctionCall","src":"4768:15:21"},"nodeType":"YulIf","src":"4765:122:21"},{"body":{"nodeType":"YulBlock","src":"4972:144:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4987:21:21","value":{"name":"src","nodeType":"YulIdentifier","src":"5005:3:21"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4991:10:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5029:3:21"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5055:10:21"},{"name":"end","nodeType":"YulIdentifier","src":"5067:3:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5034:20:21"},"nodeType":"YulFunctionCall","src":"5034:37:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5022:6:21"},"nodeType":"YulFunctionCall","src":"5022:50:21"},"nodeType":"YulExpressionStatement","src":"5022:50:21"},{"nodeType":"YulAssignment","src":"5085:21:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5096:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:21"},"nodeType":"YulFunctionCall","src":"5092:14:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5085:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4925:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4930:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4922:2:21"},"nodeType":"YulFunctionCall","src":"4922:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4938:25:21","statements":[{"nodeType":"YulAssignment","src":"4940:21:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4951:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4956:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4947:3:21"},"nodeType":"YulFunctionCall","src":"4947:14:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4940:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4900:21:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4902:17:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"4913:6:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4906:3:21","type":""}]}]},"src":"4896:220:21"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4484:6:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4492:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4500:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4508:5:21","type":""}],"src":"4412:710:21"},{"body":{"nodeType":"YulBlock","src":"5222:293:21","statements":[{"body":{"nodeType":"YulBlock","src":"5271:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5273:77:21"},"nodeType":"YulFunctionCall","src":"5273:79:21"},"nodeType":"YulExpressionStatement","src":"5273:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5250:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5258:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5246:3:21"},"nodeType":"YulFunctionCall","src":"5246:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"5265:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5242:3:21"},"nodeType":"YulFunctionCall","src":"5242:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5235:6:21"},"nodeType":"YulFunctionCall","src":"5235:35:21"},"nodeType":"YulIf","src":"5232:122:21"},{"nodeType":"YulVariableDeclaration","src":"5363:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5390:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5377:12:21"},"nodeType":"YulFunctionCall","src":"5377:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5367:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5406:103:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5482:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5490:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5478:3:21"},"nodeType":"YulFunctionCall","src":"5478:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"5497:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"5505:3:21"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5415:62:21"},"nodeType":"YulFunctionCall","src":"5415:94:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5406:5:21"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5200:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5208:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5216:5:21","type":""}],"src":"5145:370:21"},{"body":{"nodeType":"YulBlock","src":"5646:704:21","statements":[{"body":{"nodeType":"YulBlock","src":"5692:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5694:77:21"},"nodeType":"YulFunctionCall","src":"5694:79:21"},"nodeType":"YulExpressionStatement","src":"5694:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5667:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5676:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5663:3:21"},"nodeType":"YulFunctionCall","src":"5663:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5688:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5659:3:21"},"nodeType":"YulFunctionCall","src":"5659:32:21"},"nodeType":"YulIf","src":"5656:119:21"},{"nodeType":"YulBlock","src":"5785:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5800:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5814:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5804:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5829:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5864:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5875:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5860:3:21"},"nodeType":"YulFunctionCall","src":"5860:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5884:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5839:20:21"},"nodeType":"YulFunctionCall","src":"5839:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5829:6:21"}]}]},{"nodeType":"YulBlock","src":"5912:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5927:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5941:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5931:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5957:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5992:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6003:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5988:3:21"},"nodeType":"YulFunctionCall","src":"5988:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6012:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5967:20:21"},"nodeType":"YulFunctionCall","src":"5967:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5957:6:21"}]}]},{"nodeType":"YulBlock","src":"6040:303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6055:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6086:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6097:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6082:3:21"},"nodeType":"YulFunctionCall","src":"6082:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6069:12:21"},"nodeType":"YulFunctionCall","src":"6069:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6059:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6148:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6150:77:21"},"nodeType":"YulFunctionCall","src":"6150:79:21"},"nodeType":"YulExpressionStatement","src":"6150:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6120:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6128:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6117:2:21"},"nodeType":"YulFunctionCall","src":"6117:30:21"},"nodeType":"YulIf","src":"6114:117:21"},{"nodeType":"YulAssignment","src":"6245:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6305:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6316:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:21"},"nodeType":"YulFunctionCall","src":"6301:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6325:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6255:45:21"},"nodeType":"YulFunctionCall","src":"6255:78:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6245:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5600:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5611:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5623:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5631:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5639:6:21","type":""}],"src":"5521:829:21"},{"body":{"nodeType":"YulBlock","src":"6439:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"6485:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6487:77:21"},"nodeType":"YulFunctionCall","src":"6487:79:21"},"nodeType":"YulExpressionStatement","src":"6487:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6460:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6469:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6456:3:21"},"nodeType":"YulFunctionCall","src":"6456:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6481:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6452:3:21"},"nodeType":"YulFunctionCall","src":"6452:32:21"},"nodeType":"YulIf","src":"6449:119:21"},{"nodeType":"YulBlock","src":"6578:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6593:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6607:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6597:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6622:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6657:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6668:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6653:3:21"},"nodeType":"YulFunctionCall","src":"6653:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6677:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6632:20:21"},"nodeType":"YulFunctionCall","src":"6632:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6622:6:21"}]}]},{"nodeType":"YulBlock","src":"6705:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6720:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6734:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6724:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6750:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6785:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6781:3:21"},"nodeType":"YulFunctionCall","src":"6781:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6805:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6760:20:21"},"nodeType":"YulFunctionCall","src":"6760:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6750:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6401:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6412:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6424:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6432:6:21","type":""}],"src":"6356:474:21"},{"body":{"nodeType":"YulBlock","src":"6919:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"6965:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6967:77:21"},"nodeType":"YulFunctionCall","src":"6967:79:21"},"nodeType":"YulExpressionStatement","src":"6967:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6940:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6949:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6936:3:21"},"nodeType":"YulFunctionCall","src":"6936:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6961:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6932:3:21"},"nodeType":"YulFunctionCall","src":"6932:32:21"},"nodeType":"YulIf","src":"6929:119:21"},{"nodeType":"YulBlock","src":"7058:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7073:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7087:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7077:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7102:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7137:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7133:3:21"},"nodeType":"YulFunctionCall","src":"7133:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7157:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7112:20:21"},"nodeType":"YulFunctionCall","src":"7112:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7102:6:21"}]}]},{"nodeType":"YulBlock","src":"7185:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7200:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7214:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7204:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7230:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7265:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7276:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:21"},"nodeType":"YulFunctionCall","src":"7261:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7285:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7240:20:21"},"nodeType":"YulFunctionCall","src":"7240:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7230:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6881:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6892:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6904:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6912:6:21","type":""}],"src":"6836:474:21"},{"body":{"nodeType":"YulBlock","src":"7360:32:21","statements":[{"nodeType":"YulAssignment","src":"7370:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"7381:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7370:7:21"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7342:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7352:7:21","type":""}],"src":"7316:76:21"},{"body":{"nodeType":"YulBlock","src":"7461:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7478:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7500:5:21"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"7483:16:21"},"nodeType":"YulFunctionCall","src":"7483:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7471:6:21"},"nodeType":"YulFunctionCall","src":"7471:36:21"},"nodeType":"YulExpressionStatement","src":"7471:36:21"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7449:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7456:3:21","type":""}],"src":"7398:115:21"},{"body":{"nodeType":"YulBlock","src":"7615:122:21","statements":[{"nodeType":"YulAssignment","src":"7625:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7648:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7633:3:21"},"nodeType":"YulFunctionCall","src":"7633:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7625:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7703:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7716:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7727:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7712:3:21"},"nodeType":"YulFunctionCall","src":"7712:17:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"7661:41:21"},"nodeType":"YulFunctionCall","src":"7661:69:21"},"nodeType":"YulExpressionStatement","src":"7661:69:21"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7587:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7599:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7610:4:21","type":""}],"src":"7519:218:21"},{"body":{"nodeType":"YulBlock","src":"7787:65:21","statements":[{"nodeType":"YulAssignment","src":"7797:49:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7812:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7819:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7808:3:21"},"nodeType":"YulFunctionCall","src":"7808:38:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7797:7:21"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7769:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7779:7:21","type":""}],"src":"7743:109:21"},{"body":{"nodeType":"YulBlock","src":"7921:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7938:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7960:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"7943:16:21"},"nodeType":"YulFunctionCall","src":"7943:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7931:6:21"},"nodeType":"YulFunctionCall","src":"7931:36:21"},"nodeType":"YulExpressionStatement","src":"7931:36:21"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7909:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7916:3:21","type":""}],"src":"7858:115:21"},{"body":{"nodeType":"YulBlock","src":"8075:122:21","statements":[{"nodeType":"YulAssignment","src":"8085:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8097:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8108:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:21"},"nodeType":"YulFunctionCall","src":"8093:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8085:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8163:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8176:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8187:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8172:3:21"},"nodeType":"YulFunctionCall","src":"8172:17:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"8121:41:21"},"nodeType":"YulFunctionCall","src":"8121:69:21"},"nodeType":"YulExpressionStatement","src":"8121:69:21"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8047:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8059:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8070:4:21","type":""}],"src":"7979:218:21"},{"body":{"nodeType":"YulBlock","src":"8235:28:21","statements":[{"nodeType":"YulAssignment","src":"8245:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"8252:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8245:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8221:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8231:3:21","type":""}],"src":"8203:60:21"},{"body":{"nodeType":"YulBlock","src":"8329:82:21","statements":[{"nodeType":"YulAssignment","src":"8339:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8397:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8379:17:21"},"nodeType":"YulFunctionCall","src":"8379:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"8370:8:21"},"nodeType":"YulFunctionCall","src":"8370:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8352:17:21"},"nodeType":"YulFunctionCall","src":"8352:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8339:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8309:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8319:9:21","type":""}],"src":"8269:142:21"},{"body":{"nodeType":"YulBlock","src":"8477:66:21","statements":[{"nodeType":"YulAssignment","src":"8487:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8531:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"8500:30:21"},"nodeType":"YulFunctionCall","src":"8500:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8487:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8457:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8467:9:21","type":""}],"src":"8417:126:21"},{"body":{"nodeType":"YulBlock","src":"8635:66:21","statements":[{"nodeType":"YulAssignment","src":"8645:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8689:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"8658:30:21"},"nodeType":"YulFunctionCall","src":"8658:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8645:9:21"}]}]},"name":"convert_t_contract$_LinkTokenInterface_$371_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8615:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8625:9:21","type":""}],"src":"8549:152:21"},{"body":{"nodeType":"YulBlock","src":"8798:92:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8815:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8877:5:21"}],"functionName":{"name":"convert_t_contract$_LinkTokenInterface_$371_to_t_address","nodeType":"YulIdentifier","src":"8820:56:21"},"nodeType":"YulFunctionCall","src":"8820:63:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8808:6:21"},"nodeType":"YulFunctionCall","src":"8808:76:21"},"nodeType":"YulExpressionStatement","src":"8808:76:21"}]},"name":"abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8786:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8793:3:21","type":""}],"src":"8707:183:21"},{"body":{"nodeType":"YulBlock","src":"9020:150:21","statements":[{"nodeType":"YulAssignment","src":"9030:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9042:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9053:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:21"},"nodeType":"YulFunctionCall","src":"9038:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9030:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9136:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9149:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9160:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9145:3:21"},"nodeType":"YulFunctionCall","src":"9145:17:21"}],"functionName":{"name":"abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9066:69:21"},"nodeType":"YulFunctionCall","src":"9066:97:21"},"nodeType":"YulExpressionStatement","src":"9066:97:21"}]},"name":"abi_encode_tuple_t_contract$_LinkTokenInterface_$371__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8992:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9004:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9015:4:21","type":""}],"src":"8896:274:21"},{"body":{"nodeType":"YulBlock","src":"9229:51:21","statements":[{"nodeType":"YulAssignment","src":"9239:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9268:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9250:17:21"},"nodeType":"YulFunctionCall","src":"9250:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9239:7:21"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9211:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9221:7:21","type":""}],"src":"9176:104:21"},{"body":{"nodeType":"YulBlock","src":"9337:87:21","statements":[{"body":{"nodeType":"YulBlock","src":"9402:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9411:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9414:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9404:6:21"},"nodeType":"YulFunctionCall","src":"9404:12:21"},"nodeType":"YulExpressionStatement","src":"9404:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9360:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9393:5:21"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"9367:25:21"},"nodeType":"YulFunctionCall","src":"9367:32:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9357:2:21"},"nodeType":"YulFunctionCall","src":"9357:43:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9350:6:21"},"nodeType":"YulFunctionCall","src":"9350:51:21"},"nodeType":"YulIf","src":"9347:71:21"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9330:5:21","type":""}],"src":"9286:138:21"},{"body":{"nodeType":"YulBlock","src":"9490:95:21","statements":[{"nodeType":"YulAssignment","src":"9500:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9522:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9509:12:21"},"nodeType":"YulFunctionCall","src":"9509:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9500:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:21"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"9538:34:21"},"nodeType":"YulFunctionCall","src":"9538:41:21"},"nodeType":"YulExpressionStatement","src":"9538:41:21"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9468:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9476:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9484:5:21","type":""}],"src":"9430:155:21"},{"body":{"nodeType":"YulBlock","src":"9665:271:21","statements":[{"body":{"nodeType":"YulBlock","src":"9711:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9713:77:21"},"nodeType":"YulFunctionCall","src":"9713:79:21"},"nodeType":"YulExpressionStatement","src":"9713:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9686:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9695:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9682:3:21"},"nodeType":"YulFunctionCall","src":"9682:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9707:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9678:3:21"},"nodeType":"YulFunctionCall","src":"9678:32:21"},"nodeType":"YulIf","src":"9675:119:21"},{"nodeType":"YulBlock","src":"9804:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9819:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9833:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9823:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9848:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9891:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9902:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9887:3:21"},"nodeType":"YulFunctionCall","src":"9887:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9911:7:21"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"9858:28:21"},"nodeType":"YulFunctionCall","src":"9858:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9848:6:21"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9635:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9646:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9658:6:21","type":""}],"src":"9591:345:21"},{"body":{"nodeType":"YulBlock","src":"10008:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"10054:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10056:77:21"},"nodeType":"YulFunctionCall","src":"10056:79:21"},"nodeType":"YulExpressionStatement","src":"10056:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10029:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10038:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10025:3:21"},"nodeType":"YulFunctionCall","src":"10025:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10050:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10021:3:21"},"nodeType":"YulFunctionCall","src":"10021:32:21"},"nodeType":"YulIf","src":"10018:119:21"},{"nodeType":"YulBlock","src":"10147:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10162:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10176:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10166:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10191:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10226:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10237:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10222:3:21"},"nodeType":"YulFunctionCall","src":"10222:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10246:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10201:20:21"},"nodeType":"YulFunctionCall","src":"10201:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10191:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9978:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9989:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10001:6:21","type":""}],"src":"9942:329:21"},{"body":{"nodeType":"YulBlock","src":"10369:118:21","statements":[{"nodeType":"YulAssignment","src":"10379:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10402:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10387:3:21"},"nodeType":"YulFunctionCall","src":"10387:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10379:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10453:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10466:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10477:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10462:3:21"},"nodeType":"YulFunctionCall","src":"10462:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"10415:37:21"},"nodeType":"YulFunctionCall","src":"10415:65:21"},"nodeType":"YulExpressionStatement","src":"10415:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10341:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10353:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10364:4:21","type":""}],"src":"10277:210:21"},{"body":{"nodeType":"YulBlock","src":"10559:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"10605:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10607:77:21"},"nodeType":"YulFunctionCall","src":"10607:79:21"},"nodeType":"YulExpressionStatement","src":"10607:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10580:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10589:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10576:3:21"},"nodeType":"YulFunctionCall","src":"10576:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10601:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10572:3:21"},"nodeType":"YulFunctionCall","src":"10572:32:21"},"nodeType":"YulIf","src":"10569:119:21"},{"nodeType":"YulBlock","src":"10698:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10713:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10727:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10717:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10742:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10777:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10788:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10773:3:21"},"nodeType":"YulFunctionCall","src":"10773:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10797:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10752:20:21"},"nodeType":"YulFunctionCall","src":"10752:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10742:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10529:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10540:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10552:6:21","type":""}],"src":"10493:329:21"},{"body":{"nodeType":"YulBlock","src":"10924:122:21","statements":[{"nodeType":"YulAssignment","src":"10934:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10946:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10957:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10942:3:21"},"nodeType":"YulFunctionCall","src":"10942:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10934:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11012:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11025:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11036:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11021:3:21"},"nodeType":"YulFunctionCall","src":"11021:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"10970:41:21"},"nodeType":"YulFunctionCall","src":"10970:69:21"},"nodeType":"YulExpressionStatement","src":"10970:69:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10896:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10908:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10919:4:21","type":""}],"src":"10828:218:21"},{"body":{"nodeType":"YulBlock","src":"11135:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"11181:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11183:77:21"},"nodeType":"YulFunctionCall","src":"11183:79:21"},"nodeType":"YulExpressionStatement","src":"11183:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11156:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11165:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11152:3:21"},"nodeType":"YulFunctionCall","src":"11152:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11177:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11148:3:21"},"nodeType":"YulFunctionCall","src":"11148:32:21"},"nodeType":"YulIf","src":"11145:119:21"},{"nodeType":"YulBlock","src":"11274:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11289:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11303:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11293:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11318:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11353:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11364:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11349:3:21"},"nodeType":"YulFunctionCall","src":"11349:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11373:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11328:20:21"},"nodeType":"YulFunctionCall","src":"11328:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11318:6:21"}]}]},{"nodeType":"YulBlock","src":"11401:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11416:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11430:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11420:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11446:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11481:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11492:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11477:3:21"},"nodeType":"YulFunctionCall","src":"11477:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11501:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11456:20:21"},"nodeType":"YulFunctionCall","src":"11456:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11446:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11097:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11108:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11120:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11128:6:21","type":""}],"src":"11052:474:21"},{"body":{"nodeType":"YulBlock","src":"11621:66:21","statements":[{"nodeType":"YulAssignment","src":"11631:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11675:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11644:30:21"},"nodeType":"YulFunctionCall","src":"11644:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11631:9:21"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$248_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11601:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11611:9:21","type":""}],"src":"11532:155:21"},{"body":{"nodeType":"YulBlock","src":"11787:95:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11804:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11869:5:21"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$248_to_t_address","nodeType":"YulIdentifier","src":"11809:59:21"},"nodeType":"YulFunctionCall","src":"11809:66:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11797:6:21"},"nodeType":"YulFunctionCall","src":"11797:79:21"},"nodeType":"YulExpressionStatement","src":"11797:79:21"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11775:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11782:3:21","type":""}],"src":"11693:189:21"},{"body":{"nodeType":"YulBlock","src":"12015:153:21","statements":[{"nodeType":"YulAssignment","src":"12025:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12037:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12048:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12033:3:21"},"nodeType":"YulFunctionCall","src":"12033:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12025:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12134:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12147:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12158:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12143:3:21"},"nodeType":"YulFunctionCall","src":"12143:17:21"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12061:72:21"},"nodeType":"YulFunctionCall","src":"12061:100:21"},"nodeType":"YulExpressionStatement","src":"12061:100:21"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$248__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11987:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11999:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12010:4:21","type":""}],"src":"11888:280:21"},{"body":{"nodeType":"YulBlock","src":"12239:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12256:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12279:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12261:17:21"},"nodeType":"YulFunctionCall","src":"12261:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12249:6:21"},"nodeType":"YulFunctionCall","src":"12249:37:21"},"nodeType":"YulExpressionStatement","src":"12249:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12227:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12234:3:21","type":""}],"src":"12174:118:21"},{"body":{"nodeType":"YulBlock","src":"12396:124:21","statements":[{"nodeType":"YulAssignment","src":"12406:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12418:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12429:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12414:3:21"},"nodeType":"YulFunctionCall","src":"12414:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12406:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12486:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12499:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12510:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12495:3:21"},"nodeType":"YulFunctionCall","src":"12495:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12442:43:21"},"nodeType":"YulFunctionCall","src":"12442:71:21"},"nodeType":"YulExpressionStatement","src":"12442:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12368:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12380:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12391:4:21","type":""}],"src":"12298:222:21"},{"body":{"nodeType":"YulBlock","src":"12615:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12632:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12635:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12625:6:21"},"nodeType":"YulFunctionCall","src":"12625:12:21"},"nodeType":"YulExpressionStatement","src":"12625:12:21"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"12526:117:21"},{"body":{"nodeType":"YulBlock","src":"12788:153:21","statements":[{"body":{"nodeType":"YulBlock","src":"12828:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"12830:77:21"},"nodeType":"YulFunctionCall","src":"12830:79:21"},"nodeType":"YulExpressionStatement","src":"12830:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"12809:3:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12814:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12805:3:21"},"nodeType":"YulFunctionCall","src":"12805:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"12823:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12801:3:21"},"nodeType":"YulFunctionCall","src":"12801:26:21"},"nodeType":"YulIf","src":"12798:113:21"},{"nodeType":"YulAssignment","src":"12920:15:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"12929:6:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12920:5:21"}]}]},"name":"abi_decode_t_struct$_RandomWordsRequest_$2667_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12766:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"12774:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12782:5:21","type":""}],"src":"12698:243:21"},{"body":{"nodeType":"YulBlock","src":"13051:461:21","statements":[{"body":{"nodeType":"YulBlock","src":"13097:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13099:77:21"},"nodeType":"YulFunctionCall","src":"13099:79:21"},"nodeType":"YulExpressionStatement","src":"13099:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13072:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13081:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13068:3:21"},"nodeType":"YulFunctionCall","src":"13068:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13093:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13064:3:21"},"nodeType":"YulFunctionCall","src":"13064:32:21"},"nodeType":"YulIf","src":"13061:119:21"},{"nodeType":"YulBlock","src":"13190:315:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13205:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13236:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13247:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:21"},"nodeType":"YulFunctionCall","src":"13232:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13219:12:21"},"nodeType":"YulFunctionCall","src":"13219:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13209:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"13297:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13299:77:21"},"nodeType":"YulFunctionCall","src":"13299:79:21"},"nodeType":"YulExpressionStatement","src":"13299:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13269:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13277:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13266:2:21"},"nodeType":"YulFunctionCall","src":"13266:30:21"},"nodeType":"YulIf","src":"13263:117:21"},{"nodeType":"YulAssignment","src":"13394:101:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13467:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13478:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13463:3:21"},"nodeType":"YulFunctionCall","src":"13463:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13487:7:21"}],"functionName":{"name":"abi_decode_t_struct$_RandomWordsRequest_$2667_calldata_ptr","nodeType":"YulIdentifier","src":"13404:58:21"},"nodeType":"YulFunctionCall","src":"13404:91:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13394:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_RandomWordsRequest_$2667_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13021:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13032:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13044:6:21","type":""}],"src":"12947:565:21"},{"body":{"nodeType":"YulBlock","src":"13583:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13600:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13623:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13605:17:21"},"nodeType":"YulFunctionCall","src":"13605:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13593:6:21"},"nodeType":"YulFunctionCall","src":"13593:37:21"},"nodeType":"YulExpressionStatement","src":"13593:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13571:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13578:3:21","type":""}],"src":"13518:118:21"},{"body":{"nodeType":"YulBlock","src":"13740:124:21","statements":[{"nodeType":"YulAssignment","src":"13750:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13762:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13773:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13758:3:21"},"nodeType":"YulFunctionCall","src":"13758:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13750:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13830:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13843:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13854:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13839:3:21"},"nodeType":"YulFunctionCall","src":"13839:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13786:43:21"},"nodeType":"YulFunctionCall","src":"13786:71:21"},"nodeType":"YulExpressionStatement","src":"13786:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13712:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13724:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13735:4:21","type":""}],"src":"13642:222:21"},{"body":{"nodeType":"YulBlock","src":"13914:57:21","statements":[{"nodeType":"YulAssignment","src":"13924:41:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13939:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13946:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13935:3:21"},"nodeType":"YulFunctionCall","src":"13935:30:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13924:7:21"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13896:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13906:7:21","type":""}],"src":"13870:101:21"},{"body":{"nodeType":"YulBlock","src":"14040:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14057:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14079:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"14062:16:21"},"nodeType":"YulFunctionCall","src":"14062:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14050:6:21"},"nodeType":"YulFunctionCall","src":"14050:36:21"},"nodeType":"YulExpressionStatement","src":"14050:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14028:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14035:3:21","type":""}],"src":"13977:115:21"},{"body":{"nodeType":"YulBlock","src":"14194:122:21","statements":[{"nodeType":"YulAssignment","src":"14204:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14216:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14227:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14212:3:21"},"nodeType":"YulFunctionCall","src":"14212:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14204:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14282:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14295:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14306:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14291:3:21"},"nodeType":"YulFunctionCall","src":"14291:17:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"14240:41:21"},"nodeType":"YulFunctionCall","src":"14240:69:21"},"nodeType":"YulExpressionStatement","src":"14240:69:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14166:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14178:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14189:4:21","type":""}],"src":"14098:218:21"},{"body":{"nodeType":"YulBlock","src":"14411:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14428:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14431:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14421:6:21"},"nodeType":"YulFunctionCall","src":"14421:12:21"},"nodeType":"YulExpressionStatement","src":"14421:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"14322:117:21"},{"body":{"nodeType":"YulBlock","src":"14532:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"14581:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14583:77:21"},"nodeType":"YulFunctionCall","src":"14583:79:21"},"nodeType":"YulExpressionStatement","src":"14583:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14560:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14568:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14556:3:21"},"nodeType":"YulFunctionCall","src":"14556:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"14575:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14552:3:21"},"nodeType":"YulFunctionCall","src":"14552:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14545:6:21"},"nodeType":"YulFunctionCall","src":"14545:35:21"},"nodeType":"YulIf","src":"14542:122:21"},{"nodeType":"YulAssignment","src":"14673:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14696:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14683:12:21"},"nodeType":"YulFunctionCall","src":"14683:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14673:6:21"}]},{"body":{"nodeType":"YulBlock","src":"14746:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"14748:77:21"},"nodeType":"YulFunctionCall","src":"14748:79:21"},"nodeType":"YulExpressionStatement","src":"14748:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14718:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14726:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14715:2:21"},"nodeType":"YulFunctionCall","src":"14715:30:21"},"nodeType":"YulIf","src":"14712:117:21"},{"nodeType":"YulAssignment","src":"14838:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14854:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14862:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14850:3:21"},"nodeType":"YulFunctionCall","src":"14850:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14838:8:21"}]},{"body":{"nodeType":"YulBlock","src":"14921:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"14923:77:21"},"nodeType":"YulFunctionCall","src":"14923:79:21"},"nodeType":"YulExpressionStatement","src":"14923:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14886:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14900:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14908:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14896:3:21"},"nodeType":"YulFunctionCall","src":"14896:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14882:3:21"},"nodeType":"YulFunctionCall","src":"14882:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"14916:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14879:2:21"},"nodeType":"YulFunctionCall","src":"14879:41:21"},"nodeType":"YulIf","src":"14876:128:21"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14499:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"14507:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"14515:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"14525:6:21","type":""}],"src":"14458:552:21"},{"body":{"nodeType":"YulBlock","src":"15135:698:21","statements":[{"body":{"nodeType":"YulBlock","src":"15181:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15183:77:21"},"nodeType":"YulFunctionCall","src":"15183:79:21"},"nodeType":"YulExpressionStatement","src":"15183:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15156:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15165:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15152:3:21"},"nodeType":"YulFunctionCall","src":"15152:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"15177:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15148:3:21"},"nodeType":"YulFunctionCall","src":"15148:32:21"},"nodeType":"YulIf","src":"15145:119:21"},{"nodeType":"YulBlock","src":"15274:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15289:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15303:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15293:6:21","type":""}]},{"nodeType":"YulAssignment","src":"15318:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15353:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15364:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15349:3:21"},"nodeType":"YulFunctionCall","src":"15349:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15373:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15328:20:21"},"nodeType":"YulFunctionCall","src":"15328:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15318:6:21"}]}]},{"nodeType":"YulBlock","src":"15401:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15416:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15430:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15420:6:21","type":""}]},{"nodeType":"YulAssignment","src":"15446:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15481:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15492:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15477:3:21"},"nodeType":"YulFunctionCall","src":"15477:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15501:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15456:20:21"},"nodeType":"YulFunctionCall","src":"15456:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15446:6:21"}]}]},{"nodeType":"YulBlock","src":"15529:297:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15544:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15575:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15586:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15571:3:21"},"nodeType":"YulFunctionCall","src":"15571:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15558:12:21"},"nodeType":"YulFunctionCall","src":"15558:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15548:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15637:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15639:77:21"},"nodeType":"YulFunctionCall","src":"15639:79:21"},"nodeType":"YulExpressionStatement","src":"15639:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15609:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15617:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15606:2:21"},"nodeType":"YulFunctionCall","src":"15606:30:21"},"nodeType":"YulIf","src":"15603:117:21"},{"nodeType":"YulAssignment","src":"15734:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15788:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15799:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15784:3:21"},"nodeType":"YulFunctionCall","src":"15784:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15808:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"15752:31:21"},"nodeType":"YulFunctionCall","src":"15752:64:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15734:6:21"},{"name":"value3","nodeType":"YulIdentifier","src":"15742:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15081:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15092:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15104:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15112:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15120:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15128:6:21","type":""}],"src":"15016:817:21"},{"body":{"nodeType":"YulBlock","src":"15913:40:21","statements":[{"nodeType":"YulAssignment","src":"15924:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15940:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15934:5:21"},"nodeType":"YulFunctionCall","src":"15934:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15924:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15896:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15906:6:21","type":""}],"src":"15839:114:21"},{"body":{"nodeType":"YulBlock","src":"16070:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16087:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16092:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16080:6:21"},"nodeType":"YulFunctionCall","src":"16080:19:21"},"nodeType":"YulExpressionStatement","src":"16080:19:21"},{"nodeType":"YulAssignment","src":"16108:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16127:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16132:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16123:3:21"},"nodeType":"YulFunctionCall","src":"16123:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16108:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16042:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16047:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16058:11:21","type":""}],"src":"15959:184:21"},{"body":{"nodeType":"YulBlock","src":"16221:60:21","statements":[{"nodeType":"YulAssignment","src":"16231:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16239:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16231:4:21"}]},{"nodeType":"YulAssignment","src":"16252:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16264:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16269:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16260:3:21"},"nodeType":"YulFunctionCall","src":"16260:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16252:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16208:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16216:4:21","type":""}],"src":"16149:132:21"},{"body":{"nodeType":"YulBlock","src":"16342:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16359:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16382:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16364:17:21"},"nodeType":"YulFunctionCall","src":"16364:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16352:6:21"},"nodeType":"YulFunctionCall","src":"16352:37:21"},"nodeType":"YulExpressionStatement","src":"16352:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16330:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16337:3:21","type":""}],"src":"16287:108:21"},{"body":{"nodeType":"YulBlock","src":"16481:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16525:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"16533:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16491:33:21"},"nodeType":"YulFunctionCall","src":"16491:46:21"},"nodeType":"YulExpressionStatement","src":"16491:46:21"},{"nodeType":"YulAssignment","src":"16546:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16564:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16569:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16560:3:21"},"nodeType":"YulFunctionCall","src":"16560:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16546:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16454:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16462:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16470:10:21","type":""}],"src":"16401:179:21"},{"body":{"nodeType":"YulBlock","src":"16661:38:21","statements":[{"nodeType":"YulAssignment","src":"16671:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16683:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16688:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:21"},"nodeType":"YulFunctionCall","src":"16679:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16671:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16648:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16656:4:21","type":""}],"src":"16586:113:21"},{"body":{"nodeType":"YulBlock","src":"16859:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16869:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16931:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16883:47:21"},"nodeType":"YulFunctionCall","src":"16883:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16873:6:21","type":""}]},{"nodeType":"YulAssignment","src":"16946:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17027:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17032:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16953:73:21"},"nodeType":"YulFunctionCall","src":"16953:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16946:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"17048:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17113:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17063:49:21"},"nodeType":"YulFunctionCall","src":"17063:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"17052:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17128:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"17142:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17132:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17218:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17232:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17259:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17253:5:21"},"nodeType":"YulFunctionCall","src":"17253:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"17236:13:21","type":""}]},{"nodeType":"YulAssignment","src":"17279:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"17330:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"17345:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17286:43:21"},"nodeType":"YulFunctionCall","src":"17286:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17279:3:21"}]},{"nodeType":"YulAssignment","src":"17362:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17425:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17372:52:21"},"nodeType":"YulFunctionCall","src":"17372:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17362:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17180:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"17183:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17177:2:21"},"nodeType":"YulFunctionCall","src":"17177:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17191:18:21","statements":[{"nodeType":"YulAssignment","src":"17193:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17202:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"17205:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17198:3:21"},"nodeType":"YulFunctionCall","src":"17198:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17193:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"17162:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17164:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17173:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17168:1:21","type":""}]}]},"src":"17158:284:21"},{"nodeType":"YulAssignment","src":"17451:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"17458:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17451:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16838:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16845:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16854:3:21","type":""}],"src":"16735:732:21"},{"body":{"nodeType":"YulBlock","src":"17621:225:21","statements":[{"nodeType":"YulAssignment","src":"17631:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17643:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17654:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17639:3:21"},"nodeType":"YulFunctionCall","src":"17639:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17631:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17678:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17689:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17674:3:21"},"nodeType":"YulFunctionCall","src":"17674:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17697:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17703:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17693:3:21"},"nodeType":"YulFunctionCall","src":"17693:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17667:6:21"},"nodeType":"YulFunctionCall","src":"17667:47:21"},"nodeType":"YulExpressionStatement","src":"17667:47:21"},{"nodeType":"YulAssignment","src":"17723:116:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17825:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"17834:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17731:93:21"},"nodeType":"YulFunctionCall","src":"17731:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17723:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17593:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17605:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17616:4:21","type":""}],"src":"17473:373:21"},{"body":{"nodeType":"YulBlock","src":"17926:40:21","statements":[{"nodeType":"YulAssignment","src":"17937:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17953:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17947:5:21"},"nodeType":"YulFunctionCall","src":"17947:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17937:6:21"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17909:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17919:6:21","type":""}],"src":"17852:114:21"},{"body":{"nodeType":"YulBlock","src":"18083:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18100:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"18105:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18093:6:21"},"nodeType":"YulFunctionCall","src":"18093:19:21"},"nodeType":"YulExpressionStatement","src":"18093:19:21"},{"nodeType":"YulAssignment","src":"18121:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18140:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18145:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18136:3:21"},"nodeType":"YulFunctionCall","src":"18136:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18121:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18055:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"18060:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18071:11:21","type":""}],"src":"17972:184:21"},{"body":{"nodeType":"YulBlock","src":"18234:60:21","statements":[{"nodeType":"YulAssignment","src":"18244:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18252:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18244:4:21"}]},{"nodeType":"YulAssignment","src":"18265:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18277:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18282:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18273:3:21"},"nodeType":"YulFunctionCall","src":"18273:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18265:4:21"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18221:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18229:4:21","type":""}],"src":"18162:132:21"},{"body":{"nodeType":"YulBlock","src":"18355:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18372:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18395:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18377:17:21"},"nodeType":"YulFunctionCall","src":"18377:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18365:6:21"},"nodeType":"YulFunctionCall","src":"18365:37:21"},"nodeType":"YulExpressionStatement","src":"18365:37:21"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18343:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18350:3:21","type":""}],"src":"18300:108:21"},{"body":{"nodeType":"YulBlock","src":"18494:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18538:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"18546:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"18504:33:21"},"nodeType":"YulFunctionCall","src":"18504:46:21"},"nodeType":"YulExpressionStatement","src":"18504:46:21"},{"nodeType":"YulAssignment","src":"18559:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18577:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18582:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18573:3:21"},"nodeType":"YulFunctionCall","src":"18573:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18559:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"18467:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18475:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"18483:10:21","type":""}],"src":"18414:179:21"},{"body":{"nodeType":"YulBlock","src":"18674:38:21","statements":[{"nodeType":"YulAssignment","src":"18684:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18696:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18701:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18692:3:21"},"nodeType":"YulFunctionCall","src":"18692:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"18684:4:21"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18661:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"18669:4:21","type":""}],"src":"18599:113:21"},{"body":{"nodeType":"YulBlock","src":"18872:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18882:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18944:5:21"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18896:47:21"},"nodeType":"YulFunctionCall","src":"18896:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18886:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18959:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19040:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"19045:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18966:73:21"},"nodeType":"YulFunctionCall","src":"18966:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18959:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"19061:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19126:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19076:49:21"},"nodeType":"YulFunctionCall","src":"19076:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19065:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19141:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19155:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19145:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"19231:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19245:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19272:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19266:5:21"},"nodeType":"YulFunctionCall","src":"19266:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"19249:13:21","type":""}]},{"nodeType":"YulAssignment","src":"19292:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"19343:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"19358:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"19299:43:21"},"nodeType":"YulFunctionCall","src":"19299:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19292:3:21"}]},{"nodeType":"YulAssignment","src":"19375:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19438:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19385:52:21"},"nodeType":"YulFunctionCall","src":"19385:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19375:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19193:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"19196:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19190:2:21"},"nodeType":"YulFunctionCall","src":"19190:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19204:18:21","statements":[{"nodeType":"YulAssignment","src":"19206:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19215:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"19218:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19211:3:21"},"nodeType":"YulFunctionCall","src":"19211:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19206:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"19175:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19177:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19186:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19181:1:21","type":""}]}]},"src":"19171:284:21"},{"nodeType":"YulAssignment","src":"19464:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"19471:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19464:3:21"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18851:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18858:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18867:3:21","type":""}],"src":"18748:732:21"},{"body":{"nodeType":"YulBlock","src":"19740:549:21","statements":[{"nodeType":"YulAssignment","src":"19750:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19762:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19773:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19758:3:21"},"nodeType":"YulFunctionCall","src":"19758:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19750:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19829:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19842:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19853:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19838:3:21"},"nodeType":"YulFunctionCall","src":"19838:17:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"19787:41:21"},"nodeType":"YulFunctionCall","src":"19787:69:21"},"nodeType":"YulExpressionStatement","src":"19787:69:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19908:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19921:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19932:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19917:3:21"},"nodeType":"YulFunctionCall","src":"19917:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"19866:41:21"},"nodeType":"YulFunctionCall","src":"19866:70:21"},"nodeType":"YulExpressionStatement","src":"19866:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19988:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20001:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20012:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19997:3:21"},"nodeType":"YulFunctionCall","src":"19997:18:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19946:41:21"},"nodeType":"YulFunctionCall","src":"19946:70:21"},"nodeType":"YulExpressionStatement","src":"19946:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20070:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20083:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20094:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20079:3:21"},"nodeType":"YulFunctionCall","src":"20079:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20026:43:21"},"nodeType":"YulFunctionCall","src":"20026:72:21"},"nodeType":"YulExpressionStatement","src":"20026:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20119:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20130:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20115:3:21"},"nodeType":"YulFunctionCall","src":"20115:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20140:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20146:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20136:3:21"},"nodeType":"YulFunctionCall","src":"20136:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20108:6:21"},"nodeType":"YulFunctionCall","src":"20108:49:21"},"nodeType":"YulExpressionStatement","src":"20108:49:21"},{"nodeType":"YulAssignment","src":"20166:116:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20268:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"20277:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20174:93:21"},"nodeType":"YulFunctionCall","src":"20174:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20166:4:21"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19680:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19692:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19700:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19708:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19716:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19724:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19735:4:21","type":""}],"src":"19486:803:21"},{"body":{"nodeType":"YulBlock","src":"20323:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20340:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20343:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20333:6:21"},"nodeType":"YulFunctionCall","src":"20333:88:21"},"nodeType":"YulExpressionStatement","src":"20333:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20437:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20440:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20430:6:21"},"nodeType":"YulFunctionCall","src":"20430:15:21"},"nodeType":"YulExpressionStatement","src":"20430:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20461:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20464:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20454:6:21"},"nodeType":"YulFunctionCall","src":"20454:15:21"},"nodeType":"YulExpressionStatement","src":"20454:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20295:180:21"},{"body":{"nodeType":"YulBlock","src":"20532:269:21","statements":[{"nodeType":"YulAssignment","src":"20542:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20556:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20562:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20552:3:21"},"nodeType":"YulFunctionCall","src":"20552:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20542:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"20573:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20603:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20609:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20599:3:21"},"nodeType":"YulFunctionCall","src":"20599:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20577:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20650:51:21","statements":[{"nodeType":"YulAssignment","src":"20664:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20678:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20686:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20674:3:21"},"nodeType":"YulFunctionCall","src":"20674:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20664:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20630:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20623:6:21"},"nodeType":"YulFunctionCall","src":"20623:26:21"},"nodeType":"YulIf","src":"20620:81:21"},{"body":{"nodeType":"YulBlock","src":"20753:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"20767:16:21"},"nodeType":"YulFunctionCall","src":"20767:18:21"},"nodeType":"YulExpressionStatement","src":"20767:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20717:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20740:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20748:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20737:2:21"},"nodeType":"YulFunctionCall","src":"20737:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20714:2:21"},"nodeType":"YulFunctionCall","src":"20714:38:21"},"nodeType":"YulIf","src":"20711:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20516:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20525:6:21","type":""}],"src":"20481:320:21"},{"body":{"nodeType":"YulBlock","src":"20933:206:21","statements":[{"nodeType":"YulAssignment","src":"20943:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20966:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20951:3:21"},"nodeType":"YulFunctionCall","src":"20951:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20943:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21023:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21036:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21047:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21032:3:21"},"nodeType":"YulFunctionCall","src":"21032:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20979:43:21"},"nodeType":"YulFunctionCall","src":"20979:71:21"},"nodeType":"YulExpressionStatement","src":"20979:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21104:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21117:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21128:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21113:3:21"},"nodeType":"YulFunctionCall","src":"21113:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21060:43:21"},"nodeType":"YulFunctionCall","src":"21060:72:21"},"nodeType":"YulExpressionStatement","src":"21060:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20897:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20909:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20917:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20928:4:21","type":""}],"src":"20807:332:21"},{"body":{"nodeType":"YulBlock","src":"21173:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21190:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21193:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21183:6:21"},"nodeType":"YulFunctionCall","src":"21183:88:21"},"nodeType":"YulExpressionStatement","src":"21183:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21287:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21290:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21280:6:21"},"nodeType":"YulFunctionCall","src":"21280:15:21"},"nodeType":"YulExpressionStatement","src":"21280:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21311:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21314:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21304:6:21"},"nodeType":"YulFunctionCall","src":"21304:15:21"},"nodeType":"YulExpressionStatement","src":"21304:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21145:180:21"},{"body":{"nodeType":"YulBlock","src":"21359:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21376:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21379:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21369:6:21"},"nodeType":"YulFunctionCall","src":"21369:88:21"},"nodeType":"YulExpressionStatement","src":"21369:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21473:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21476:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21466:6:21"},"nodeType":"YulFunctionCall","src":"21466:15:21"},"nodeType":"YulExpressionStatement","src":"21466:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21497:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21500:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21490:6:21"},"nodeType":"YulFunctionCall","src":"21490:15:21"},"nodeType":"YulExpressionStatement","src":"21490:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21331:180:21"},{"body":{"nodeType":"YulBlock","src":"21560:190:21","statements":[{"nodeType":"YulAssignment","src":"21570:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21597:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21579:17:21"},"nodeType":"YulFunctionCall","src":"21579:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21570:5:21"}]},{"body":{"nodeType":"YulBlock","src":"21693:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21695:16:21"},"nodeType":"YulFunctionCall","src":"21695:18:21"},"nodeType":"YulExpressionStatement","src":"21695:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21618:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21625:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21615:2:21"},"nodeType":"YulFunctionCall","src":"21615:77:21"},"nodeType":"YulIf","src":"21612:103:21"},{"nodeType":"YulAssignment","src":"21724:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21735:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21742:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21731:3:21"},"nodeType":"YulFunctionCall","src":"21731:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21724:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21546:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21556:3:21","type":""}],"src":"21517:233:21"},{"body":{"nodeType":"YulBlock","src":"21932:307:21","statements":[{"nodeType":"YulAssignment","src":"21942:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21954:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21965:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21950:3:21"},"nodeType":"YulFunctionCall","src":"21950:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21942:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22022:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22035:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22046:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22031:3:21"},"nodeType":"YulFunctionCall","src":"22031:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21978:43:21"},"nodeType":"YulFunctionCall","src":"21978:71:21"},"nodeType":"YulExpressionStatement","src":"21978:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22070:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22081:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22066:3:21"},"nodeType":"YulFunctionCall","src":"22066:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22090:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22096:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22086:3:21"},"nodeType":"YulFunctionCall","src":"22086:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22059:6:21"},"nodeType":"YulFunctionCall","src":"22059:48:21"},"nodeType":"YulExpressionStatement","src":"22059:48:21"},{"nodeType":"YulAssignment","src":"22116:116:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22218:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"22227:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22124:93:21"},"nodeType":"YulFunctionCall","src":"22124:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22116:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21896:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21908:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21916:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21927:4:21","type":""}],"src":"21756:483:21"},{"body":{"nodeType":"YulBlock","src":"22303:40:21","statements":[{"nodeType":"YulAssignment","src":"22314:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22330:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22324:5:21"},"nodeType":"YulFunctionCall","src":"22324:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22314:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22286:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22296:6:21","type":""}],"src":"22245:98:21"},{"body":{"nodeType":"YulBlock","src":"22462:34:21","statements":[{"nodeType":"YulAssignment","src":"22472:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"22487:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22472:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22434:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"22439:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22450:11:21","type":""}],"src":"22349:147:21"},{"body":{"nodeType":"YulBlock","src":"22564:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"22574:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"22583:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22578:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"22643:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22668:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"22673:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22664:3:21"},"nodeType":"YulFunctionCall","src":"22664:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22687:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"22692:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22683:3:21"},"nodeType":"YulFunctionCall","src":"22683:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22677:5:21"},"nodeType":"YulFunctionCall","src":"22677:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22657:6:21"},"nodeType":"YulFunctionCall","src":"22657:39:21"},"nodeType":"YulExpressionStatement","src":"22657:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22604:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"22607:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22601:2:21"},"nodeType":"YulFunctionCall","src":"22601:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22615:19:21","statements":[{"nodeType":"YulAssignment","src":"22617:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22626:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"22629:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22622:3:21"},"nodeType":"YulFunctionCall","src":"22622:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22617:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"22597:3:21","statements":[]},"src":"22593:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22726:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"22731:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22722:3:21"},"nodeType":"YulFunctionCall","src":"22722:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"22740:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22715:6:21"},"nodeType":"YulFunctionCall","src":"22715:27:21"},"nodeType":"YulExpressionStatement","src":"22715:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22546:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22551:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"22556:6:21","type":""}],"src":"22502:246:21"},{"body":{"nodeType":"YulBlock","src":"22862:278:21","statements":[{"nodeType":"YulVariableDeclaration","src":"22872:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22918:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22886:31:21"},"nodeType":"YulFunctionCall","src":"22886:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22876:6:21","type":""}]},{"nodeType":"YulAssignment","src":"22933:95:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23016:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"23021:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22940:75:21"},"nodeType":"YulFunctionCall","src":"22940:88:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22933:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23076:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"23083:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23072:3:21"},"nodeType":"YulFunctionCall","src":"23072:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"23090:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"23095:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23037:34:21"},"nodeType":"YulFunctionCall","src":"23037:65:21"},"nodeType":"YulExpressionStatement","src":"23037:65:21"},{"nodeType":"YulAssignment","src":"23111:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23122:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"23127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23118:3:21"},"nodeType":"YulFunctionCall","src":"23118:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23111:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22843:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22850:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22858:3:21","type":""}],"src":"22754:386:21"},{"body":{"nodeType":"YulBlock","src":"23280:137:21","statements":[{"nodeType":"YulAssignment","src":"23291:100:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23378:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"23387:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23298:79:21"},"nodeType":"YulFunctionCall","src":"23298:93:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23291:3:21"}]},{"nodeType":"YulAssignment","src":"23401:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"23408:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23401:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23259:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23265:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23276:3:21","type":""}],"src":"23146:271:21"},{"body":{"nodeType":"YulBlock","src":"23468:149:21","statements":[{"nodeType":"YulAssignment","src":"23478:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23501:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23483:17:21"},"nodeType":"YulFunctionCall","src":"23483:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23478:1:21"}]},{"nodeType":"YulAssignment","src":"23512:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23535:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23517:17:21"},"nodeType":"YulFunctionCall","src":"23517:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23512:1:21"}]},{"nodeType":"YulAssignment","src":"23546:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23558:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23561:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23554:3:21"},"nodeType":"YulFunctionCall","src":"23554:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23546:4:21"}]},{"body":{"nodeType":"YulBlock","src":"23588:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23590:16:21"},"nodeType":"YulFunctionCall","src":"23590:18:21"},"nodeType":"YulExpressionStatement","src":"23590:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23579:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"23585:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23576:2:21"},"nodeType":"YulFunctionCall","src":"23576:11:21"},"nodeType":"YulIf","src":"23573:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23454:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23457:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23463:4:21","type":""}],"src":"23423:194:21"},{"body":{"nodeType":"YulBlock","src":"23671:362:21","statements":[{"nodeType":"YulAssignment","src":"23681:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23704:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23686:17:21"},"nodeType":"YulFunctionCall","src":"23686:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23681:1:21"}]},{"nodeType":"YulAssignment","src":"23715:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23738:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23720:17:21"},"nodeType":"YulFunctionCall","src":"23720:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23715:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"23749:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23772:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23775:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23768:3:21"},"nodeType":"YulFunctionCall","src":"23768:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"23753:11:21","type":""}]},{"nodeType":"YulAssignment","src":"23786:41:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"23815:11:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23797:17:21"},"nodeType":"YulFunctionCall","src":"23797:30:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23786:7:21"}]},{"body":{"nodeType":"YulBlock","src":"24004:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24006:16:21"},"nodeType":"YulFunctionCall","src":"24006:18:21"},"nodeType":"YulExpressionStatement","src":"24006:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23937:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23930:6:21"},"nodeType":"YulFunctionCall","src":"23930:9:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23960:1:21"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23967:7:21"},{"name":"x","nodeType":"YulIdentifier","src":"23976:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23963:3:21"},"nodeType":"YulFunctionCall","src":"23963:15:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23957:2:21"},"nodeType":"YulFunctionCall","src":"23957:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23910:2:21"},"nodeType":"YulFunctionCall","src":"23910:83:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23890:6:21"},"nodeType":"YulFunctionCall","src":"23890:113:21"},"nodeType":"YulIf","src":"23887:139:21"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23654:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23657:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23663:7:21","type":""}],"src":"23623:410:21"},{"body":{"nodeType":"YulBlock","src":"24083:147:21","statements":[{"nodeType":"YulAssignment","src":"24093:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24116:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24098:17:21"},"nodeType":"YulFunctionCall","src":"24098:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24093:1:21"}]},{"nodeType":"YulAssignment","src":"24127:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24150:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24132:17:21"},"nodeType":"YulFunctionCall","src":"24132:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24127:1:21"}]},{"nodeType":"YulAssignment","src":"24161:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24172:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24175:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24168:3:21"},"nodeType":"YulFunctionCall","src":"24168:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24161:3:21"}]},{"body":{"nodeType":"YulBlock","src":"24201:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24203:16:21"},"nodeType":"YulFunctionCall","src":"24203:18:21"},"nodeType":"YulExpressionStatement","src":"24203:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24193:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"24196:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24190:2:21"},"nodeType":"YulFunctionCall","src":"24190:10:21"},"nodeType":"YulIf","src":"24187:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24070:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"24073:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24079:3:21","type":""}],"src":"24039:191:21"},{"body":{"nodeType":"YulBlock","src":"24264:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24281:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24284:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24274:6:21"},"nodeType":"YulFunctionCall","src":"24274:88:21"},"nodeType":"YulExpressionStatement","src":"24274:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24378:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24381:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24371:6:21"},"nodeType":"YulFunctionCall","src":"24371:15:21"},"nodeType":"YulExpressionStatement","src":"24371:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24402:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24405:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24395:6:21"},"nodeType":"YulFunctionCall","src":"24395:15:21"},"nodeType":"YulExpressionStatement","src":"24395:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"24236:180:21"},{"body":{"nodeType":"YulBlock","src":"24464:143:21","statements":[{"nodeType":"YulAssignment","src":"24474:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24497:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24479:17:21"},"nodeType":"YulFunctionCall","src":"24479:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24474:1:21"}]},{"nodeType":"YulAssignment","src":"24508:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24531:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24513:17:21"},"nodeType":"YulFunctionCall","src":"24513:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24508:1:21"}]},{"body":{"nodeType":"YulBlock","src":"24555:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24557:16:21"},"nodeType":"YulFunctionCall","src":"24557:18:21"},"nodeType":"YulExpressionStatement","src":"24557:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24552:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24545:6:21"},"nodeType":"YulFunctionCall","src":"24545:9:21"},"nodeType":"YulIf","src":"24542:35:21"},{"nodeType":"YulAssignment","src":"24587:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24596:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24599:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24592:3:21"},"nodeType":"YulFunctionCall","src":"24592:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24587:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24453:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"24456:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"24462:1:21","type":""}],"src":"24422:185:21"},{"body":{"nodeType":"YulBlock","src":"24803:434:21","statements":[{"nodeType":"YulAssignment","src":"24813:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24825:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24836:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24821:3:21"},"nodeType":"YulFunctionCall","src":"24821:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24813:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24894:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24907:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24918:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24903:3:21"},"nodeType":"YulFunctionCall","src":"24903:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24850:43:21"},"nodeType":"YulFunctionCall","src":"24850:71:21"},"nodeType":"YulExpressionStatement","src":"24850:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24973:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24986:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24997:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24982:3:21"},"nodeType":"YulFunctionCall","src":"24982:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"24931:41:21"},"nodeType":"YulFunctionCall","src":"24931:70:21"},"nodeType":"YulExpressionStatement","src":"24931:70:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25049:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25062:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25073:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25058:3:21"},"nodeType":"YulFunctionCall","src":"25058:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25011:37:21"},"nodeType":"YulFunctionCall","src":"25011:66:21"},"nodeType":"YulExpressionStatement","src":"25011:66:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25125:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25138:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25149:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25134:3:21"},"nodeType":"YulFunctionCall","src":"25134:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25087:37:21"},"nodeType":"YulFunctionCall","src":"25087:66:21"},"nodeType":"YulExpressionStatement","src":"25087:66:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25201:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25225:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25210:3:21"},"nodeType":"YulFunctionCall","src":"25210:19:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25163:37:21"},"nodeType":"YulFunctionCall","src":"25163:67:21"},"nodeType":"YulExpressionStatement","src":"25163:67:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24743:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24755:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24763:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24771:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24779:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24787:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24798:4:21","type":""}],"src":"24613:624:21"},{"body":{"nodeType":"YulBlock","src":"25349:8:21","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25341:6:21","type":""}],"src":"25243:114:21"},{"body":{"nodeType":"YulBlock","src":"25526:235:21","statements":[{"nodeType":"YulAssignment","src":"25536:90:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25619:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25624:1:21","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25543:75:21"},"nodeType":"YulFunctionCall","src":"25543:83:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25536:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25724:3:21"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"25635:88:21"},"nodeType":"YulFunctionCall","src":"25635:93:21"},"nodeType":"YulExpressionStatement","src":"25635:93:21"},{"nodeType":"YulAssignment","src":"25737:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25748:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25753:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25744:3:21"},"nodeType":"YulFunctionCall","src":"25744:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25737:3:21"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25514:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25522:3:21","type":""}],"src":"25363:398:21"},{"body":{"nodeType":"YulBlock","src":"25955:191:21","statements":[{"nodeType":"YulAssignment","src":"25966:154:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26116:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25973:141:21"},"nodeType":"YulFunctionCall","src":"25973:147:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25966:3:21"}]},{"nodeType":"YulAssignment","src":"26130:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"26137:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26130:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25942:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25951:3:21","type":""}],"src":"25767:379:21"},{"body":{"nodeType":"YulBlock","src":"26211:81:21","statements":[{"nodeType":"YulAssignment","src":"26221:65:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26278:5:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"26261:16:21"},"nodeType":"YulFunctionCall","src":"26261:23:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"26252:8:21"},"nodeType":"YulFunctionCall","src":"26252:33:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26234:17:21"},"nodeType":"YulFunctionCall","src":"26234:52:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"26221:9:21"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26191:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"26201:9:21","type":""}],"src":"26152:140:21"},{"body":{"nodeType":"YulBlock","src":"26362:65:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26379:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26414:5:21"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"26384:29:21"},"nodeType":"YulFunctionCall","src":"26384:36:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26372:6:21"},"nodeType":"YulFunctionCall","src":"26372:49:21"},"nodeType":"YulExpressionStatement","src":"26372:49:21"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26350:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26357:3:21","type":""}],"src":"26298:129:21"},{"body":{"nodeType":"YulBlock","src":"26585:286:21","statements":[{"nodeType":"YulAssignment","src":"26595:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26607:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26618:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26603:3:21"},"nodeType":"YulFunctionCall","src":"26603:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26595:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26675:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26688:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26699:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26684:3:21"},"nodeType":"YulFunctionCall","src":"26684:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26631:43:21"},"nodeType":"YulFunctionCall","src":"26631:71:21"},"nodeType":"YulExpressionStatement","src":"26631:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26755:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26768:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26779:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26764:3:21"},"nodeType":"YulFunctionCall","src":"26764:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26712:42:21"},"nodeType":"YulFunctionCall","src":"26712:71:21"},"nodeType":"YulExpressionStatement","src":"26712:71:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26836:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26849:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26860:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26845:3:21"},"nodeType":"YulFunctionCall","src":"26845:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26793:42:21"},"nodeType":"YulFunctionCall","src":"26793:71:21"},"nodeType":"YulExpressionStatement","src":"26793:71:21"}]},"name":"abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26541:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26553:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26561:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26569:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26580:4:21","type":""}],"src":"26433:438:21"},{"body":{"nodeType":"YulBlock","src":"26920:170:21","statements":[{"nodeType":"YulAssignment","src":"26930:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26952:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"26935:16:21"},"nodeType":"YulFunctionCall","src":"26935:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26930:1:21"}]},{"nodeType":"YulAssignment","src":"26963:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26985:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"26968:16:21"},"nodeType":"YulFunctionCall","src":"26968:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26963:1:21"}]},{"nodeType":"YulAssignment","src":"26996:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27007:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"27010:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27003:3:21"},"nodeType":"YulFunctionCall","src":"27003:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26996:3:21"}]},{"body":{"nodeType":"YulBlock","src":"27061:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27063:16:21"},"nodeType":"YulFunctionCall","src":"27063:18:21"},"nodeType":"YulExpressionStatement","src":"27063:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"27028:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27033:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27025:2:21"},"nodeType":"YulFunctionCall","src":"27025:35:21"},"nodeType":"YulIf","src":"27022:61:21"}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26907:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"26910:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26916:3:21","type":""}],"src":"26877:213:21"},{"body":{"nodeType":"YulBlock","src":"27140:172:21","statements":[{"nodeType":"YulAssignment","src":"27150:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27172:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27155:16:21"},"nodeType":"YulFunctionCall","src":"27155:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27150:1:21"}]},{"nodeType":"YulAssignment","src":"27183:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27205:1:21"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27188:16:21"},"nodeType":"YulFunctionCall","src":"27188:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27183:1:21"}]},{"nodeType":"YulAssignment","src":"27216:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27228:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"27231:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27224:3:21"},"nodeType":"YulFunctionCall","src":"27224:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"27216:4:21"}]},{"body":{"nodeType":"YulBlock","src":"27283:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27285:16:21"},"nodeType":"YulFunctionCall","src":"27285:18:21"},"nodeType":"YulExpressionStatement","src":"27285:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"27249:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"27255:26:21","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27246:2:21"},"nodeType":"YulFunctionCall","src":"27246:36:21"},"nodeType":"YulIf","src":"27243:62:21"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27126:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"27129:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"27135:4:21","type":""}],"src":"27096:216:21"},{"body":{"nodeType":"YulBlock","src":"27443:205:21","statements":[{"nodeType":"YulAssignment","src":"27453:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27465:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27476:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27461:3:21"},"nodeType":"YulFunctionCall","src":"27461:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27453:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27533:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27546:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27557:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27542:3:21"},"nodeType":"YulFunctionCall","src":"27542:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27489:43:21"},"nodeType":"YulFunctionCall","src":"27489:71:21"},"nodeType":"YulExpressionStatement","src":"27489:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27613:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27626:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27637:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27622:3:21"},"nodeType":"YulFunctionCall","src":"27622:18:21"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27570:42:21"},"nodeType":"YulFunctionCall","src":"27570:71:21"},"nodeType":"YulExpressionStatement","src":"27570:71:21"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27407:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27419:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27427:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27438:4:21","type":""}],"src":"27318:330:21"},{"body":{"nodeType":"YulBlock","src":"27694:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"27748:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27757:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27760:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27750:6:21"},"nodeType":"YulFunctionCall","src":"27750:12:21"},"nodeType":"YulExpressionStatement","src":"27750:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27717:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27739:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"27724:14:21"},"nodeType":"YulFunctionCall","src":"27724:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27714:2:21"},"nodeType":"YulFunctionCall","src":"27714:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27707:6:21"},"nodeType":"YulFunctionCall","src":"27707:40:21"},"nodeType":"YulIf","src":"27704:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27687:5:21","type":""}],"src":"27654:116:21"},{"body":{"nodeType":"YulBlock","src":"27836:77:21","statements":[{"nodeType":"YulAssignment","src":"27846:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27861:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27855:5:21"},"nodeType":"YulFunctionCall","src":"27855:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27846:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27901:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"27877:23:21"},"nodeType":"YulFunctionCall","src":"27877:30:21"},"nodeType":"YulExpressionStatement","src":"27877:30:21"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27814:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"27822:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27830:5:21","type":""}],"src":"27776:137:21"},{"body":{"nodeType":"YulBlock","src":"27993:271:21","statements":[{"body":{"nodeType":"YulBlock","src":"28039:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28041:77:21"},"nodeType":"YulFunctionCall","src":"28041:79:21"},"nodeType":"YulExpressionStatement","src":"28041:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28014:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"28023:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28010:3:21"},"nodeType":"YulFunctionCall","src":"28010:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"28035:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28006:3:21"},"nodeType":"YulFunctionCall","src":"28006:32:21"},"nodeType":"YulIf","src":"28003:119:21"},{"nodeType":"YulBlock","src":"28132:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28147:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28161:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28151:6:21","type":""}]},{"nodeType":"YulAssignment","src":"28176:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28219:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"28230:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28215:3:21"},"nodeType":"YulFunctionCall","src":"28215:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28239:7:21"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"28186:28:21"},"nodeType":"YulFunctionCall","src":"28186:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28176:6:21"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27963:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27974:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27986:6:21","type":""}],"src":"27919:345:21"},{"body":{"nodeType":"YulBlock","src":"28366:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28383:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"28388:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28376:6:21"},"nodeType":"YulFunctionCall","src":"28376:19:21"},"nodeType":"YulExpressionStatement","src":"28376:19:21"},{"nodeType":"YulAssignment","src":"28404:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28423:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28428:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28419:3:21"},"nodeType":"YulFunctionCall","src":"28419:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28404:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28338:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"28343:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28354:11:21","type":""}],"src":"28270:169:21"},{"body":{"nodeType":"YulBlock","src":"28551:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28573:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28581:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28569:3:21"},"nodeType":"YulFunctionCall","src":"28569:14:21"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"28585:24:21","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28562:6:21"},"nodeType":"YulFunctionCall","src":"28562:48:21"},"nodeType":"YulExpressionStatement","src":"28562:48:21"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28543:6:21","type":""}],"src":"28445:172:21"},{"body":{"nodeType":"YulBlock","src":"28769:220:21","statements":[{"nodeType":"YulAssignment","src":"28779:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28845:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28850:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28786:58:21"},"nodeType":"YulFunctionCall","src":"28786:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28779:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28951:3:21"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"28862:88:21"},"nodeType":"YulFunctionCall","src":"28862:93:21"},"nodeType":"YulExpressionStatement","src":"28862:93:21"},{"nodeType":"YulAssignment","src":"28964:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28975:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28980:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28971:3:21"},"nodeType":"YulFunctionCall","src":"28971:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28964:3:21"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28757:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28765:3:21","type":""}],"src":"28623:366:21"},{"body":{"nodeType":"YulBlock","src":"29166:248:21","statements":[{"nodeType":"YulAssignment","src":"29176:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29188:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29199:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29184:3:21"},"nodeType":"YulFunctionCall","src":"29184:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29176:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29223:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29234:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29219:3:21"},"nodeType":"YulFunctionCall","src":"29219:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29242:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"29248:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29238:3:21"},"nodeType":"YulFunctionCall","src":"29238:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29212:6:21"},"nodeType":"YulFunctionCall","src":"29212:47:21"},"nodeType":"YulExpressionStatement","src":"29212:47:21"},{"nodeType":"YulAssignment","src":"29268:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29402:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29276:124:21"},"nodeType":"YulFunctionCall","src":"29276:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29268:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29146:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29161:4:21","type":""}],"src":"28995:419:21"},{"body":{"nodeType":"YulBlock","src":"29488:66:21","statements":[{"nodeType":"YulAssignment","src":"29498:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29542:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"29511:30:21"},"nodeType":"YulFunctionCall","src":"29511:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29498:9:21"}]}]},"name":"convert_t_address_payable_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29468:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29478:9:21","type":""}],"src":"29420:134:21"},{"body":{"nodeType":"YulBlock","src":"29633:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29650:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29694:5:21"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nodeType":"YulIdentifier","src":"29655:38:21"},"nodeType":"YulFunctionCall","src":"29655:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29643:6:21"},"nodeType":"YulFunctionCall","src":"29643:58:21"},"nodeType":"YulExpressionStatement","src":"29643:58:21"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29621:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29628:3:21","type":""}],"src":"29560:147:21"},{"body":{"nodeType":"YulBlock","src":"29847:214:21","statements":[{"nodeType":"YulAssignment","src":"29857:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29869:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29880:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29865:3:21"},"nodeType":"YulFunctionCall","src":"29865:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29857:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29945:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29958:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29969:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29954:3:21"},"nodeType":"YulFunctionCall","src":"29954:17:21"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29893:51:21"},"nodeType":"YulFunctionCall","src":"29893:79:21"},"nodeType":"YulExpressionStatement","src":"29893:79:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30026:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30039:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30050:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30035:3:21"},"nodeType":"YulFunctionCall","src":"30035:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29982:43:21"},"nodeType":"YulFunctionCall","src":"29982:72:21"},"nodeType":"YulExpressionStatement","src":"29982:72:21"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29811:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29823:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29831:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29842:4:21","type":""}],"src":"29713:348:21"},{"body":{"nodeType":"YulBlock","src":"30193:206:21","statements":[{"nodeType":"YulAssignment","src":"30203:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30215:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30226:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30211:3:21"},"nodeType":"YulFunctionCall","src":"30211:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30203:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30283:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30296:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30307:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30292:3:21"},"nodeType":"YulFunctionCall","src":"30292:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30239:43:21"},"nodeType":"YulFunctionCall","src":"30239:71:21"},"nodeType":"YulExpressionStatement","src":"30239:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30364:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30377:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30388:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30373:3:21"},"nodeType":"YulFunctionCall","src":"30373:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30320:43:21"},"nodeType":"YulFunctionCall","src":"30320:72:21"},"nodeType":"YulExpressionStatement","src":"30320:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30157:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30169:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30177:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30188:4:21","type":""}],"src":"30067:332:21"},{"body":{"nodeType":"YulBlock","src":"30494:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30511:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30514:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30504:6:21"},"nodeType":"YulFunctionCall","src":"30504:12:21"},"nodeType":"YulExpressionStatement","src":"30504:12:21"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"30405:117:21"},{"body":{"nodeType":"YulBlock","src":"30617:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30634:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30637:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30627:6:21"},"nodeType":"YulFunctionCall","src":"30627:12:21"},"nodeType":"YulExpressionStatement","src":"30627:12:21"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"30528:117:21"},{"body":{"nodeType":"YulBlock","src":"30740:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30757:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30760:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30750:6:21"},"nodeType":"YulFunctionCall","src":"30750:12:21"},"nodeType":"YulExpressionStatement","src":"30750:12:21"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"30651:117:21"},{"body":{"nodeType":"YulBlock","src":"30864:634:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30874:51:21","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"30913:11:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30900:12:21"},"nodeType":"YulFunctionCall","src":"30900:25:21"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"30878:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"31019:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"31021:77:21"},"nodeType":"YulFunctionCall","src":"31021:79:21"},"nodeType":"YulExpressionStatement","src":"31021:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"30948:18:21"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"30976:12:21"},"nodeType":"YulFunctionCall","src":"30976:14:21"},{"name":"base_ref","nodeType":"YulIdentifier","src":"30992:8:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30972:3:21"},"nodeType":"YulFunctionCall","src":"30972:29:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31007:4:21","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"31013:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31003:3:21"},"nodeType":"YulFunctionCall","src":"31003:12:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30968:3:21"},"nodeType":"YulFunctionCall","src":"30968:48:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30944:3:21"},"nodeType":"YulFunctionCall","src":"30944:73:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30937:6:21"},"nodeType":"YulFunctionCall","src":"30937:81:21"},"nodeType":"YulIf","src":"30934:168:21"},{"nodeType":"YulAssignment","src":"31111:41:21","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"31123:8:21"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"31133:18:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31119:3:21"},"nodeType":"YulFunctionCall","src":"31119:33:21"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"31111:4:21"}]},{"nodeType":"YulAssignment","src":"31162:28:21","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"31185:4:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31172:12:21"},"nodeType":"YulFunctionCall","src":"31172:18:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31162:6:21"}]},{"body":{"nodeType":"YulBlock","src":"31233:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"31235:77:21"},"nodeType":"YulFunctionCall","src":"31235:79:21"},"nodeType":"YulExpressionStatement","src":"31235:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31205:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31213:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31202:2:21"},"nodeType":"YulFunctionCall","src":"31202:30:21"},"nodeType":"YulIf","src":"31199:117:21"},{"nodeType":"YulAssignment","src":"31325:21:21","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"31337:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"31343:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31333:3:21"},"nodeType":"YulFunctionCall","src":"31333:13:21"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"31325:4:21"}]},{"body":{"nodeType":"YulBlock","src":"31408:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"31410:77:21"},"nodeType":"YulFunctionCall","src":"31410:79:21"},"nodeType":"YulExpressionStatement","src":"31410:79:21"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"31362:4:21"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"31372:12:21"},"nodeType":"YulFunctionCall","src":"31372:14:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31392:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31400:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31388:3:21"},"nodeType":"YulFunctionCall","src":"31388:17:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31368:3:21"},"nodeType":"YulFunctionCall","src":"31368:38:21"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"31358:3:21"},"nodeType":"YulFunctionCall","src":"31358:49:21"},"nodeType":"YulIf","src":"31355:136:21"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"30825:8:21","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"30835:11:21","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"30851:4:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"30857:6:21","type":""}],"src":"30774:724:21"},{"body":{"nodeType":"YulBlock","src":"31546:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"31602:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31611:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31614:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31604:6:21"},"nodeType":"YulFunctionCall","src":"31604:12:21"},"nodeType":"YulExpressionStatement","src":"31604:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31569:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31593:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"31576:16:21"},"nodeType":"YulFunctionCall","src":"31576:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31566:2:21"},"nodeType":"YulFunctionCall","src":"31566:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31559:6:21"},"nodeType":"YulFunctionCall","src":"31559:42:21"},"nodeType":"YulIf","src":"31556:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31539:5:21","type":""}],"src":"31504:120:21"},{"body":{"nodeType":"YulBlock","src":"31681:86:21","statements":[{"nodeType":"YulAssignment","src":"31691:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31713:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31700:12:21"},"nodeType":"YulFunctionCall","src":"31700:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31691:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31755:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"31729:25:21"},"nodeType":"YulFunctionCall","src":"31729:32:21"},"nodeType":"YulExpressionStatement","src":"31729:32:21"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31659:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"31667:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31675:5:21","type":""}],"src":"31630:137:21"},{"body":{"nodeType":"YulBlock","src":"31838:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"31884:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31886:77:21"},"nodeType":"YulFunctionCall","src":"31886:79:21"},"nodeType":"YulExpressionStatement","src":"31886:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31859:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31868:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31855:3:21"},"nodeType":"YulFunctionCall","src":"31855:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"31880:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31851:3:21"},"nodeType":"YulFunctionCall","src":"31851:32:21"},"nodeType":"YulIf","src":"31848:119:21"},{"nodeType":"YulBlock","src":"31977:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31992:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32006:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31996:6:21","type":""}]},{"nodeType":"YulAssignment","src":"32021:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32055:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"32066:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32051:3:21"},"nodeType":"YulFunctionCall","src":"32051:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32075:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"32031:19:21"},"nodeType":"YulFunctionCall","src":"32031:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32021:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31808:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31819:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31831:6:21","type":""}],"src":"31773:327:21"},{"body":{"nodeType":"YulBlock","src":"32159:87:21","statements":[{"nodeType":"YulAssignment","src":"32169:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32177:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32169:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32197:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"32200:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32190:6:21"},"nodeType":"YulFunctionCall","src":"32190:14:21"},"nodeType":"YulExpressionStatement","src":"32190:14:21"},{"nodeType":"YulAssignment","src":"32213:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32231:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32234:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"32221:9:21"},"nodeType":"YulFunctionCall","src":"32221:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32213:4:21"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32146:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32154:4:21","type":""}],"src":"32106:140:21"},{"body":{"nodeType":"YulBlock","src":"32296:49:21","statements":[{"nodeType":"YulAssignment","src":"32306:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32324:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"32331:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32320:3:21"},"nodeType":"YulFunctionCall","src":"32320:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"32336:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32316:3:21"},"nodeType":"YulFunctionCall","src":"32316:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32306:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32279:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32289:6:21","type":""}],"src":"32252:93:21"},{"body":{"nodeType":"YulBlock","src":"32404:54:21","statements":[{"nodeType":"YulAssignment","src":"32414:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"32439:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"32445:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32435:3:21"},"nodeType":"YulFunctionCall","src":"32435:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32414:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"32379:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"32385:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"32395:8:21","type":""}],"src":"32351:107:21"},{"body":{"nodeType":"YulBlock","src":"32540:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32550:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"32571:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"32583:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32567:3:21"},"nodeType":"YulFunctionCall","src":"32567:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"32554:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32594:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32625:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32636:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32606:18:21"},"nodeType":"YulFunctionCall","src":"32606:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32598:4:21","type":""}]},{"nodeType":"YulAssignment","src":"32712:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32743:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"32754:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32724:18:21"},"nodeType":"YulFunctionCall","src":"32724:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32712:8:21"}]},{"nodeType":"YulAssignment","src":"32772:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32785:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"32796:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32792:3:21"},"nodeType":"YulFunctionCall","src":"32792:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32781:3:21"},"nodeType":"YulFunctionCall","src":"32781:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32772:5:21"}]},{"nodeType":"YulAssignment","src":"32811:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32824:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32835:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"32845:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32831:3:21"},"nodeType":"YulFunctionCall","src":"32831:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32821:2:21"},"nodeType":"YulFunctionCall","src":"32821:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32811:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32501:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"32508:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"32520:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32533:6:21","type":""}],"src":"32464:393:21"},{"body":{"nodeType":"YulBlock","src":"32923:82:21","statements":[{"nodeType":"YulAssignment","src":"32933:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32991:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32973:17:21"},"nodeType":"YulFunctionCall","src":"32973:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32964:8:21"},"nodeType":"YulFunctionCall","src":"32964:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32946:17:21"},"nodeType":"YulFunctionCall","src":"32946:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32933:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32903:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32913:9:21","type":""}],"src":"32863:142:21"},{"body":{"nodeType":"YulBlock","src":"33058:28:21","statements":[{"nodeType":"YulAssignment","src":"33068:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"33075:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33068:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33044:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33054:3:21","type":""}],"src":"33011:75:21"},{"body":{"nodeType":"YulBlock","src":"33168:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33178:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"33233:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33202:30:21"},"nodeType":"YulFunctionCall","src":"33202:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"33182:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33257:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33297:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33291:5:21"},"nodeType":"YulFunctionCall","src":"33291:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"33304:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"33336:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"33312:23:21"},"nodeType":"YulFunctionCall","src":"33312:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"33263:27:21"},"nodeType":"YulFunctionCall","src":"33263:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33250:6:21"},"nodeType":"YulFunctionCall","src":"33250:105:21"},"nodeType":"YulExpressionStatement","src":"33250:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33145:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33151:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"33159:7:21","type":""}],"src":"33092:269:21"},{"body":{"nodeType":"YulBlock","src":"33416:24:21","statements":[{"nodeType":"YulAssignment","src":"33426:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"33433:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33426:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33412:3:21","type":""}],"src":"33367:73:21"},{"body":{"nodeType":"YulBlock","src":"33499:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33509:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"33523:30:21"},"nodeType":"YulFunctionCall","src":"33523:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"33513:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33608:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"33614:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"33622:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33564:43:21"},"nodeType":"YulFunctionCall","src":"33564:65:21"},"nodeType":"YulExpressionStatement","src":"33564:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33485:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33491:6:21","type":""}],"src":"33446:189:21"},{"body":{"nodeType":"YulBlock","src":"33691:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"33758:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33802:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"33809:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"33772:29:21"},"nodeType":"YulFunctionCall","src":"33772:39:21"},"nodeType":"YulExpressionStatement","src":"33772:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33711:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"33718:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33708:2:21"},"nodeType":"YulFunctionCall","src":"33708:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33723:26:21","statements":[{"nodeType":"YulAssignment","src":"33725:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33738:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"33745:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33734:3:21"},"nodeType":"YulFunctionCall","src":"33734:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"33725:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"33705:2:21","statements":[]},"src":"33701:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"33679:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"33686:3:21","type":""}],"src":"33641:186:21"},{"body":{"nodeType":"YulBlock","src":"33911:463:21","statements":[{"body":{"nodeType":"YulBlock","src":"33937:430:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33951:53:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"33998:5:21"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"33967:30:21"},"nodeType":"YulFunctionCall","src":"33967:37:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"33955:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34017:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34040:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34068:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34050:17:21"},"nodeType":"YulFunctionCall","src":"34050:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34036:3:21"},"nodeType":"YulFunctionCall","src":"34036:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"34021:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"34237:27:21","statements":[{"nodeType":"YulAssignment","src":"34239:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"34254:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"34239:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34221:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"34233:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34218:2:21"},"nodeType":"YulFunctionCall","src":"34218:18:21"},"nodeType":"YulIf","src":"34215:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"34306:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34323:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34351:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34333:17:21"},"nodeType":"YulFunctionCall","src":"34333:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34319:3:21"},"nodeType":"YulFunctionCall","src":"34319:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"34277:28:21"},"nodeType":"YulFunctionCall","src":"34277:80:21"},"nodeType":"YulExpressionStatement","src":"34277:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33928:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"33933:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33925:2:21"},"nodeType":"YulFunctionCall","src":"33925:11:21"},"nodeType":"YulIf","src":"33922:445:21"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"33887:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"33894:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"33899:10:21","type":""}],"src":"33833:541:21"},{"body":{"nodeType":"YulBlock","src":"34443:54:21","statements":[{"nodeType":"YulAssignment","src":"34453:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34478:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"34484:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"34474:3:21"},"nodeType":"YulFunctionCall","src":"34474:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34453:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"34418:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"34424:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34434:8:21","type":""}],"src":"34380:117:21"},{"body":{"nodeType":"YulBlock","src":"34554:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"34564:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34613:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"34616:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34609:3:21"},"nodeType":"YulFunctionCall","src":"34609:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34628:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34624:3:21"},"nodeType":"YulFunctionCall","src":"34624:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"34580:28:21"},"nodeType":"YulFunctionCall","src":"34580:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34576:3:21"},"nodeType":"YulFunctionCall","src":"34576:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34568:4:21","type":""}]},{"nodeType":"YulAssignment","src":"34641:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34655:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"34661:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34651:3:21"},"nodeType":"YulFunctionCall","src":"34651:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34641:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34531:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"34537:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34547:6:21","type":""}],"src":"34503:169:21"},{"body":{"nodeType":"YulBlock","src":"34758:214:21","statements":[{"nodeType":"YulAssignment","src":"34891:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34918:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"34924:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34899:18:21"},"nodeType":"YulFunctionCall","src":"34899:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34891:4:21"}]},{"nodeType":"YulAssignment","src":"34937:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34948:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34958:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"34961:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34954:3:21"},"nodeType":"YulFunctionCall","src":"34954:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34945:2:21"},"nodeType":"YulFunctionCall","src":"34945:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"34937:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34739:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"34745:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"34753:4:21","type":""}],"src":"34677:295:21"},{"body":{"nodeType":"YulBlock","src":"35067:1300:21","statements":[{"nodeType":"YulVariableDeclaration","src":"35078:50:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35124:3:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"35092:31:21"},"nodeType":"YulFunctionCall","src":"35092:36:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"35082:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"35213:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35215:16:21"},"nodeType":"YulFunctionCall","src":"35215:18:21"},"nodeType":"YulExpressionStatement","src":"35215:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35185:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35193:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35182:2:21"},"nodeType":"YulFunctionCall","src":"35182:30:21"},"nodeType":"YulIf","src":"35179:56:21"},{"nodeType":"YulVariableDeclaration","src":"35245:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35291:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35285:5:21"},"nodeType":"YulFunctionCall","src":"35285:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"35259:25:21"},"nodeType":"YulFunctionCall","src":"35259:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"35249:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35389:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"35395:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"35403:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"35344:44:21"},"nodeType":"YulFunctionCall","src":"35344:66:21"},"nodeType":"YulExpressionStatement","src":"35344:66:21"},{"nodeType":"YulVariableDeclaration","src":"35420:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"35437:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"35424:9:21","type":""}]},{"nodeType":"YulAssignment","src":"35448:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"35461:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35448:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"35512:610:21","statements":[{"nodeType":"YulVariableDeclaration","src":"35526:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35545:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35557:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35553:3:21"},"nodeType":"YulFunctionCall","src":"35553:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35541:3:21"},"nodeType":"YulFunctionCall","src":"35541:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"35530:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35577:50:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35622:4:21"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"35591:30:21"},"nodeType":"YulFunctionCall","src":"35591:36:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"35581:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35640:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"35649:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35644:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"35708:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35733:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35751:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35756:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35747:3:21"},"nodeType":"YulFunctionCall","src":"35747:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35741:5:21"},"nodeType":"YulFunctionCall","src":"35741:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35726:6:21"},"nodeType":"YulFunctionCall","src":"35726:42:21"},"nodeType":"YulExpressionStatement","src":"35726:42:21"},{"nodeType":"YulAssignment","src":"35785:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35799:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35807:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35795:3:21"},"nodeType":"YulFunctionCall","src":"35795:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35785:6:21"}]},{"nodeType":"YulAssignment","src":"35826:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35843:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35854:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35839:3:21"},"nodeType":"YulFunctionCall","src":"35839:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35826:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35674:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"35677:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35671:2:21"},"nodeType":"YulFunctionCall","src":"35671:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35686:21:21","statements":[{"nodeType":"YulAssignment","src":"35688:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35697:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"35700:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35693:3:21"},"nodeType":"YulFunctionCall","src":"35693:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"35688:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"35667:3:21","statements":[]},"src":"35663:208:21"},{"body":{"nodeType":"YulBlock","src":"35907:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"35925:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35952:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35957:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35948:3:21"},"nodeType":"YulFunctionCall","src":"35948:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35942:5:21"},"nodeType":"YulFunctionCall","src":"35942:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"35929:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35992:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"36019:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36034:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36042:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36030:3:21"},"nodeType":"YulFunctionCall","src":"36030:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"36000:18:21"},"nodeType":"YulFunctionCall","src":"36000:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35985:6:21"},"nodeType":"YulFunctionCall","src":"35985:64:21"},"nodeType":"YulExpressionStatement","src":"35985:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"35890:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"35899:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35887:2:21"},"nodeType":"YulFunctionCall","src":"35887:19:21"},"nodeType":"YulIf","src":"35884:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36083:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36097:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36105:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36093:3:21"},"nodeType":"YulFunctionCall","src":"36093:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"36109:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36089:3:21"},"nodeType":"YulFunctionCall","src":"36089:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36076:6:21"},"nodeType":"YulFunctionCall","src":"36076:36:21"},"nodeType":"YulExpressionStatement","src":"36076:36:21"}]},"nodeType":"YulCase","src":"35505:617:21","value":{"kind":"number","nodeType":"YulLiteral","src":"35510:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"36139:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36153:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"36166:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"36157:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"36190:67:21","statements":[{"nodeType":"YulAssignment","src":"36208:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36227:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36232:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36223:3:21"},"nodeType":"YulFunctionCall","src":"36223:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36217:5:21"},"nodeType":"YulFunctionCall","src":"36217:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36208:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"36183:6:21"},"nodeType":"YulIf","src":"36180:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36277:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36336:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"36343:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"36283:52:21"},"nodeType":"YulFunctionCall","src":"36283:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36270:6:21"},"nodeType":"YulFunctionCall","src":"36270:81:21"},"nodeType":"YulExpressionStatement","src":"36270:81:21"}]},"nodeType":"YulCase","src":"36131:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35485:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35493:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35482:2:21"},"nodeType":"YulFunctionCall","src":"35482:14:21"},"nodeType":"YulSwitch","src":"35475:886:21"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35056:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"35062:3:21","type":""}],"src":"34977:1390:21"},{"body":{"nodeType":"YulBlock","src":"36415:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"36471:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36480:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36483:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36473:6:21"},"nodeType":"YulFunctionCall","src":"36473:12:21"},"nodeType":"YulExpressionStatement","src":"36473:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36438:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36462:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"36445:16:21"},"nodeType":"YulFunctionCall","src":"36445:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"36435:2:21"},"nodeType":"YulFunctionCall","src":"36435:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36428:6:21"},"nodeType":"YulFunctionCall","src":"36428:42:21"},"nodeType":"YulIf","src":"36425:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36408:5:21","type":""}],"src":"36373:120:21"},{"body":{"nodeType":"YulBlock","src":"36550:86:21","statements":[{"nodeType":"YulAssignment","src":"36560:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36582:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"36569:12:21"},"nodeType":"YulFunctionCall","src":"36569:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36560:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36624:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"36598:25:21"},"nodeType":"YulFunctionCall","src":"36598:32:21"},"nodeType":"YulExpressionStatement","src":"36598:32:21"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36528:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"36536:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36544:5:21","type":""}],"src":"36499:137:21"},{"body":{"nodeType":"YulBlock","src":"36707:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"36753:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36755:77:21"},"nodeType":"YulFunctionCall","src":"36755:79:21"},"nodeType":"YulExpressionStatement","src":"36755:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36728:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"36737:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36724:3:21"},"nodeType":"YulFunctionCall","src":"36724:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"36749:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36720:3:21"},"nodeType":"YulFunctionCall","src":"36720:32:21"},"nodeType":"YulIf","src":"36717:119:21"},{"nodeType":"YulBlock","src":"36846:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36861:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"36875:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36865:6:21","type":""}]},{"nodeType":"YulAssignment","src":"36890:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36924:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"36935:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36920:3:21"},"nodeType":"YulFunctionCall","src":"36920:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36944:7:21"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"36900:19:21"},"nodeType":"YulFunctionCall","src":"36900:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36890:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36677:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36688:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36700:6:21","type":""}],"src":"36642:327:21"},{"body":{"nodeType":"YulBlock","src":"37070:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37087:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"37092:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37080:6:21"},"nodeType":"YulFunctionCall","src":"37080:19:21"},"nodeType":"YulExpressionStatement","src":"37080:19:21"},{"nodeType":"YulAssignment","src":"37108:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37127:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37132:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37123:3:21"},"nodeType":"YulFunctionCall","src":"37123:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37108:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37042:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"37047:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37058:11:21","type":""}],"src":"36975:168:21"},{"body":{"nodeType":"YulBlock","src":"37239:283:21","statements":[{"nodeType":"YulVariableDeclaration","src":"37249:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37295:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37263:31:21"},"nodeType":"YulFunctionCall","src":"37263:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37253:6:21","type":""}]},{"nodeType":"YulAssignment","src":"37310:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37375:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"37380:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37317:57:21"},"nodeType":"YulFunctionCall","src":"37317:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37310:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37435:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"37442:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37431:3:21"},"nodeType":"YulFunctionCall","src":"37431:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"37449:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"37454:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"37396:34:21"},"nodeType":"YulFunctionCall","src":"37396:65:21"},"nodeType":"YulExpressionStatement","src":"37396:65:21"},{"nodeType":"YulAssignment","src":"37470:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37481:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37508:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"37486:21:21"},"nodeType":"YulFunctionCall","src":"37486:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37477:3:21"},"nodeType":"YulFunctionCall","src":"37477:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37470:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37220:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37227:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37235:3:21","type":""}],"src":"37149:373:21"},{"body":{"nodeType":"YulBlock","src":"37778:600:21","statements":[{"nodeType":"YulAssignment","src":"37788:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37811:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37796:3:21"},"nodeType":"YulFunctionCall","src":"37796:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37788:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37869:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37882:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37893:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37878:3:21"},"nodeType":"YulFunctionCall","src":"37878:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37825:43:21"},"nodeType":"YulFunctionCall","src":"37825:71:21"},"nodeType":"YulExpressionStatement","src":"37825:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37950:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37963:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37974:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37959:3:21"},"nodeType":"YulFunctionCall","src":"37959:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37906:43:21"},"nodeType":"YulFunctionCall","src":"37906:72:21"},"nodeType":"YulExpressionStatement","src":"37906:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38030:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38054:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38039:3:21"},"nodeType":"YulFunctionCall","src":"38039:18:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"37988:41:21"},"nodeType":"YulFunctionCall","src":"37988:70:21"},"nodeType":"YulExpressionStatement","src":"37988:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38110:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38123:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38134:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38119:3:21"},"nodeType":"YulFunctionCall","src":"38119:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"38068:41:21"},"nodeType":"YulFunctionCall","src":"38068:70:21"},"nodeType":"YulExpressionStatement","src":"38068:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38190:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38203:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38214:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38199:3:21"},"nodeType":"YulFunctionCall","src":"38199:19:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"38148:41:21"},"nodeType":"YulFunctionCall","src":"38148:71:21"},"nodeType":"YulExpressionStatement","src":"38148:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38240:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38251:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38236:3:21"},"nodeType":"YulFunctionCall","src":"38236:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38261:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38267:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38257:3:21"},"nodeType":"YulFunctionCall","src":"38257:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38229:6:21"},"nodeType":"YulFunctionCall","src":"38229:49:21"},"nodeType":"YulExpressionStatement","src":"38229:49:21"},{"nodeType":"YulAssignment","src":"38287:84:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"38357:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"38366:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38295:61:21"},"nodeType":"YulFunctionCall","src":"38295:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38287:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37710:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"37722:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37730:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37738:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37746:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37754:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37762:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37773:4:21","type":""}],"src":"37528:850:21"},{"body":{"nodeType":"YulBlock","src":"38426:52:21","statements":[{"nodeType":"YulAssignment","src":"38436:35:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38461:2:21","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"38465:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38457:3:21"},"nodeType":"YulFunctionCall","src":"38457:14:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"38436:8:21"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38407:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"38417:8:21","type":""}],"src":"38384:94:21"},{"body":{"nodeType":"YulBlock","src":"38531:47:21","statements":[{"nodeType":"YulAssignment","src":"38541:31:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38566:5:21"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"38552:13:21"},"nodeType":"YulFunctionCall","src":"38552:20:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38541:7:21"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38513:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38523:7:21","type":""}],"src":"38484:94:21"},{"body":{"nodeType":"YulBlock","src":"38631:53:21","statements":[{"nodeType":"YulAssignment","src":"38641:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38672:5:21"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"38652:19:21"},"nodeType":"YulFunctionCall","src":"38652:26:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38641:7:21"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38613:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38623:7:21","type":""}],"src":"38584:100:21"},{"body":{"nodeType":"YulBlock","src":"38773:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38790:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38833:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"38815:17:21"},"nodeType":"YulFunctionCall","src":"38815:24:21"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"38795:19:21"},"nodeType":"YulFunctionCall","src":"38795:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38783:6:21"},"nodeType":"YulFunctionCall","src":"38783:58:21"},"nodeType":"YulExpressionStatement","src":"38783:58:21"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38761:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38768:3:21","type":""}],"src":"38690:157:21"},{"body":{"nodeType":"YulBlock","src":"38898:32:21","statements":[{"nodeType":"YulAssignment","src":"38908:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"38919:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38908:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38880:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38890:7:21","type":""}],"src":"38853:77:21"},{"body":{"nodeType":"YulBlock","src":"38983:32:21","statements":[{"nodeType":"YulAssignment","src":"38993:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"39004:5:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38993:7:21"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38965:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38975:7:21","type":""}],"src":"38936:79:21"},{"body":{"nodeType":"YulBlock","src":"39104:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39121:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39164:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"39146:17:21"},"nodeType":"YulFunctionCall","src":"39146:24:21"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"39126:19:21"},"nodeType":"YulFunctionCall","src":"39126:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39114:6:21"},"nodeType":"YulFunctionCall","src":"39114:58:21"},"nodeType":"YulExpressionStatement","src":"39114:58:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39092:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39099:3:21","type":""}],"src":"39021:157:21"},{"body":{"nodeType":"YulBlock","src":"39227:53:21","statements":[{"nodeType":"YulAssignment","src":"39237:36:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39262:3:21","type":"","value":"192"},{"name":"value","nodeType":"YulIdentifier","src":"39267:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39258:3:21"},"nodeType":"YulFunctionCall","src":"39258:15:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"39237:8:21"}]}]},"name":"shift_left_192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39208:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"39218:8:21","type":""}],"src":"39184:96:21"},{"body":{"nodeType":"YulBlock","src":"39332:48:21","statements":[{"nodeType":"YulAssignment","src":"39342:32:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39368:5:21"}],"functionName":{"name":"shift_left_192","nodeType":"YulIdentifier","src":"39353:14:21"},"nodeType":"YulFunctionCall","src":"39353:21:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"39342:7:21"}]}]},"name":"leftAlign_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39314:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"39324:7:21","type":""}],"src":"39286:94:21"},{"body":{"nodeType":"YulBlock","src":"39467:72:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39484:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39525:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"39508:16:21"},"nodeType":"YulFunctionCall","src":"39508:23:21"}],"functionName":{"name":"leftAlign_t_uint64","nodeType":"YulIdentifier","src":"39489:18:21"},"nodeType":"YulFunctionCall","src":"39489:43:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39477:6:21"},"nodeType":"YulFunctionCall","src":"39477:56:21"},"nodeType":"YulExpressionStatement","src":"39477:56:21"}]},"name":"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39455:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39462:3:21","type":""}],"src":"39386:153:21"},{"body":{"nodeType":"YulBlock","src":"39743:476:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39816:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"39825:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39754:61:21"},"nodeType":"YulFunctionCall","src":"39754:75:21"},"nodeType":"YulExpressionStatement","src":"39754:75:21"},{"nodeType":"YulAssignment","src":"39838:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39849:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"39854:2:21","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39845:3:21"},"nodeType":"YulFunctionCall","src":"39845:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39838:3:21"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39929:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"39938:3:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39867:61:21"},"nodeType":"YulFunctionCall","src":"39867:75:21"},"nodeType":"YulExpressionStatement","src":"39867:75:21"},{"nodeType":"YulAssignment","src":"39951:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39962:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"39967:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39958:3:21"},"nodeType":"YulFunctionCall","src":"39958:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39951:3:21"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40042:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"40051:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39980:61:21"},"nodeType":"YulFunctionCall","src":"39980:75:21"},"nodeType":"YulExpressionStatement","src":"39980:75:21"},{"nodeType":"YulAssignment","src":"40064:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40075:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40080:2:21","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40071:3:21"},"nodeType":"YulFunctionCall","src":"40071:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40064:3:21"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40153:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"40162:3:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40093:59:21"},"nodeType":"YulFunctionCall","src":"40093:73:21"},"nodeType":"YulExpressionStatement","src":"40093:73:21"},{"nodeType":"YulAssignment","src":"40175:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40186:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40191:1:21","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40182:3:21"},"nodeType":"YulFunctionCall","src":"40182:11:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40175:3:21"}]},{"nodeType":"YulAssignment","src":"40203:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"40210:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40203:3:21"}]}]},"name":"abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39698:3:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39704:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39712:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39720:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39728:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39739:3:21","type":""}],"src":"39545:674:21"},{"body":{"nodeType":"YulBlock","src":"40268:162:21","statements":[{"nodeType":"YulAssignment","src":"40278:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40300:1:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"40283:16:21"},"nodeType":"YulFunctionCall","src":"40283:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40278:1:21"}]},{"nodeType":"YulAssignment","src":"40311:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40333:1:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"40316:16:21"},"nodeType":"YulFunctionCall","src":"40316:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40311:1:21"}]},{"nodeType":"YulAssignment","src":"40344:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40355:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"40358:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40351:3:21"},"nodeType":"YulFunctionCall","src":"40351:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"40344:3:21"}]},{"body":{"nodeType":"YulBlock","src":"40401:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40403:16:21"},"nodeType":"YulFunctionCall","src":"40403:18:21"},"nodeType":"YulExpressionStatement","src":"40403:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"40376:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40381:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40373:2:21"},"nodeType":"YulFunctionCall","src":"40373:27:21"},"nodeType":"YulIf","src":"40370:53:21"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40255:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"40258:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"40264:3:21","type":""}],"src":"40225:205:21"},{"body":{"nodeType":"YulBlock","src":"40562:206:21","statements":[{"nodeType":"YulAssignment","src":"40572:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40584:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40595:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40580:3:21"},"nodeType":"YulFunctionCall","src":"40580:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40572:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40652:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40665:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40676:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40661:3:21"},"nodeType":"YulFunctionCall","src":"40661:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40608:43:21"},"nodeType":"YulFunctionCall","src":"40608:71:21"},"nodeType":"YulExpressionStatement","src":"40608:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40733:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40746:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40757:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40742:3:21"},"nodeType":"YulFunctionCall","src":"40742:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40689:43:21"},"nodeType":"YulFunctionCall","src":"40689:72:21"},"nodeType":"YulExpressionStatement","src":"40689:72:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40526:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40538:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40546:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40557:4:21","type":""}],"src":"40436:332:21"},{"body":{"nodeType":"YulBlock","src":"40802:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40819:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40822:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40812:6:21"},"nodeType":"YulFunctionCall","src":"40812:88:21"},"nodeType":"YulExpressionStatement","src":"40812:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40916:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40919:4:21","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40909:6:21"},"nodeType":"YulFunctionCall","src":"40909:15:21"},"nodeType":"YulExpressionStatement","src":"40909:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40940:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40943:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40933:6:21"},"nodeType":"YulFunctionCall","src":"40933:15:21"},"nodeType":"YulExpressionStatement","src":"40933:15:21"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"40774:180:21"},{"body":{"nodeType":"YulBlock","src":"41023:80:21","statements":[{"nodeType":"YulAssignment","src":"41033:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41048:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41042:5:21"},"nodeType":"YulFunctionCall","src":"41042:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41033:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41091:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"41064:26:21"},"nodeType":"YulFunctionCall","src":"41064:33:21"},"nodeType":"YulExpressionStatement","src":"41064:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41001:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"41009:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41017:5:21","type":""}],"src":"40960:143:21"},{"body":{"nodeType":"YulBlock","src":"41186:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"41232:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"41234:77:21"},"nodeType":"YulFunctionCall","src":"41234:79:21"},"nodeType":"YulExpressionStatement","src":"41234:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"41207:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"41216:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41203:3:21"},"nodeType":"YulFunctionCall","src":"41203:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"41228:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41199:3:21"},"nodeType":"YulFunctionCall","src":"41199:32:21"},"nodeType":"YulIf","src":"41196:119:21"},{"nodeType":"YulBlock","src":"41325:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41340:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"41354:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"41344:6:21","type":""}]},{"nodeType":"YulAssignment","src":"41369:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41415:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"41426:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41411:3:21"},"nodeType":"YulFunctionCall","src":"41411:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"41435:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"41379:31:21"},"nodeType":"YulFunctionCall","src":"41379:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"41369:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41156:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"41167:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"41179:6:21","type":""}],"src":"41109:351:21"},{"body":{"nodeType":"YulBlock","src":"41592:206:21","statements":[{"nodeType":"YulAssignment","src":"41602:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41625:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41610:3:21"},"nodeType":"YulFunctionCall","src":"41610:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41602:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41682:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41695:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41706:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41691:3:21"},"nodeType":"YulFunctionCall","src":"41691:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41638:43:21"},"nodeType":"YulFunctionCall","src":"41638:71:21"},"nodeType":"YulExpressionStatement","src":"41638:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41763:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41776:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41787:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41772:3:21"},"nodeType":"YulFunctionCall","src":"41772:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41719:43:21"},"nodeType":"YulFunctionCall","src":"41719:72:21"},"nodeType":"YulExpressionStatement","src":"41719:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41556:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41568:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41576:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41587:4:21","type":""}],"src":"41466:332:21"},{"body":{"nodeType":"YulBlock","src":"41910:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41932:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"41940:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41928:3:21"},"nodeType":"YulFunctionCall","src":"41928:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"41944:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41921:6:21"},"nodeType":"YulFunctionCall","src":"41921:48:21"},"nodeType":"YulExpressionStatement","src":"41921:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41902:6:21","type":""}],"src":"41804:172:21"},{"body":{"nodeType":"YulBlock","src":"42128:220:21","statements":[{"nodeType":"YulAssignment","src":"42138:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42204:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"42209:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42145:58:21"},"nodeType":"YulFunctionCall","src":"42145:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42138:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42310:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"42221:88:21"},"nodeType":"YulFunctionCall","src":"42221:93:21"},"nodeType":"YulExpressionStatement","src":"42221:93:21"},{"nodeType":"YulAssignment","src":"42323:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42334:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"42339:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42330:3:21"},"nodeType":"YulFunctionCall","src":"42330:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42323:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42116:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42124:3:21","type":""}],"src":"41982:366:21"},{"body":{"nodeType":"YulBlock","src":"42525:248:21","statements":[{"nodeType":"YulAssignment","src":"42535:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42547:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42558:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42543:3:21"},"nodeType":"YulFunctionCall","src":"42543:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42535:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42582:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42593:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42578:3:21"},"nodeType":"YulFunctionCall","src":"42578:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42601:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"42607:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42597:3:21"},"nodeType":"YulFunctionCall","src":"42597:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42571:6:21"},"nodeType":"YulFunctionCall","src":"42571:47:21"},"nodeType":"YulExpressionStatement","src":"42571:47:21"},{"nodeType":"YulAssignment","src":"42627:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42761:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42635:124:21"},"nodeType":"YulFunctionCall","src":"42635:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42627:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42505:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42520:4:21","type":""}],"src":"42354:419:21"},{"body":{"nodeType":"YulBlock","src":"42844:31:21","statements":[{"nodeType":"YulAssignment","src":"42855:13:21","value":{"name":"len","nodeType":"YulIdentifier","src":"42865:3:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42855:6:21"}]}]},"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42822:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"42829:3:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42837:6:21","type":""}],"src":"42779:96:21"},{"body":{"nodeType":"YulBlock","src":"42939:28:21","statements":[{"nodeType":"YulAssignment","src":"42949:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"42957:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"42949:4:21"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"42926:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"42934:4:21","type":""}],"src":"42881:86:21"},{"body":{"nodeType":"YulBlock","src":"43017:105:21","statements":[{"nodeType":"YulAssignment","src":"43027:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43042:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"43049:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43038:3:21"},"nodeType":"YulFunctionCall","src":"43038:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"43027:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42999:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43009:7:21","type":""}],"src":"42973:149:21"},{"body":{"nodeType":"YulBlock","src":"43224:452:21","statements":[{"nodeType":"YulVariableDeclaration","src":"43235:59:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"43283:5:21"},{"name":"len","nodeType":"YulIdentifier","src":"43290:3:21"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"43249:33:21"},"nodeType":"YulFunctionCall","src":"43249:45:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"43239:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43303:21:21","value":{"name":"array","nodeType":"YulIdentifier","src":"43319:5:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"43307:8:21","type":""}]},{"nodeType":"YulAssignment","src":"43334:49:21","value":{"arguments":[{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"43373:8:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"43360:12:21"},"nodeType":"YulFunctionCall","src":"43360:22:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"43343:16:21"},"nodeType":"YulFunctionCall","src":"43343:40:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43334:5:21"}]},{"body":{"nodeType":"YulBlock","src":"43410:259:21","statements":[{"nodeType":"YulAssignment","src":"43424:235:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43454:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43521:1:21","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43528:1:21","type":"","value":"4"},{"name":"length","nodeType":"YulIdentifier","src":"43531:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43524:3:21"},"nodeType":"YulFunctionCall","src":"43524:14:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"43517:3:21"},"nodeType":"YulFunctionCall","src":"43517:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"43561:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"43477:18:21"},"nodeType":"YulFunctionCall","src":"43477:168:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43433:3:21"},"nodeType":"YulFunctionCall","src":"43433:226:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43424:5:21"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43399:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"43407:1:21","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43396:2:21"},"nodeType":"YulFunctionCall","src":"43396:13:21"},"nodeType":"YulIf","src":"43393:276:21"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"43203:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"43210:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"43218:5:21","type":""}],"src":"43128:548:21"},{"body":{"nodeType":"YulBlock","src":"43771:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43788:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43791:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43781:6:21"},"nodeType":"YulFunctionCall","src":"43781:12:21"},"nodeType":"YulExpressionStatement","src":"43781:12:21"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"43682:117:21"},{"body":{"nodeType":"YulBlock","src":"43894:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43911:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43914:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43904:6:21"},"nodeType":"YulFunctionCall","src":"43904:12:21"},"nodeType":"YulExpressionStatement","src":"43904:12:21"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"43805:117:21"},{"body":{"nodeType":"YulBlock","src":"44054:343:21","statements":[{"body":{"nodeType":"YulBlock","src":"44092:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"44094:77:21"},"nodeType":"YulFunctionCall","src":"44094:79:21"},"nodeType":"YulExpressionStatement","src":"44094:79:21"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"44070:10:21"},{"name":"endIndex","nodeType":"YulIdentifier","src":"44082:8:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44067:2:21"},"nodeType":"YulFunctionCall","src":"44067:24:21"},"nodeType":"YulIf","src":"44064:111:21"},{"body":{"nodeType":"YulBlock","src":"44208:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"44210:77:21"},"nodeType":"YulFunctionCall","src":"44210:79:21"},"nodeType":"YulExpressionStatement","src":"44210:79:21"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"44190:8:21"},{"name":"length","nodeType":"YulIdentifier","src":"44200:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44187:2:21"},"nodeType":"YulFunctionCall","src":"44187:20:21"},"nodeType":"YulIf","src":"44184:107:21"},{"nodeType":"YulAssignment","src":"44300:44:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44317:6:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"44329:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"44341:1:21","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44325:3:21"},"nodeType":"YulFunctionCall","src":"44325:18:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44313:3:21"},"nodeType":"YulFunctionCall","src":"44313:31:21"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"44300:9:21"}]},{"nodeType":"YulAssignment","src":"44353:38:21","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"44370:8:21"},{"name":"startIndex","nodeType":"YulIdentifier","src":"44380:10:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44366:3:21"},"nodeType":"YulFunctionCall","src":"44366:25:21"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"44353:9:21"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43992:6:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"44000:6:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"44008:10:21","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"44020:8:21","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"44033:9:21","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"44044:9:21","type":""}],"src":"43928:469:21"},{"body":{"nodeType":"YulBlock","src":"44492:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44509:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44512:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44502:6:21"},"nodeType":"YulFunctionCall","src":"44502:12:21"},"nodeType":"YulExpressionStatement","src":"44502:12:21"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"44403:117:21"},{"body":{"nodeType":"YulBlock","src":"44615:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44632:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44635:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44625:6:21"},"nodeType":"YulFunctionCall","src":"44625:12:21"},"nodeType":"YulExpressionStatement","src":"44625:12:21"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"44526:117:21"},{"body":{"nodeType":"YulBlock","src":"44698:84:21","statements":[{"nodeType":"YulAssignment","src":"44708:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44730:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"44717:12:21"},"nodeType":"YulFunctionCall","src":"44717:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44708:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44770:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"44746:23:21"},"nodeType":"YulFunctionCall","src":"44746:30:21"},"nodeType":"YulExpressionStatement","src":"44746:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44676:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"44684:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"44692:5:21","type":""}],"src":"44649:133:21"},{"body":{"nodeType":"YulBlock","src":"44914:339:21","statements":[{"body":{"nodeType":"YulBlock","src":"44958:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"44960:77:21"},"nodeType":"YulFunctionCall","src":"44960:79:21"},"nodeType":"YulExpressionStatement","src":"44960:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"44935:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"44940:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44931:3:21"},"nodeType":"YulFunctionCall","src":"44931:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"44952:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44927:3:21"},"nodeType":"YulFunctionCall","src":"44927:30:21"},"nodeType":"YulIf","src":"44924:117:21"},{"nodeType":"YulAssignment","src":"45050:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45075:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"45059:15:21"},"nodeType":"YulFunctionCall","src":"45059:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45050:5:21"}]},{"nodeType":"YulBlock","src":"45090:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"45134:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"45148:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45138:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45174:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"45181:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45170:3:21"},"nodeType":"YulFunctionCall","src":"45170:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45210:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"45221:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45206:3:21"},"nodeType":"YulFunctionCall","src":"45206:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"45230:3:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"45188:17:21"},"nodeType":"YulFunctionCall","src":"45188:46:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45163:6:21"},"nodeType":"YulFunctionCall","src":"45163:72:21"},"nodeType":"YulExpressionStatement","src":"45163:72:21"}]}]},"name":"abi_decode_t_struct$_ExtraArgsV1_$2654_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44889:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"44900:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"44908:5:21","type":""}],"src":"44830:423:21"},{"body":{"nodeType":"YulBlock","src":"45354:292:21","statements":[{"body":{"nodeType":"YulBlock","src":"45400:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"45402:77:21"},"nodeType":"YulFunctionCall","src":"45402:79:21"},"nodeType":"YulExpressionStatement","src":"45402:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"45375:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"45384:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45371:3:21"},"nodeType":"YulFunctionCall","src":"45371:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"45396:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"45367:3:21"},"nodeType":"YulFunctionCall","src":"45367:32:21"},"nodeType":"YulIf","src":"45364:119:21"},{"nodeType":"YulBlock","src":"45493:146:21","statements":[{"nodeType":"YulVariableDeclaration","src":"45508:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"45522:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45512:6:21","type":""}]},{"nodeType":"YulAssignment","src":"45537:92:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45601:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"45612:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45597:3:21"},"nodeType":"YulFunctionCall","src":"45597:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"45621:7:21"}],"functionName":{"name":"abi_decode_t_struct$_ExtraArgsV1_$2654_memory_ptr","nodeType":"YulIdentifier","src":"45547:49:21"},"nodeType":"YulFunctionCall","src":"45547:82:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"45537:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45324:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"45335:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"45347:6:21","type":""}],"src":"45259:387:21"},{"body":{"nodeType":"YulBlock","src":"45701:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45718:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45738:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"45723:14:21"},"nodeType":"YulFunctionCall","src":"45723:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45711:6:21"},"nodeType":"YulFunctionCall","src":"45711:34:21"},"nodeType":"YulExpressionStatement","src":"45711:34:21"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45689:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45696:3:21","type":""}],"src":"45652:99:21"},{"body":{"nodeType":"YulBlock","src":"45961:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"45971:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45987:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"45992:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45983:3:21"},"nodeType":"YulFunctionCall","src":"45983:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"45975:4:21","type":""}]},{"nodeType":"YulBlock","src":"46007:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"46051:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46081:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"46088:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46077:3:21"},"nodeType":"YulFunctionCall","src":"46077:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46071:5:21"},"nodeType":"YulFunctionCall","src":"46071:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"46055:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"46135:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46153:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"46158:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46149:3:21"},"nodeType":"YulFunctionCall","src":"46149:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"46107:27:21"},"nodeType":"YulFunctionCall","src":"46107:57:21"},"nodeType":"YulExpressionStatement","src":"46107:57:21"}]}]},"name":"abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45948:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45955:3:21","type":""}],"src":"45837:344:21"},{"body":{"nodeType":"YulBlock","src":"46343:182:21","statements":[{"nodeType":"YulAssignment","src":"46353:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46365:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46376:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46361:3:21"},"nodeType":"YulFunctionCall","src":"46361:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46353:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46491:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46504:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46515:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46500:3:21"},"nodeType":"YulFunctionCall","src":"46500:17:21"}],"functionName":{"name":"abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46389:101:21"},"nodeType":"YulFunctionCall","src":"46389:129:21"},"nodeType":"YulExpressionStatement","src":"46389:129:21"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr__to_t_struct$_ExtraArgsV1_$2654_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46315:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46327:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46338:4:21","type":""}],"src":"46187:338:21"},{"body":{"nodeType":"YulBlock","src":"46637:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46659:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46667:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46655:3:21"},"nodeType":"YulFunctionCall","src":"46655:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"46671:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46648:6:21"},"nodeType":"YulFunctionCall","src":"46648:49:21"},"nodeType":"YulExpressionStatement","src":"46648:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46629:6:21","type":""}],"src":"46531:173:21"},{"body":{"nodeType":"YulBlock","src":"46856:220:21","statements":[{"nodeType":"YulAssignment","src":"46866:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46932:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"46937:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46873:58:21"},"nodeType":"YulFunctionCall","src":"46873:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46866:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47038:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"46949:88:21"},"nodeType":"YulFunctionCall","src":"46949:93:21"},"nodeType":"YulExpressionStatement","src":"46949:93:21"},{"nodeType":"YulAssignment","src":"47051:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47062:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"47067:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47058:3:21"},"nodeType":"YulFunctionCall","src":"47058:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47051:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46844:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46852:3:21","type":""}],"src":"46710:366:21"},{"body":{"nodeType":"YulBlock","src":"47253:248:21","statements":[{"nodeType":"YulAssignment","src":"47263:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47275:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47286:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47271:3:21"},"nodeType":"YulFunctionCall","src":"47271:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47263:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47310:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47321:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47306:3:21"},"nodeType":"YulFunctionCall","src":"47306:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47329:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"47335:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47325:3:21"},"nodeType":"YulFunctionCall","src":"47325:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47299:6:21"},"nodeType":"YulFunctionCall","src":"47299:47:21"},"nodeType":"YulExpressionStatement","src":"47299:47:21"},{"nodeType":"YulAssignment","src":"47355:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47489:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47363:124:21"},"nodeType":"YulFunctionCall","src":"47363:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47355:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47233:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47248:4:21","type":""}],"src":"47082:419:21"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LinkTokenInterface_$371_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LinkTokenInterface_$371_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LinkTokenInterface_$371__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$248_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$248_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$248__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct VRFV2PlusClient.RandomWordsRequest\n    function abi_decode_t_struct$_RandomWordsRequest_$2667_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 192) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_RandomWordsRequest_$2667_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_RandomWordsRequest_$2667_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function shift_left_192(value) -> newValue {\n        newValue :=\n\n        shl(192, value)\n\n    }\n\n    function leftAlign_t_uint64(value) -> aligned {\n        aligned := shift_left_192(value)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint64(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 8)\n\n        end := pos\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes4(calldataload(dataArea))\n\n        if lt(length, 4) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(4, length)),\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct VRFV2PlusClient.ExtraArgsV1\n    function abi_decode_t_struct$_ExtraArgsV1_$2654_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x20)\n\n        {\n            // nativePayment\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_ExtraArgsV1_$2654_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct VRFV2PlusClient.ExtraArgsV1 -> struct VRFV2PlusClient.ExtraArgsV1\n    function abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // nativePayment\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr__to_t_struct$_ExtraArgsV1_$2654_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3728":[{"length":32,"start":3366},{"length":32,"start":4548}],"3730":[{"length":32,"start":3297},{"length":32,"start":12913}],"3732":[{"length":32,"start":3430},{"length":32,"start":4444}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xAEFB212F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDAC83D29 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDAC83D29 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDC311DD3 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0xDCAB3DCF EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x806 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xAEFB212F EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xB2A7CAC5 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xBEC4C08C EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xCB631797 EQ PUSH2 0x71F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x9B1C385E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9B1C385E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x9D40A6FD EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xAA433AFF EQ PUSH2 0x667 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x953E9C75 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x95B55CFC EQ PUSH2 0x58F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x72E9D565 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x72E9D565 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x8402595E EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x86FE91C7 EQ PUSH2 0x4E5 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x65982744 EQ PUSH2 0x428 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x13478329 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13478329 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18E3DD27 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x1EEBC117 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x2F622E6B EQ PUSH2 0x36E JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x88070F5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xAE09540 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x115E3C0D EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x4666 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x4715 JUMP JUMPDEST PUSH2 0xF71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x476E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x482A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x11E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x48DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x48F8 JUMP JUMPDEST PUSH2 0x1308 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x4925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x1513 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x49A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH2 0x164F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x4883 JUMP JUMPDEST PUSH2 0x1844 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x525 PUSH2 0x19DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x48DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x1C6A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x4A0A JUMP JUMPDEST PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x4A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x628 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x4A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x4B16 JUMP JUMPDEST PUSH2 0x247C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x26EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x4715 JUMP JUMPDEST PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x2878 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x2A89 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x2C27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x46D5 JUMP JUMPDEST PUSH2 0x2FE6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x798 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH2 0x326F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x47B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x804 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x48F8 JUMP JUMPDEST PUSH2 0x3293 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x48F8 JUMP JUMPDEST PUSH2 0x3565 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x13 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9CB SWAP1 PUSH2 0x4DB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F7 SWAP1 PUSH2 0x4DB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xB26 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAAA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB01 JUMPI PUSH2 0xB00 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB18 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB0 JUMP JUMPDEST POP PUSH2 0xB6B JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB89 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x4F52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP8 PUSH1 0x60 ADD MLOAD MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCC9 JUMPI PUSH2 0xCC8 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x4F9D JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xDA6 JUMPI PUSH32 0x0 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x4F9D JUMP JUMPDEST PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x5042 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x10 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x4248 JUMP JUMPDEST POP POP DUP7 PUSH1 0x0 ADD MLOAD DUP12 PUSH32 0xAEB4B4786571E184246D39587F659ABF0E26F41F6A3358692250382C0CDB47B7 DUP14 DUP5 DUP8 DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE45 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xE64 DUP2 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0xE6C PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE78 DUP6 PUSH2 0x367D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xEB0 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF61 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP5 DUP5 PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114D SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x11EE PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x11F6 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x122F PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3A67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12D0 DUP3 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xD623472500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1310 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x13D9 PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3A67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x150A PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C2 SWAP3 SWAP2 SWAP1 PUSH2 0x51E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x523E JUMP JUMPDEST PUSH2 0x3A67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x151B PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2D118A6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D6 SWAP1 PUSH2 0x52C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x17EC PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1840 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180C JUMPI PUSH2 0x180B PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x183A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x8F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x184C PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18C5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19BC JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1903 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1940 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x4AED7C8EED0496C8C19EA2681FCCA25741C1602342E38B045D9F1E8E905D2E9C DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19B1 SWAP3 SWAP2 SWAP1 PUSH2 0x5309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C72 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x1CB1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLVALUE PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2F SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D86 SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x7603B205D03651EE812F803FCCDE89F1012E545A9C99F0ABFEA9CEDD0FD8E902 DUP3 CALLVALUE DUP5 PUSH2 0x1DE3 SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF1 SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E07 PUSH2 0x3631 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD CALLDATALOAD CALLER PUSH2 0x1E17 DUP3 DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x1E5A JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E51 SWAP3 SWAP2 SWAP1 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F14 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2F SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1F57 PUSH2 0x1F52 DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1F4D SWAP2 SWAP1 PUSH2 0x536A JUMP JUMPDEST PUSH2 0x3BB2 JUMP JUMPDEST PUSH2 0x3CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F81 SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F9F SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1FBA SWAP2 SWAP1 PUSH2 0x536A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2080 SWAP2 SWAP1 PUSH2 0x55C8 JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP10 PUSH1 0x0 ADD CALLDATALOAD PUSH32 0xEB0E3652E0F44F417695E6E90F2F42C99B65CD7169074C5A654B16B9748C3A4E DUP7 DUP7 DUP14 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20DB SWAP2 SWAP1 PUSH2 0x56C6 JUMP JUMPDEST DUP15 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20EE SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST DUP16 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2101 SWAP2 SWAP1 PUSH2 0x53F9 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH2 0x2114 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x573D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214E PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x1 NUMBER PUSH2 0x2177 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST BLOCKHASH ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x218D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x584E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP2 POP PUSH1 0x1 DUP2 PUSH2 0x21B5 SWAP2 SWAP1 PUSH2 0x589C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2227 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2426 SWAP3 SWAP2 SWAP1 PUSH2 0x4288 JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x243E DUP4 PUSH1 0x8 PUSH2 0x3D42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP3 PUSH32 0x1D3015D7BA850FA198DC7B1A3F5D42779313A681035F77C8C03764C61005518D CALLER PUSH1 0x40 MLOAD PUSH2 0x246F SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2484 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x2548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x2559 SWAP2 SWAP1 PUSH2 0x48B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x259A PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2618 SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x266F SWAP2 SWAP1 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP8 DUP5 PUSH2 0x26CC SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26DA SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26F2 PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2736 DUP2 PUSH2 0x3B49 JUMP JUMPDEST PUSH2 0x2740 DUP3 DUP3 PUSH2 0x3D5C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2752 PUSH1 0x8 PUSH2 0x3EF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x278D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1390F2A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH2 0x279B SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT DUP1 PUSH2 0x27AB JUMPI POP PUSH1 0x0 DUP5 EQ JUMPDEST PUSH2 0x27B5 JUMPI DUP1 PUSH2 0x27B7 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP3 PUSH2 0x27C7 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E3 JUMPI PUSH2 0x27E2 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2811 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x286E JUMPI PUSH2 0x283E DUP8 DUP3 PUSH2 0x282E SWAP2 SWAP1 PUSH2 0x4FDF JUMP JUMPDEST PUSH1 0x8 PUSH2 0x3F05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x2867 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2880 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x28C4 DUP2 PUSH2 0x3B49 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29A0 JUMPI PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2997 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xD4114AB6E9AF9F597C52041F32D62DC57C5C4E4C0D4427006069635E216C9386 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2A7D SWAP3 SWAP2 SWAP1 PUSH2 0x58D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x2A93 DUP2 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0x2A9B PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2B0C JUMPI POP PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x64 PUSH2 0xFFFF AND DUP2 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x2B68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH32 0x1E980D04AA7648E205713E5E8EA3808672AC163D10936D36F91B2C88AC1575E1 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C17 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2C31 DUP2 PUSH2 0x3579 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C3D DUP3 DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x2C80 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C77 SWAP3 SWAP2 SWAP1 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C88 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D2C JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D23 SWAP3 SWAP2 SWAP1 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2DC4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2D7A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x2DDB SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2F38 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E13 JUMPI PUSH2 0x2E12 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F27 JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E4B JUMPI PUSH2 0x2E4A PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E7E JUMPI PUSH2 0x2E7D PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2EEC JUMPI PUSH2 0x2EEB PUSH2 0x5901 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2F38 JUMP JUMPDEST DUP1 PUSH2 0x2F31 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH32 0x32158C6058347C1601B2D12BC696AC6901D8A9A9AA3BA10C27AB0A983E8425A7 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2FD5 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2FF0 DUP2 PUSH2 0x3579 JUMP JUMPDEST PUSH2 0x2FF8 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30E4 JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x21A4DAD170A6BF476C31BBCF4A16628295B0E450672EEC25D7C93308E05344A1 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x30DB SWAP3 SWAP2 SWAP1 PUSH2 0x58D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3134 DUP3 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3255 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x320B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x329B PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3323 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3380 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x339D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C1 SWAP2 SWAP1 PUSH2 0x5945 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3437 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342E SWAP3 SWAP2 SWAP1 PUSH2 0x4DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3560 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x344D SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34AC SWAP3 SWAP2 SWAP1 PUSH2 0x5972 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34EF SWAP2 SWAP1 PUSH2 0x523E JUMP JUMPDEST PUSH2 0x3525 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C07FC4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3556 SWAP3 SWAP2 SWAP1 PUSH2 0x5972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x356D PUSH2 0x39D7 JUMP JUMPDEST PUSH2 0x3576 DUP2 PUSH2 0x3F1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x35BD DUP2 PUSH2 0x3B49 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x362D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3624 SWAP2 SWAP1 PUSH2 0x49CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x367B JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37FB JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3727 JUMPI PUSH2 0x3726 PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH2 0x37F4 SWAP1 PUSH2 0x4E69 JUMP JUMPDEST SWAP1 POP PUSH2 0x3708 JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x386E SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST POP POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x38F3 DUP6 PUSH1 0x8 PUSH2 0x404B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3962 JUMPI DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3933 SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39D0 JUMPI DUP3 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x39A1 SWAP2 SWAP1 PUSH2 0x51A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5C SWAP1 PUSH2 0x59E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x3A9E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3AC7 SWAP1 PUSH2 0x50EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3B04 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B09 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3B44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3BBA PUSH2 0x4333 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x3BDE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0x3CA4 JUMP JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 DUP4 SWAP1 PUSH2 0x3C2B SWAP2 SWAP1 PUSH2 0x5A3E JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x3C81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5247FDCE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x3C94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AA7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3CA1 SWAP2 SWAP1 PUSH2 0x5B38 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3CDE SWAP2 SWAP1 PUSH2 0x5B90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D54 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x4065 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3D68 DUP5 PUSH2 0x367D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3DDA JUMPI POP PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3E96 JUMPI PUSH2 0x3E95 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E4D SWAP3 SWAP2 SWAP1 PUSH2 0x5972 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E90 SWAP2 SWAP1 PUSH2 0x523E JUMP JUMPDEST PUSH2 0x3A67 JUMP JUMPDEST JUMPDEST PUSH2 0x3EAE DUP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AA1 JUMP JUMPDEST DUP4 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3EE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EFE DUP3 PUSH1 0x0 ADD PUSH2 0x40D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F14 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x40E6 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F84 SWAP1 PUSH2 0x5BF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405D DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x4111 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4071 DUP4 DUP4 PUSH2 0x4225 JUMP JUMPDEST PUSH2 0x40CA JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x40CF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x40FE JUMPI PUSH2 0x40FD PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x4219 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x4143 SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x415B SWAP2 SWAP1 PUSH2 0x4F69 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x41CA JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x417C JUMPI PUSH2 0x417B PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x41A0 JUMPI PUSH2 0x419F PUSH2 0x4E0B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x41DE JUMPI PUSH2 0x41DD PUSH2 0x5901 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x421F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x4254 SWAP1 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x4266 JUMPI POP PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4284 SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4301 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4300 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x42A8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x430E SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4330 SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4361 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4349 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437C DUP2 PUSH2 0x4365 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x439B DUP2 PUSH2 0x4382 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43B6 DUP2 PUSH2 0x43A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D2 DUP2 PUSH2 0x43BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x43EE PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x4373 JUMP JUMPDEST PUSH2 0x43FB PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x4408 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x43AD JUMP JUMPDEST PUSH2 0x4415 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x4422 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x442F PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x443C PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x4449 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x43C9 JUMP JUMPDEST PUSH2 0x4457 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x43C9 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448C DUP2 PUSH2 0x4479 JUMP JUMPDEST DUP2 EQ PUSH2 0x4497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44A9 DUP2 PUSH2 0x4483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44DA DUP3 PUSH2 0x44AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44EA DUP2 PUSH2 0x44CF JUMP JUMPDEST DUP2 EQ PUSH2 0x44F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4507 DUP2 PUSH2 0x44E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x455B DUP3 PUSH2 0x4512 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x457A JUMPI PUSH2 0x4579 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458D PUSH2 0x4465 JUMP JUMPDEST SWAP1 POP PUSH2 0x4599 DUP3 DUP3 PUSH2 0x4552 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45B9 JUMPI PUSH2 0x45B8 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45E2 PUSH2 0x45DD DUP5 PUSH2 0x459E JUMP JUMPDEST PUSH2 0x4583 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4605 JUMPI PUSH2 0x4604 PUSH2 0x45CA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x462E JUMPI DUP1 PUSH2 0x461A DUP9 DUP3 PUSH2 0x449A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4607 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x464D JUMPI PUSH2 0x464C PUSH2 0x450D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x465D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x467F JUMPI PUSH2 0x467E PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x468D DUP7 DUP3 DUP8 ADD PUSH2 0x449A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x469E DUP7 DUP3 DUP8 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46BF JUMPI PUSH2 0x46BE PUSH2 0x4474 JUMP JUMPDEST JUMPDEST PUSH2 0x46CB DUP7 DUP3 DUP8 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46EC JUMPI PUSH2 0x46EB PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46FA DUP6 DUP3 DUP7 ADD PUSH2 0x449A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x470B DUP6 DUP3 DUP7 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x472C JUMPI PUSH2 0x472B PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x473A DUP6 DUP3 DUP7 ADD PUSH2 0x449A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x474B DUP6 DUP3 DUP7 ADD PUSH2 0x449A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4768 DUP2 PUSH2 0x4755 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4783 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x475F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47AA DUP2 PUSH2 0x4789 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x47A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F0 PUSH2 0x47EB PUSH2 0x47E6 DUP5 PUSH2 0x44AF JUMP JUMPDEST PUSH2 0x47CB JUMP JUMPDEST PUSH2 0x44AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4802 DUP3 PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4814 DUP3 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4824 DUP2 PUSH2 0x4809 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x483F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x481B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4850 DUP3 PUSH2 0x44AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4860 DUP2 PUSH2 0x4845 JUMP JUMPDEST DUP2 EQ PUSH2 0x486B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x487D DUP2 PUSH2 0x4857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4899 JUMPI PUSH2 0x4898 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48A7 DUP5 DUP3 DUP6 ADD PUSH2 0x486E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48C6 JUMPI PUSH2 0x48C5 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48D4 DUP5 DUP3 DUP6 ADD PUSH2 0x449A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x490E JUMPI PUSH2 0x490D PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x491C DUP5 DUP3 DUP6 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x493A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4957 JUMPI PUSH2 0x4956 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4965 DUP6 DUP3 DUP7 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4976 DUP6 DUP3 DUP7 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498B DUP3 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499B DUP2 PUSH2 0x4980 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x49C5 DUP2 PUSH2 0x44CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A01 JUMPI PUSH2 0x4A00 PUSH2 0x49E6 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A20 JUMPI PUSH2 0x4A1F PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A3E JUMPI PUSH2 0x4A3D PUSH2 0x4474 JUMP JUMPDEST JUMPDEST PUSH2 0x4A4A DUP5 DUP3 DUP6 ADD PUSH2 0x49EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A5C DUP2 PUSH2 0x4479 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A9A DUP2 PUSH2 0x4A7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4AD6 JUMPI PUSH2 0x4AD5 PUSH2 0x450D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AF3 JUMPI PUSH2 0x4AF2 PUSH2 0x4ABB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4B0F JUMPI PUSH2 0x4B0E PUSH2 0x45CA JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4B30 JUMPI PUSH2 0x4B2F PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3E DUP8 DUP3 DUP9 ADD PUSH2 0x44F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4B4F DUP8 DUP3 DUP9 ADD PUSH2 0x449A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B70 JUMPI PUSH2 0x4B6F PUSH2 0x4474 JUMP JUMPDEST JUMPDEST PUSH2 0x4B7C DUP8 DUP3 DUP9 ADD PUSH2 0x4AC0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BBF DUP2 PUSH2 0x4479 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD1 DUP4 DUP4 PUSH2 0x4BB6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF5 DUP3 PUSH2 0x4B8A JUMP JUMPDEST PUSH2 0x4BFF DUP2 DUP6 PUSH2 0x4B95 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C0A DUP4 PUSH2 0x4BA6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C3B JUMPI DUP2 MLOAD PUSH2 0x4C22 DUP9 DUP3 PUSH2 0x4BC5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4C2D DUP4 PUSH2 0x4BDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4C0E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C62 DUP2 DUP5 PUSH2 0x4BEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C9F DUP2 PUSH2 0x44CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CB1 DUP4 DUP4 PUSH2 0x4C96 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD5 DUP3 PUSH2 0x4C6A JUMP JUMPDEST PUSH2 0x4CDF DUP2 DUP6 PUSH2 0x4C75 JUMP JUMPDEST SWAP4 POP PUSH2 0x4CEA DUP4 PUSH2 0x4C86 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D1B JUMPI DUP2 MLOAD PUSH2 0x4D02 DUP9 DUP3 PUSH2 0x4CA5 JUMP JUMPDEST SWAP8 POP PUSH2 0x4D0D DUP4 PUSH2 0x4CBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4CEE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4D3D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x47A1 JUMP JUMPDEST PUSH2 0x4D4A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x47A1 JUMP JUMPDEST PUSH2 0x4D57 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4A91 JUMP JUMPDEST PUSH2 0x4D64 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x4D76 DUP2 DUP5 PUSH2 0x4CCA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4DC9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4DDC JUMPI PUSH2 0x4DDB PUSH2 0x4D82 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4DF7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x4E04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E74 DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4EA6 JUMPI PUSH2 0x4EA5 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4EC6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A53 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4ED8 DUP2 DUP5 PUSH2 0x4BEA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F15 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4EFA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F2C DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH2 0x4F36 DUP2 DUP6 PUSH2 0x4EEC JUMP JUMPDEST SWAP4 POP PUSH2 0x4F46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5E DUP3 DUP5 PUSH2 0x4F21 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F74 DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F7F DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4F97 JUMPI PUSH2 0x4F96 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA8 DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FB3 DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4FC1 DUP2 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4FD8 JUMPI PUSH2 0x4FD7 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FEA DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF5 DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x500D JUMPI PUSH2 0x500C PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x504D DUP3 PUSH2 0x4479 JUMP JUMPDEST SWAP2 POP PUSH2 0x5058 DUP4 PUSH2 0x4479 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5068 JUMPI PUSH2 0x5067 PUSH2 0x5013 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5088 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x5095 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x47A1 JUMP JUMPDEST PUSH2 0x50A2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x43AD JUMP JUMPDEST PUSH2 0x50AF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x43AD JUMP JUMPDEST PUSH2 0x50BC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x43AD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50D6 PUSH1 0x0 DUP4 PUSH2 0x4EEC JUMP JUMPDEST SWAP2 POP PUSH2 0x50E1 DUP3 PUSH2 0x50C6 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F7 DUP3 PUSH2 0x50C9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x511C PUSH2 0x5117 PUSH2 0x5112 DUP5 PUSH2 0x4789 JUMP JUMPDEST PUSH2 0x47CB JUMP JUMPDEST PUSH2 0x4479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x512C DUP2 PUSH2 0x5101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5147 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x5154 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5123 JUMP JUMPDEST PUSH2 0x5161 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5123 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5174 DUP3 PUSH2 0x4789 JUMP JUMPDEST SWAP2 POP PUSH2 0x517F DUP4 PUSH2 0x4789 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51A3 JUMPI PUSH2 0x51A2 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51B4 DUP3 PUSH2 0x4789 JUMP JUMPDEST SWAP2 POP PUSH2 0x51BF DUP4 PUSH2 0x4789 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51E3 JUMPI PUSH2 0x51E2 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x51FE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x520B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5123 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x521B DUP2 PUSH2 0x43A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5238 DUP2 PUSH2 0x5212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5254 JUMPI PUSH2 0x5253 PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5262 DUP5 DUP3 DUP6 ADD PUSH2 0x5229 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B2 PUSH1 0x16 DUP4 PUSH2 0x526B JUMP JUMPDEST SWAP2 POP PUSH2 0x52BD DUP3 PUSH2 0x527C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52E1 DUP2 PUSH2 0x52A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52F3 DUP3 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5303 DUP2 PUSH2 0x52E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x531E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x52FA JUMP JUMPDEST PUSH2 0x532B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5347 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x5354 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x49BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x5387 JUMPI PUSH2 0x5386 PUSH2 0x535B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x53A9 JUMPI PUSH2 0x53A8 PUSH2 0x5360 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x53C5 JUMPI PUSH2 0x53C4 PUSH2 0x5365 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D6 DUP2 PUSH2 0x4382 JUMP JUMPDEST DUP2 EQ PUSH2 0x53E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53F3 DUP2 PUSH2 0x53CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x540F JUMPI PUSH2 0x540E PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x541D DUP5 DUP3 DUP6 ADD PUSH2 0x53E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5488 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x544B JUMP JUMPDEST PUSH2 0x5492 DUP7 DUP4 PUSH2 0x544B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C5 PUSH2 0x54C0 PUSH2 0x54BB DUP5 PUSH2 0x4479 JUMP JUMPDEST PUSH2 0x47CB JUMP JUMPDEST PUSH2 0x4479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54DF DUP4 PUSH2 0x54AA JUMP JUMPDEST PUSH2 0x54F3 PUSH2 0x54EB DUP3 PUSH2 0x54CC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5458 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5508 PUSH2 0x54FB JUMP JUMPDEST PUSH2 0x5513 DUP2 DUP5 DUP5 PUSH2 0x54D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5537 JUMPI PUSH2 0x552C PUSH1 0x0 DUP3 PUSH2 0x5500 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5519 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x557C JUMPI PUSH2 0x554D DUP2 PUSH2 0x5426 JUMP JUMPDEST PUSH2 0x5556 DUP5 PUSH2 0x543B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5565 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5579 PUSH2 0x5571 DUP6 PUSH2 0x543B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5518 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5581 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B8 DUP4 DUP4 PUSH2 0x558E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55D1 DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55EA JUMPI PUSH2 0x55E9 PUSH2 0x4523 JUMP JUMPDEST JUMPDEST PUSH2 0x55F4 DUP3 SLOAD PUSH2 0x4DB1 JUMP JUMPDEST PUSH2 0x55FF DUP3 DUP3 DUP6 PUSH2 0x553B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5632 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5620 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x562A DUP6 DUP3 PUSH2 0x55AC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5692 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5640 DUP7 PUSH2 0x5426 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5668 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5643 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5685 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5681 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x558E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x56A3 DUP2 PUSH2 0x4365 JUMP JUMPDEST DUP2 EQ PUSH2 0x56AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x56C0 DUP2 PUSH2 0x569A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56DC JUMPI PUSH2 0x56DB PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x56EA DUP5 DUP3 DUP6 ADD PUSH2 0x56B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570F DUP3 PUSH2 0x4EE1 JUMP JUMPDEST PUSH2 0x5719 DUP2 DUP6 PUSH2 0x56F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5729 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF7 JUMP JUMPDEST PUSH2 0x5732 DUP2 PUSH2 0x4512 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x5752 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x575F PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4A53 JUMP JUMPDEST PUSH2 0x576C PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4373 JUMP JUMPDEST PUSH2 0x5779 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4392 JUMP JUMPDEST PUSH2 0x5786 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4392 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x5798 DUP2 DUP5 PUSH2 0x5704 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57BD DUP3 PUSH2 0x57A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57CF DUP3 PUSH2 0x57B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57E7 PUSH2 0x57E2 DUP3 PUSH2 0x44CF JUMP JUMPDEST PUSH2 0x57C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5812 PUSH2 0x580D DUP3 PUSH2 0x57ED JUMP JUMPDEST PUSH2 0x57F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5830 DUP3 PUSH2 0x5818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5848 PUSH2 0x5843 DUP3 PUSH2 0x4A7D JUMP JUMPDEST PUSH2 0x5825 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585A DUP3 DUP8 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x586A DUP3 DUP7 PUSH2 0x5801 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x587A DUP3 DUP6 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x588A DUP3 DUP5 PUSH2 0x5837 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58A7 DUP3 PUSH2 0x4A7D JUMP JUMPDEST SWAP2 POP PUSH2 0x58B2 DUP4 PUSH2 0x4A7D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58D2 JUMPI PUSH2 0x58D1 PUSH2 0x4E3A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x58ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x58FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x49BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x593F DUP2 PUSH2 0x4483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x595B JUMPI PUSH2 0x595A PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5969 DUP5 DUP3 DUP6 ADD PUSH2 0x5930 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5987 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x5994 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59D1 PUSH1 0x16 DUP4 PUSH2 0x526B JUMP JUMPDEST SWAP2 POP PUSH2 0x59DC DUP3 PUSH2 0x599B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A00 DUP2 PUSH2 0x59C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A4A DUP4 DUP4 PUSH2 0x5A07 JUMP JUMPDEST DUP3 PUSH2 0x5A55 DUP2 CALLDATALOAD PUSH2 0x5A12 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x5A95 JUMPI PUSH2 0x5A90 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x544B JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x5ABB JUMPI PUSH2 0x5ABA PUSH2 0x5A9D JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x5ACC JUMPI PUSH2 0x5ACB PUSH2 0x5AA2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5AF6 DUP2 PUSH2 0x5212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B12 JUMPI PUSH2 0x5B11 PUSH2 0x5AE2 JUMP JUMPDEST JUMPDEST PUSH2 0x5B1C PUSH1 0x20 PUSH2 0x4583 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5B2C DUP5 DUP3 DUP6 ADD PUSH2 0x5AE7 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B4E JUMPI PUSH2 0x5B4D PUSH2 0x446F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B5C DUP5 DUP3 DUP6 ADD PUSH2 0x5AFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B6E DUP2 PUSH2 0x43A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5B8A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5B65 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BE1 PUSH1 0x17 DUP4 PUSH2 0x526B JUMP JUMPDEST SWAP2 POP PUSH2 0x5BEC DUP3 PUSH2 0x5BAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C10 DUP2 PUSH2 0x5BD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 MUL PUSH22 0xFB1436620D93153BBD5811CC21D64DD343EAE989BCB1 BYTE 0xE7 PUSH7 0xF0FA48DA64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"476:8662:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3619:1430:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8627:386;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5877:398;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;631:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4812:34:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;812:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:34:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11860:341:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9017:119:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11341:356:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1189:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8566:354;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:316:2;;;;;;;;;;;;;:::i;:::-;;3168:171:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10548:632:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4476:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1891:397:17;;;;;;;;;;;;;:::i;:::-;;1382:81:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2292:142:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12969:675:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6795:926:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3674:31:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14873:937;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12205:708;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9169:220;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14252:565;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16418:530;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17004:912;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7777:794:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15866:496:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13700;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;592:35:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9517:888:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;847:98:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7796:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3619:1430:17:-;3736:16;3755:9;3736:28;;3806:1;3774:10;:22;3785:10;3774:22;;;;;;;;;;;:28;;;:33;3770:77;;3824:16;;;;;;;;;;;;;;3770:77;3852:18;3873:10;:22;3884:10;3873:22;;;;;;;;;;;3852:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3923:1;3906:6;:13;:18;3902:284;;3957:3;:12;;;3943:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3934:36;;3983:9;3978:119;4002:3;:12;;;3998:16;;:1;:16;3978:119;;;4072:10;4084:1;4061:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4051:36;;;;;;4043:45;;4031:6;4038:1;4031:9;;;;;;;;:::i;:::-;;;;;;;:57;;;;;4016:3;;;;;:::i;:::-;;;;3978:119;;;;3902:284;;;4130:3;:12;;;4113:29;;:6;:13;:29;4109:77;;4159:20;;;;;;;;;;;;;;4109:77;3902:284;4192:23;4221:20;4267:32;;;4301:10;4313:6;4244:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4221:99;;4352:4;4326:8;:23;;;:30;;;;;;;;;;;;;;;;;;4434:12;4452:9;:14;;4472:3;:20;;;4452:50;;4494:7;4452:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4433:69;;;4534:5;4508:8;:23;;;:31;;;;;;;;;;;;;;;;;;4546:18;4617:1;4573:3;:13;;;4610:1;4587:3;:13;;;:20;:24;;;;:::i;:::-;4573:39;;;;;;;;:::i;:::-;;;;;;;;;;4567:46;;:51;;;4546:72;;4625:18;4685:11;4660:36;;4672:9;4661:8;:20;;;;:::i;:::-;4660:36;;;;:::i;:::-;4646:10;:51;;;;;;:::i;:::-;4625:72;;4708:13;4703:98;;4774:19;4752:10;4745:4;:17;;;;:::i;:::-;4744:50;;;;:::i;:::-;4731:63;;4703:98;4806:14;4830:10;4806:35;;4915:10;:22;4926:10;4915:22;;;;;;;;;;;;4907:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4994:3;:9;;;4970:10;4949:95;4982:10;5005:7;5014:13;5029:7;5038:5;4949:95;;;;;;;;;;:::i;:::-;;;;;;;;3730:1319;;;;;;;;3619:1430;;;:::o;8627:386::-;8715:6;19288:20:9;19302:5;19288:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;8743:14:17::2;8759:20:::0;8783:27:::2;8803:6;8783:19;:27::i;:::-;8742:68;;;;8818:12;8836:3;:8;;8860:13;8852:22;;8836:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8817:62;;;8890:7;8885:56;;8914:20;;;;;;;;;;;;;;8885:56;8972:6;8951:57;8980:3;8985:7;8994:13;8951:57;;;;;;;;:::i;:::-;;;;;;;;8736:277;;;8627:386:::0;;;:::o;5877:398::-;6000:1;5953:49;;:21;:29;5975:6;5953:29;;;;;;;;;;;:35;;;;;;;;;;;;:49;;;5949:98;;6019:21;;;;;;;;;;;;;;5949:98;6052:18;6073:15;:23;6089:6;6073:23;;;;;;;;;;;:31;;;;;;;;;;;;6052:52;;;;6152:7;6110:15;:23;6126:6;6110:23;;;;;;;;;;;:31;;;:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6191:7;6166:14;;:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6229:6;6210:60;6237:10;6262:7;6249:10;:20;;;;:::i;:::-;6210:60;;;;;;;:::i;:::-;;;;;;;;5943:332;5877:398;;:::o;631:43::-;;;:::o;4812:34:9:-;;;;;;;;;;;;;:::o;812:30::-;;;;;;;;;;;;;:::o;554:34:17:-;;;:::o;11860:341:9:-;7874:15;:13;:15::i;:::-;2075:20:2::1;:18;:20::i;:::-;11949:13:9::2;11965:20;;;;;;;;;;;11949:36;;11991:37;12026:1;12017:6;:10;;;11991:25;:37::i;:::-;12119:1;12096:20;;:24;;;;;;;;;;;;;;;;;;12150:6;12126:20;;:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12162:34;12178:9;12189:6;12162:34;;:15;:34::i;:::-;11943:258;11860:341:::0;:::o;9017:119:17:-;9096:4;9115:16;;;;;;;;;;;;;;11341:356:9;7874:15;:13;:15::i;:::-;2075:20:2::1;:18;:20::i;:::-;11445:1:9::2;11420:27;;11428:4;;;;;;;;;;;11420:27;;::::0;11416:67:::2;;11464:12;;;;;;;;;;;;;;11416:67;11488:13;11504:20;;;;;;;;;;;11488:36;;11530:37;11565:1;11556:6;:10;;;11530:25;:37::i;:::-;11596:1;11573:20;;:24;;;;;;;;;;;;;;;;;;11621:6;11603:14;;:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11633:59;11659:4;;;;;;;;;;;:13;;;11673:9;11684:6;11659:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11633:25;:59::i;:::-;11410:287;11341:356:::0;:::o;1189:42::-;1228:3;1189:42;:::o;8566:354::-;2075:20:2;:18;:20::i;:::-;8775:1:9::1;8750:27;;8758:4;;;;;;;;;;;8750:27;;;8746:71;;8794:16;;;;;;;;;;;;;;8746:71;8848:4;8822;;:31;;;;;;;;;;;;;;;;;;8900:14;8859:16;;:56;;;;;;;;;;;;;;;;;;8566:354:::0;;:::o;938:45::-;;;;;;;;;;;;;:::o;1026:316:2:-;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;3168:171:17:-;7874:15:9;:13;:15::i;:::-;3263:71:17::1;3294:10;3306:9;3331:1;3317:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3263:30;:71::i;:::-;3168:171:::0;;:::o;10548:632:9:-;2075:20:2;:18;:20::i;:::-;10621:23:9::1;10647:21;10621:47;;10674:23;10708:20;;;;;;;;;;;10700:29;;10674:55;;10757:15;10739;:33;10735:119;;;10814:15;10831;10789:58;;;;;;;;;;;;:::i;:::-;;;;;;;;10735:119;10881:15;10863;:33;10859:263;;;10906:14;10941:15;10923;:33;;;;:::i;:::-;10906:50;;10965:9;10980:2;:7;;10995:6;10980:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10964:42;;;11019:4;11014:57;;11042:20;;;;;;;;;;;;;;11014:57;11083:32;11104:2;11108:6;11083:32;;;;;;;:::i;:::-;;;;;;;;10898:224;;10859:263;10615:565;;10548:632:::0;:::o;4476:28::-;;;;;;;;;;;;;:::o;1891:397:17:-;2075:20:2;:18;:20::i;:::-;1946:315:17::1;;;;;;;;1990:1;1946:315;;;;;;2012:1;1946:315;;;;;;2101:5;1946:315;;;;;;2039:1;1946:315;;;;;;2076:1;1946:315;;;;;;2143:1;1946:315;;;;;;2187:1;1946:315;;;;;;2221:1;1946:315;;;;;;2253:1;1946:315;;;;::::0;1935:8:::1;:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:11;;;;;;;;;;1891:397::o:0;1382:81:2:-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;2292:142:17:-;2373:4;2392:11;:22;2404:9;2392:22;;;;;;;;;;;;;;;:30;2415:6;2392:30;;;;;;;;;;;:37;;;;;;;;;;;;2385:44;;2292:142;;;;:::o;12969:675:9:-;7874:15;:13;:15::i;:::-;13065:61:::1;13091:21;:28;13113:5;13091:28;;;;;;;;;;;:34;;;;;;;;;;;;13065:25;:61::i;:::-;13372:24;13399:15;:22;13415:5;13399:22;;;;;;;;;;;:36;;;;;;;;;;;;13372:63;;;;13488:9;13441:15;:22;13457:5;13441:22;;;;;;;;;;;:36;;;:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13535:9;13504:20;;:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13585:5;13556:83;13592:16;13629:9;13610:16;:28;;;;:::i;:::-;13556:83;;;;;;;:::i;:::-;;;;;;;;13059:585;12969:675:::0;:::o;6795:926:17:-;6963:7;7874:15:9;:13;:15::i;:::-;6930:4:17::1;:10;;;6942;2511:34;2527:6;2535:9;2511:15;:34::i;:::-;2506:97;;2578:6;2586:9;2562:34;;;;;;;;;;;;:::i;:::-;;;;;;;;2506:97;6978:13:::2;6994:4;:10;;;6978:26;;7060:1;7014:48;;:21;:28;7036:5;7014:28;;;;;;;;;;;:34;;;;;;;;;;;;:48;;::::0;7010:97:::2;;7079:21;;;;;;;;;;;;;;7010:97;7113:17;7133:15;;:17;;;;;;;;;:::i;:::-;;;;;7113:37;;7156:15;7174:13;;:15;;;;;;;;;:::i;:::-;;;;;7156:33;;7196:27;7226:56;7255:26;7266:4;:14;;;;;;;;:::i;:::-;7255:10;:26::i;:::-;7226:28;:56::i;:::-;7196:86;;7312:151;;;;;;;;7335:4;:10;;;7312:151;;;;7371:4;:21;;;;;;;;;;:::i;:::-;7312:151;;;;;;7410:4;:13;;;;;;;;;;:::i;:::-;7312:151;;;;;;7442:4;:14;;;;;;;;:::i;:::-;7312:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;7288:10:::2;:21;7299:9;7288:21;;;;;;;;;;;:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7678:10;7475:219;;7555:4;:10;;;7503:4;:12;;;7475:219;7523:9;7540:7;7573:4;:25;;;;;;;;;;:::i;:::-;7606:4;:21;;;;;;;;;;:::i;:::-;7635:4;:13;;;;;;;;;;:::i;:::-;7656:14;7475:219;;;;;;;;;;;:::i;:::-;;;;;;;;7707:9;7700:16;;;;;;7895:1:9::1;;6795:926:17::0;;;:::o;3674:31:9:-;;;;;;;;;;;;;:::o;14873:937::-;14943:13;7874:15;:13;:15::i;:::-;15023:22:::1;15048:17;;;;;;;;;;;15023:42;;15121:10;15158:1;15143:12;:16;;;;:::i;:::-;15133:27;15170:4;15177:15;15104:89;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15094:100;;;;;;15079:121;;15071:129;;15293:1;15275:15;:19;;;;:::i;:::-;15255:17;;:39;;;;;;;;;;;;;;;;;;15337:26;15380:1:::0;15366:16:::1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15337:45;;15413:57;;;;;;;;15436:1;15413:57;;;;;;15454:1;15413:57;;;;;;15467:1;15413:57;;;;::::0;15388:15:::1;:22;15404:5;15388:22;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15507:113;;;;;;;;15541:10;15507:113;;;;;;15583:1;15507:113;;;;;;15604:9;15507:113;;::::0;15476:21:::1;:28;15498:5;15476:28;;;;;;;;;;;:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;15718:19;15731:5;15718:8;:12;;:19;;;;:::i;:::-;;15769:5;15749:38;15776:10;15749:38;;;;;;:::i;:::-;;;;;;;;15793:12;;14873:937:::0;:::o;12205:708::-;7874:15;:13;:15::i;:::-;12352:4:::1;;;;;;;;;;;12330:27;;:10;:27;;;12326:77;;12374:22;;;;;;;;;;;;;;12326:77;12427:2;12412:4;;:11;;:17;12408:62;;12446:17;;;;;;;;;;;;;;12408:62;12475:13;12502:4;;12491:27;;;;;;;:::i;:::-;12475:43;;12524:61;12550:21;:28;12572:5;12550:28;;;;;;;;;;;:34;;;;;;;;;;;;12524:25;:61::i;:::-;12696:18;12717:15;:22;12733:5;12717:22;;;;;;;;;;;:30;;;;;;;;;;;;12696:51;;;;12794:6;12753:15;:22;12769:5;12753:22;;;;;;;;;;;:30;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12832:6;12807:14;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12869:5;12850:58;12876:10;12901:6;12888:10;:19;;;;:::i;:::-;12850:58;;;;;;;:::i;:::-;;;;;;;;12320:593;;12205:708:::0;;;;:::o;9169:220::-;2075:20:2;:18;:20::i;:::-;9242:16:9::1;9261:21;:28;9283:5;9261:28;;;;;;;;;;;:34;;;;;;;;;;;;9242:53;;9301:35;9327:8;9301:25;:35::i;:::-;9342:42;9368:5;9375:8;9342:25;:42::i;:::-;9236:153;9169:220:::0;:::o;14252:565::-;14368:20;14396:15;14414:17;:8;:15;:17::i;:::-;14396:35;;14455:7;14441:10;:21;14437:51;;14471:17;;;;;;;;;;;;;;14437:51;14494:16;14526:8;14513:10;:21;;;;:::i;:::-;14494:40;;14562:7;14551:8;:18;:35;;;;14585:1;14573:8;:13;14551:35;:56;;14599:8;14551:56;;;14589:7;14551:56;14540:67;;14613:17;14644:10;14633:8;:21;;;;:::i;:::-;14613:41;;14680:9;14666:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14660:30;;14701:11;14696:101;14724:9;14718:3;:15;14696:101;;;14761:29;14779:10;14773:3;:16;;;;:::i;:::-;14761:8;:11;;:29;;;;:::i;:::-;14750:3;14754;14750:8;;;;;;;;:::i;:::-;;;;;;;:40;;;;;14735:5;;;;:::i;:::-;;;14696:101;;;;14802:10;;;14252:565;;;;:::o;16418:530::-;7874:15;:13;:15::i;:::-;16511:16:::1;16530:21;:28;16552:5;16530:28;;;;;;;;;;;:34;;;;;;;;;;;;16511:53;;16570:35;16596:8;16570:25;:35::i;:::-;16662:10;16615:57;;:21;:28;16637:5;16615:28;;;;;;;;;;;:43;;;;;;;;;;;;:57;;;16611:150;;16710:21;:28;16732:5;16710:28;;;;;;;;;;;:43;;;;;;;;;;;;16689:65;;;;;;;;;;;:::i;:::-;;;;;;;;16611:150;16803:10;16766:21;:28;16788:5;16766:28;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;16873:1;16819:21;:28;16841:5;16819:28;;;;;;;;;;;:43;;;:56;;;;;;;;;;;;;;;;;;16915:5;16886:57;16922:8;16932:10;16886:57;;;;;;;:::i;:::-;;;;;;;;16505:443;16418:530:::0;:::o;17004:912::-;17089:5;19288:20;19302:5;19288:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;17115:37:::2;17155:11;:21;17167:8;17155:21;;;;;;;;;;;;;;;:28;17177:5;17155:28;;;;;;;;;;;17115:68;;17193:14;:21;;;;;;;;;;;;17189:165;;;17341:7;;;17189:165;17412:27;17442:21;:28;17464:5;17442:28;;;;;;;;;;;:38;;17412:68;;1228:3;17490:33;;:9;:16;;;;:33:::0;17486:79:::2;;17540:18;;;;;;;;;;;;;;17486:79;17823:4;17799:14;:21;;;:28;;;;;;;;;;;;;;;;;;17833:9;17848:8;17833:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17895:5;17869:42;17902:8;17869:42;;;;;;:::i;:::-;;;;;;;;17109:807;;7895:1;17004:912:::0;;;:::o;7777:794:17:-;7879:6;19288:20:9;19302:5;19288:13;:20::i;:::-;7905:6:17::1;7913:9;2511:34;2527:6;2535:9;2511:15;:34::i;:::-;2506:97;;2578:6;2586:9;2562:34;;;;;;;;;;;;:::i;:::-;;;;;;;;2506:97;7874:15:9::2;:13;:15::i;:::-;7948:11:17::3;:22;7960:9;7948:22;;;;;;;;;;;;;;;:30;7971:6;7948:30;;;;;;;;;;;:37;;;;;;;;;;;;7943:100;;8018:6;8026:9;8002:34;;;;;;;;;;;;:::i;:::-;;;;;;;;7943:100;8048:26;8077:21;:29;8099:6;8077:29;;;;;;;;;;;:39;;8048:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8122:25;8169:1;8150:9;:16;:20;;;;:::i;:::-;8122:48;;8181:9;8176:283;8200:9;:16;8196:1;:20;8176:283;;;8251:9;8235:25;;:9;8245:1;8235:12;;;;;;;;:::i;:::-;;;;;;;;:25;;::::0;8231:222:::3;;8272:12;8287:9;8297:17;8287:28;;;;;;;;:::i;:::-;;;;;;;;8272:43;;8370:4;8325:21;:29;8347:6;8325:29;;;;;;;;;;;:39;;8365:1;8325:42;;;;;;;;:::i;:::-;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;8384:21;:29;8406:6;8384:29;;;;;;;;;;;:39;;:45;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8439:5;;;8231:222;8218:3;;;;:::i;:::-;;;8176:283;;;;8504:5;8464:11;:22;8476:9;8464:22;;;;;;;;;;;;;;;:30;8487:6;8464:30;;;;;;;;;;;:37;;;:45;;;;;;;;;;;;;;;;;;8548:6;8520:46;8556:9;8520:46;;;;;;:::i;:::-;;;;;;;;7937:634;;19314:1:9::1;;7777:794:17::0;;;:::o;15866:496:9:-;15984:5;19288:20;19302:5;19288:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;16090:45:::2;16138:21;:28;16160:5;16138:28;;;;;;;;;;;16090:76;;16213:8;16176:45;;:18;:33;;;;;;;;;;;;:45;;;16172:186;;16267:8;16231:18;:33;;;:44;;;;;;;;;;;;;;;;;;16323:5;16288:63;16330:10;16342:8;16288:63;;;;;;;:::i;:::-;;;;;;;;16172:186;16004:358;15866:496:::0;;;:::o;13700:::-;13794:14;13810:20;13832:15;13849:16;13867:26;13914:21;:28;13936:5;13914:28;;;;;;;;;;;:34;;;;;;;;;;;;13903:45;;13954:35;13980:8;13954:25;:35::i;:::-;14010:15;:22;14026:5;14010:22;;;;;;;;;;;:30;;;;;;;;;;;;14048:15;:22;14064:5;14048:22;;;;;;;;;;;:36;;;;;;;;;;;;14092:15;:22;14108:5;14092:22;;;;;;;;;;;:31;;;;;;;;;;;;14131:8;14147:21;:28;14169:5;14147:28;;;;;;;;;;;:38;;13995:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13700:496;;;;;;;:::o;592:35:17:-;;;:::o;9517:888:9:-;2075:20:2;:18;:20::i;:::-;9833:1:9::1;9808:27;;9816:4;;;;;;;;;;;9808:27;;::::0;9804:67:::1;;9852:12;;;;;;;;;;;;;;9804:67;9877:23;9903:4;;;;;;;;;;;:14;;;9926:4;9903:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9877:55;;9938:23;9972:14;;;;;;;;;;;9964:23;;9938:49;;10015:15;9997;:33;9993:119;;;10072:15;10089;10047:58;;;;;;;;;;;;:::i;:::-;;;;;;;;9993:119;10139:15;10121;:33;10117:230;;;10164:14;10199:15;10181;:33;;;;:::i;:::-;10164:50;;10227:4;;;;;;;;;;;:13;;;10241:2;10245:6;10227:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10222:80;;10271:22;;;;;;;;;;;;;;10222:80;10314:26;10329:2;10333:6;10314:26;;;;;;;:::i;:::-;;;;;;;;10156:191;10117:230;9570:835;;9517:888:::0;:::o;847:98:2:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;19324:236:9:-;19382:16;19401:21;:28;19423:5;19401:28;;;;;;;;;;;:34;;;;;;;;;;;;19382:53;;19441:35;19467:8;19441:25;:35::i;:::-;19500:8;19486:22;;:10;:22;;;19482:74;;19540:8;19525:24;;;;;;;;;;;:::i;:::-;;;;;;;;19482:74;19376:184;19324:236;:::o;7905:111::-;7954:8;:23;;;;;;;;;;;;7950:62;;;7994:11;;;;;;;;;;;;;;7950:62;7905:111::o;17920:797::-;17982:14;17998:20;18026:27;18056:21;:28;18078:5;18056:28;;;;;;;;;;;:38;;18026:68;;18110:15;:22;18126:5;18110:22;;;;;;;;;;;:30;;;;;;;;;;;;18100:40;;18162:15;:22;18178:5;18162:22;;;;;;;;;;;:36;;;;;;;;;;;;18146:52;;18280:23;18306:9;:16;;;;18280:42;;18333:9;18328:100;18352:15;18348:1;:19;18328:100;;;18389:11;:25;18401:9;18411:1;18401:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18389:25;;;;;;;;;;;;;;;:32;18415:5;18389:32;;;;;;;;;;;;18382:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18369:3;;;;:::i;:::-;;;18328:100;;;;18440:21;:28;18462:5;18440:28;;;;;;;;;;;;18433:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;18481:15;:22;18497:5;18481:22;;;;;;;;;;;;18474:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18509:22;18525:5;18509:8;:15;;:22;;;;:::i;:::-;;18552:1;18541:7;:12;;;18537:58;;18581:7;18563:14;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18537:58;18621:1;18604:13;:18;;;18600:76;;18656:13;18632:20;;:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18600:76;18681:31;;17920:797;;;:::o;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;8020:134:9:-;8096:9;8091:59;;8122:21;;;;;;;;;;;;;;8091:59;8020:134;:::o;19564:179::-;19633:12;19651:2;:7;;19666:6;19651:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19632:45;;;19688:7;19683:56;;19712:20;;;;;;;;;;;;;;19683:56;19626:117;19564:179;;:::o;8158:148::-;8255:1;8235:22;;:8;:22;;;8231:71;;8274:21;;;;;;;;;;;;;;8231:71;8158:148;:::o;6413:378:17:-;6482:34;;:::i;:::-;6548:1;6528:9;;:16;;:21;6524:100;;6566:51;;;;;;;;6610:5;6566:51;;;;;6559:58;;;;6524:100;211:28:14;6633:54:17;;;6640:9;;6633:17;;;;;:::i;:::-;:54;;;;6629:88;;6696:21;;;;;;;;;;;;;;6629:88;6741:9;;6751:1;6741:13;;;;;;;;;:::i;:::-;6730:56;;;;;;;:::i;:::-;6723:63;;6413:378;;;;;:::o;475:163:14:-;550:16;211:28;623:9;581:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:59;;475:163;;;:::o;10782:129:7:-;10849:4;10872:32;10877:3;:10;;10897:5;10889:14;;10872:4;:32::i;:::-;10865:39;;10782:129;;;;:::o;18721:520:9:-;18799:14;18815:20;18839:26;18859:5;18839:19;:26::i;:::-;18798:67;;;;18974:1;18949:27;;18957:4;;;;;;;;;;;18949:27;;;;:43;;;;;18991:1;18980:7;:12;;;;18949:43;18945:126;;;19002:62;19028:4;;;;;;;;;;;:13;;;19042:2;19054:7;19046:16;;19028:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19002:25;:62::i;:::-;18945:126;19127:43;19143:2;19155:13;19147:22;;19127:15;:43::i;:::-;19202:5;19181:55;19209:2;19213:7;19222:13;19181:55;;;;;;;;:::i;:::-;;;;;;;;18792:449;;18721:520;;:::o;11520:112:7:-;11580:7;11606:19;11614:3;:10;;11606:7;:19::i;:::-;11599:26;;11520:112;;;:::o;11974:135::-;12045:7;12079:22;12083:3;:10;;12095:5;12079:3;:22::i;:::-;12071:31;;12064:38;;11974:135;;;;:::o;1536:239:2:-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;11079:135:7:-;11149:4;11172:35;11180:3;:10;;11200:5;11192:14;;11172:7;:35::i;:::-;11165:42;;11079:135;;;;:::o;2203:404::-;2266:4;2287:21;2297:3;2302:5;2287:9;:21::i;:::-;2282:319;;2324:3;:11;;2341:5;2324:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:3;:11;;:18;;;;2482:3;:12;;:19;2495:5;2482:19;;;;;;;;;;;:40;;;;2543:4;2536:11;;;;2282:319;2585:5;2578:12;;2203:404;;;;;:::o;4452:107::-;4508:7;4534:3;:11;;:18;;;;4527:25;;4452:107;;;:::o;4901:118::-;4968:7;4994:3;:11;;5006:5;4994:18;;;;;;;;:::i;:::-;;;;;;;;;;4987:25;;4901:118;;;;:::o;2775:1388::-;2841:4;2957:18;2978:3;:12;;:19;2991:5;2978:19;;;;;;;;;;;;2957:40;;3026:1;3012:10;:15;3008:1149;;3381:21;3418:1;3405:10;:14;;;;:::i;:::-;3381:38;;3433:17;3474:1;3453:3;:11;;:18;;;;:22;;;;:::i;:::-;3433:42;;3507:13;3494:9;:26;3490:398;;3540:17;3560:3;:11;;3572:9;3560:22;;;;;;;;:::i;:::-;;;;;;;;;;3540:42;;3711:9;3682:3;:11;;3694:13;3682:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3820:10;3794:3;:12;;:23;3807:9;3794:23;;;;;;;;;;;:36;;;;3522:366;3490:398;3966:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4058:3;:12;;:19;4071:5;4058:19;;;;;;;;;;;4051:26;;;4099:4;4092:11;;;;;;;3008:1149;4141:5;4134:12;;;2775:1388;;;;;:::o;4244:127::-;4317:4;4363:1;4340:3;:12;;:19;4353:5;4340:19;;;;;;;;;;;;:24;;4333:31;;4244:127;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:89:21:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:90::-;477:7;520:5;513:13;506:21;495:32;;443:90;;;:::o;539:109::-;620:21;635:5;620:21;:::i;:::-;615:3;608:34;539:109;;:::o;654:86::-;689:7;729:4;722:5;718:16;707:27;;654:86;;;:::o;746:112::-;829:22;845:5;829:22;:::i;:::-;824:3;817:35;746:112;;:::o;864:1056::-;1155:4;1193:3;1182:9;1178:19;1170:27;;1207:69;1273:1;1262:9;1258:17;1249:6;1207:69;:::i;:::-;1286:70;1352:2;1341:9;1337:18;1328:6;1286:70;:::i;:::-;1366:66;1428:2;1417:9;1413:18;1404:6;1366:66;:::i;:::-;1442:70;1508:2;1497:9;1493:18;1484:6;1442:70;:::i;:::-;1522:71;1588:3;1577:9;1573:19;1564:6;1522:71;:::i;:::-;1603;1669:3;1658:9;1654:19;1645:6;1603:71;:::i;:::-;1684;1750:3;1739:9;1735:19;1726:6;1684:71;:::i;:::-;1765:69;1829:3;1818:9;1814:19;1805:6;1765:69;:::i;:::-;1844;1908:3;1897:9;1893:19;1884:6;1844:69;:::i;:::-;864:1056;;;;;;;;;;;;:::o;1926:75::-;1959:6;1992:2;1986:9;1976:19;;1926:75;:::o;2007:117::-;2116:1;2113;2106:12;2130:117;2239:1;2236;2229:12;2253:77;2290:7;2319:5;2308:16;;2253:77;;;:::o;2336:122::-;2409:24;2427:5;2409:24;:::i;:::-;2402:5;2399:35;2389:63;;2448:1;2445;2438:12;2389:63;2336:122;:::o;2464:139::-;2510:5;2548:6;2535:20;2526:29;;2564:33;2591:5;2564:33;:::i;:::-;2464:139;;;;:::o;2609:126::-;2646:7;2686:42;2679:5;2675:54;2664:65;;2609:126;;;:::o;2741:96::-;2778:7;2807:24;2825:5;2807:24;:::i;:::-;2796:35;;2741:96;;;:::o;2843:122::-;2916:24;2934:5;2916:24;:::i;:::-;2909:5;2906:35;2896:63;;2955:1;2952;2945:12;2896:63;2843:122;:::o;2971:139::-;3017:5;3055:6;3042:20;3033:29;;3071:33;3098:5;3071:33;:::i;:::-;2971:139;;;;:::o;3116:117::-;3225:1;3222;3215:12;3239:102;3280:6;3331:2;3327:7;3322:2;3315:5;3311:14;3307:28;3297:38;;3239:102;;;:::o;3347:180::-;3395:77;3392:1;3385:88;3492:4;3489:1;3482:15;3516:4;3513:1;3506:15;3533:281;3616:27;3638:4;3616:27;:::i;:::-;3608:6;3604:40;3746:6;3734:10;3731:22;3710:18;3698:10;3695:34;3692:62;3689:88;;;3757:18;;:::i;:::-;3689:88;3797:10;3793:2;3786:22;3576:238;3533:281;;:::o;3820:129::-;3854:6;3881:20;;:::i;:::-;3871:30;;3910:33;3938:4;3930:6;3910:33;:::i;:::-;3820:129;;;:::o;3955:311::-;4032:4;4122:18;4114:6;4111:30;4108:56;;;4144:18;;:::i;:::-;4108:56;4194:4;4186:6;4182:17;4174:25;;4254:4;4248;4244:15;4236:23;;3955:311;;;:::o;4272:117::-;4381:1;4378;4371:12;4412:710;4508:5;4533:81;4549:64;4606:6;4549:64;:::i;:::-;4533:81;:::i;:::-;4524:90;;4634:5;4663:6;4656:5;4649:21;4697:4;4690:5;4686:16;4679:23;;4750:4;4742:6;4738:17;4730:6;4726:30;4779:3;4771:6;4768:15;4765:122;;;4798:79;;:::i;:::-;4765:122;4913:6;4896:220;4930:6;4925:3;4922:15;4896:220;;;5005:3;5034:37;5067:3;5055:10;5034:37;:::i;:::-;5029:3;5022:50;5101:4;5096:3;5092:14;5085:21;;4972:144;4956:4;4951:3;4947:14;4940:21;;4896:220;;;4900:21;4514:608;;4412:710;;;;;:::o;5145:370::-;5216:5;5265:3;5258:4;5250:6;5246:17;5242:27;5232:122;;5273:79;;:::i;:::-;5232:122;5390:6;5377:20;5415:94;5505:3;5497:6;5490:4;5482:6;5478:17;5415:94;:::i;:::-;5406:103;;5222:293;5145:370;;;;:::o;5521:829::-;5623:6;5631;5639;5688:2;5676:9;5667:7;5663:23;5659:32;5656:119;;;5694:79;;:::i;:::-;5656:119;5814:1;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5785:117;5941:2;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5912:118;6097:2;6086:9;6082:18;6069:32;6128:18;6120:6;6117:30;6114:117;;;6150:79;;:::i;:::-;6114:117;6255:78;6325:7;6316:6;6305:9;6301:22;6255:78;:::i;:::-;6245:88;;6040:303;5521:829;;;;;:::o;6356:474::-;6424:6;6432;6481:2;6469:9;6460:7;6456:23;6452:32;6449:119;;;6487:79;;:::i;:::-;6449:119;6607:1;6632:53;6677:7;6668:6;6657:9;6653:22;6632:53;:::i;:::-;6622:63;;6578:117;6734:2;6760:53;6805:7;6796:6;6785:9;6781:22;6760:53;:::i;:::-;6750:63;;6705:118;6356:474;;;;;:::o;6836:::-;6904:6;6912;6961:2;6949:9;6940:7;6936:23;6932:32;6929:119;;;6967:79;;:::i;:::-;6929:119;7087:1;7112:53;7157:7;7148:6;7137:9;7133:22;7112:53;:::i;:::-;7102:63;;7058:117;7214:2;7240:53;7285:7;7276:6;7265:9;7261:22;7240:53;:::i;:::-;7230:63;;7185:118;6836:474;;;;;:::o;7316:76::-;7352:7;7381:5;7370:16;;7316:76;;;:::o;7398:115::-;7483:23;7500:5;7483:23;:::i;:::-;7478:3;7471:36;7398:115;;:::o;7519:218::-;7610:4;7648:2;7637:9;7633:18;7625:26;;7661:69;7727:1;7716:9;7712:17;7703:6;7661:69;:::i;:::-;7519:218;;;;:::o;7743:109::-;7779:7;7819:26;7812:5;7808:38;7797:49;;7743:109;;;:::o;7858:115::-;7943:23;7960:5;7943:23;:::i;:::-;7938:3;7931:36;7858:115;;:::o;7979:218::-;8070:4;8108:2;8097:9;8093:18;8085:26;;8121:69;8187:1;8176:9;8172:17;8163:6;8121:69;:::i;:::-;7979:218;;;;:::o;8203:60::-;8231:3;8252:5;8245:12;;8203:60;;;:::o;8269:142::-;8319:9;8352:53;8370:34;8379:24;8397:5;8379:24;:::i;:::-;8370:34;:::i;:::-;8352:53;:::i;:::-;8339:66;;8269:142;;;:::o;8417:126::-;8467:9;8500:37;8531:5;8500:37;:::i;:::-;8487:50;;8417:126;;;:::o;8549:152::-;8625:9;8658:37;8689:5;8658:37;:::i;:::-;8645:50;;8549:152;;;:::o;8707:183::-;8820:63;8877:5;8820:63;:::i;:::-;8815:3;8808:76;8707:183;;:::o;8896:274::-;9015:4;9053:2;9042:9;9038:18;9030:26;;9066:97;9160:1;9149:9;9145:17;9136:6;9066:97;:::i;:::-;8896:274;;;;:::o;9176:104::-;9221:7;9250:24;9268:5;9250:24;:::i;:::-;9239:35;;9176:104;;;:::o;9286:138::-;9367:32;9393:5;9367:32;:::i;:::-;9360:5;9357:43;9347:71;;9414:1;9411;9404:12;9347:71;9286:138;:::o;9430:155::-;9484:5;9522:6;9509:20;9500:29;;9538:41;9573:5;9538:41;:::i;:::-;9430:155;;;;:::o;9591:345::-;9658:6;9707:2;9695:9;9686:7;9682:23;9678:32;9675:119;;;9713:79;;:::i;:::-;9675:119;9833:1;9858:61;9911:7;9902:6;9891:9;9887:22;9858:61;:::i;:::-;9848:71;;9804:125;9591:345;;;;:::o;9942:329::-;10001:6;10050:2;10038:9;10029:7;10025:23;10021:32;10018:119;;;10056:79;;:::i;:::-;10018:119;10176:1;10201:53;10246:7;10237:6;10226:9;10222:22;10201:53;:::i;:::-;10191:63;;10147:117;9942:329;;;;:::o;10277:210::-;10364:4;10402:2;10391:9;10387:18;10379:26;;10415:65;10477:1;10466:9;10462:17;10453:6;10415:65;:::i;:::-;10277:210;;;;:::o;10493:329::-;10552:6;10601:2;10589:9;10580:7;10576:23;10572:32;10569:119;;;10607:79;;:::i;:::-;10569:119;10727:1;10752:53;10797:7;10788:6;10777:9;10773:22;10752:53;:::i;:::-;10742:63;;10698:117;10493:329;;;;:::o;10828:218::-;10919:4;10957:2;10946:9;10942:18;10934:26;;10970:69;11036:1;11025:9;11021:17;11012:6;10970:69;:::i;:::-;10828:218;;;;:::o;11052:474::-;11120:6;11128;11177:2;11165:9;11156:7;11152:23;11148:32;11145:119;;;11183:79;;:::i;:::-;11145:119;11303:1;11328:53;11373:7;11364:6;11353:9;11349:22;11328:53;:::i;:::-;11318:63;;11274:117;11430:2;11456:53;11501:7;11492:6;11481:9;11477:22;11456:53;:::i;:::-;11446:63;;11401:118;11052:474;;;;;:::o;11532:155::-;11611:9;11644:37;11675:5;11644:37;:::i;:::-;11631:50;;11532:155;;;:::o;11693:189::-;11809:66;11869:5;11809:66;:::i;:::-;11804:3;11797:79;11693:189;;:::o;11888:280::-;12010:4;12048:2;12037:9;12033:18;12025:26;;12061:100;12158:1;12147:9;12143:17;12134:6;12061:100;:::i;:::-;11888:280;;;;:::o;12174:118::-;12261:24;12279:5;12261:24;:::i;:::-;12256:3;12249:37;12174:118;;:::o;12298:222::-;12391:4;12429:2;12418:9;12414:18;12406:26;;12442:71;12510:1;12499:9;12495:17;12486:6;12442:71;:::i;:::-;12298:222;;;;:::o;12526:117::-;12635:1;12632;12625:12;12698:243;12782:5;12823:3;12814:6;12809:3;12805:16;12801:26;12798:113;;;12830:79;;:::i;:::-;12798:113;12929:6;12920:15;;12698:243;;;;:::o;12947:565::-;13044:6;13093:2;13081:9;13072:7;13068:23;13064:32;13061:119;;;13099:79;;:::i;:::-;13061:119;13247:1;13236:9;13232:17;13219:31;13277:18;13269:6;13266:30;13263:117;;;13299:79;;:::i;:::-;13263:117;13404:91;13487:7;13478:6;13467:9;13463:22;13404:91;:::i;:::-;13394:101;;13190:315;12947:565;;;;:::o;13518:118::-;13605:24;13623:5;13605:24;:::i;:::-;13600:3;13593:37;13518:118;;:::o;13642:222::-;13735:4;13773:2;13762:9;13758:18;13750:26;;13786:71;13854:1;13843:9;13839:17;13830:6;13786:71;:::i;:::-;13642:222;;;;:::o;13870:101::-;13906:7;13946:18;13939:5;13935:30;13924:41;;13870:101;;;:::o;13977:115::-;14062:23;14079:5;14062:23;:::i;:::-;14057:3;14050:36;13977:115;;:::o;14098:218::-;14189:4;14227:2;14216:9;14212:18;14204:26;;14240:69;14306:1;14295:9;14291:17;14282:6;14240:69;:::i;:::-;14098:218;;;;:::o;14322:117::-;14431:1;14428;14421:12;14458:552;14515:8;14525:6;14575:3;14568:4;14560:6;14556:17;14552:27;14542:122;;14583:79;;:::i;:::-;14542:122;14696:6;14683:20;14673:30;;14726:18;14718:6;14715:30;14712:117;;;14748:79;;:::i;:::-;14712:117;14862:4;14854:6;14850:17;14838:29;;14916:3;14908:4;14900:6;14896:17;14886:8;14882:32;14879:41;14876:128;;;14923:79;;:::i;:::-;14876:128;14458:552;;;;;:::o;15016:817::-;15104:6;15112;15120;15128;15177:2;15165:9;15156:7;15152:23;15148:32;15145:119;;;15183:79;;:::i;:::-;15145:119;15303:1;15328:53;15373:7;15364:6;15353:9;15349:22;15328:53;:::i;:::-;15318:63;;15274:117;15430:2;15456:53;15501:7;15492:6;15481:9;15477:22;15456:53;:::i;:::-;15446:63;;15401:118;15586:2;15575:9;15571:18;15558:32;15617:18;15609:6;15606:30;15603:117;;;15639:79;;:::i;:::-;15603:117;15752:64;15808:7;15799:6;15788:9;15784:22;15752:64;:::i;:::-;15734:82;;;;15529:297;15016:817;;;;;;;:::o;15839:114::-;15906:6;15940:5;15934:12;15924:22;;15839:114;;;:::o;15959:184::-;16058:11;16092:6;16087:3;16080:19;16132:4;16127:3;16123:14;16108:29;;15959:184;;;;:::o;16149:132::-;16216:4;16239:3;16231:11;;16269:4;16264:3;16260:14;16252:22;;16149:132;;;:::o;16287:108::-;16364:24;16382:5;16364:24;:::i;:::-;16359:3;16352:37;16287:108;;:::o;16401:179::-;16470:10;16491:46;16533:3;16525:6;16491:46;:::i;:::-;16569:4;16564:3;16560:14;16546:28;;16401:179;;;;:::o;16586:113::-;16656:4;16688;16683:3;16679:14;16671:22;;16586:113;;;:::o;16735:732::-;16854:3;16883:54;16931:5;16883:54;:::i;:::-;16953:86;17032:6;17027:3;16953:86;:::i;:::-;16946:93;;17063:56;17113:5;17063:56;:::i;:::-;17142:7;17173:1;17158:284;17183:6;17180:1;17177:13;17158:284;;;17259:6;17253:13;17286:63;17345:3;17330:13;17286:63;:::i;:::-;17279:70;;17372:60;17425:6;17372:60;:::i;:::-;17362:70;;17218:224;17205:1;17202;17198:9;17193:14;;17158:284;;;17162:14;17458:3;17451:10;;16859:608;;;16735:732;;;;:::o;17473:373::-;17616:4;17654:2;17643:9;17639:18;17631:26;;17703:9;17697:4;17693:20;17689:1;17678:9;17674:17;17667:47;17731:108;17834:4;17825:6;17731:108;:::i;:::-;17723:116;;17473:373;;;;:::o;17852:114::-;17919:6;17953:5;17947:12;17937:22;;17852:114;;;:::o;17972:184::-;18071:11;18105:6;18100:3;18093:19;18145:4;18140:3;18136:14;18121:29;;17972:184;;;;:::o;18162:132::-;18229:4;18252:3;18244:11;;18282:4;18277:3;18273:14;18265:22;;18162:132;;;:::o;18300:108::-;18377:24;18395:5;18377:24;:::i;:::-;18372:3;18365:37;18300:108;;:::o;18414:179::-;18483:10;18504:46;18546:3;18538:6;18504:46;:::i;:::-;18582:4;18577:3;18573:14;18559:28;;18414:179;;;;:::o;18599:113::-;18669:4;18701;18696:3;18692:14;18684:22;;18599:113;;;:::o;18748:732::-;18867:3;18896:54;18944:5;18896:54;:::i;:::-;18966:86;19045:6;19040:3;18966:86;:::i;:::-;18959:93;;19076:56;19126:5;19076:56;:::i;:::-;19155:7;19186:1;19171:284;19196:6;19193:1;19190:13;19171:284;;;19272:6;19266:13;19299:63;19358:3;19343:13;19299:63;:::i;:::-;19292:70;;19385:60;19438:6;19385:60;:::i;:::-;19375:70;;19231:224;19218:1;19215;19211:9;19206:14;;19171:284;;;19175:14;19471:3;19464:10;;18872:608;;;18748:732;;;;:::o;19486:803::-;19735:4;19773:3;19762:9;19758:19;19750:27;;19787:69;19853:1;19842:9;19838:17;19829:6;19787:69;:::i;:::-;19866:70;19932:2;19921:9;19917:18;19908:6;19866:70;:::i;:::-;19946;20012:2;20001:9;19997:18;19988:6;19946:70;:::i;:::-;20026:72;20094:2;20083:9;20079:18;20070:6;20026:72;:::i;:::-;20146:9;20140:4;20136:20;20130:3;20119:9;20115:19;20108:49;20174:108;20277:4;20268:6;20174:108;:::i;:::-;20166:116;;19486:803;;;;;;;;:::o;20295:180::-;20343:77;20340:1;20333:88;20440:4;20437:1;20430:15;20464:4;20461:1;20454:15;20481:320;20525:6;20562:1;20556:4;20552:12;20542:22;;20609:1;20603:4;20599:12;20630:18;20620:81;;20686:4;20678:6;20674:17;20664:27;;20620:81;20748:2;20740:6;20737:14;20717:18;20714:38;20711:84;;20767:18;;:::i;:::-;20711:84;20532:269;20481:320;;;:::o;20807:332::-;20928:4;20966:2;20955:9;20951:18;20943:26;;20979:71;21047:1;21036:9;21032:17;21023:6;20979:71;:::i;:::-;21060:72;21128:2;21117:9;21113:18;21104:6;21060:72;:::i;:::-;20807:332;;;;;:::o;21145:180::-;21193:77;21190:1;21183:88;21290:4;21287:1;21280:15;21314:4;21311:1;21304:15;21331:180;21379:77;21376:1;21369:88;21476:4;21473:1;21466:15;21500:4;21497:1;21490:15;21517:233;21556:3;21579:24;21597:5;21579:24;:::i;:::-;21570:33;;21625:66;21618:5;21615:77;21612:103;;21695:18;;:::i;:::-;21612:103;21742:1;21735:5;21731:13;21724:20;;21517:233;;;:::o;21756:483::-;21927:4;21965:2;21954:9;21950:18;21942:26;;21978:71;22046:1;22035:9;22031:17;22022:6;21978:71;:::i;:::-;22096:9;22090:4;22086:20;22081:2;22070:9;22066:18;22059:48;22124:108;22227:4;22218:6;22124:108;:::i;:::-;22116:116;;21756:483;;;;;:::o;22245:98::-;22296:6;22330:5;22324:12;22314:22;;22245:98;;;:::o;22349:147::-;22450:11;22487:3;22472:18;;22349:147;;;;:::o;22502:246::-;22583:1;22593:113;22607:6;22604:1;22601:13;22593:113;;;22692:1;22687:3;22683:11;22677:18;22673:1;22668:3;22664:11;22657:39;22629:2;22626:1;22622:10;22617:15;;22593:113;;;22740:1;22731:6;22726:3;22722:16;22715:27;22564:184;22502:246;;;:::o;22754:386::-;22858:3;22886:38;22918:5;22886:38;:::i;:::-;22940:88;23021:6;23016:3;22940:88;:::i;:::-;22933:95;;23037:65;23095:6;23090:3;23083:4;23076:5;23072:16;23037:65;:::i;:::-;23127:6;23122:3;23118:16;23111:23;;22862:278;22754:386;;;;:::o;23146:271::-;23276:3;23298:93;23387:3;23378:6;23298:93;:::i;:::-;23291:100;;23408:3;23401:10;;23146:271;;;;:::o;23423:194::-;23463:4;23483:20;23501:1;23483:20;:::i;:::-;23478:25;;23517:20;23535:1;23517:20;:::i;:::-;23512:25;;23561:1;23558;23554:9;23546:17;;23585:1;23579:4;23576:11;23573:37;;;23590:18;;:::i;:::-;23573:37;23423:194;;;;:::o;23623:410::-;23663:7;23686:20;23704:1;23686:20;:::i;:::-;23681:25;;23720:20;23738:1;23720:20;:::i;:::-;23715:25;;23775:1;23772;23768:9;23797:30;23815:11;23797:30;:::i;:::-;23786:41;;23976:1;23967:7;23963:15;23960:1;23957:22;23937:1;23930:9;23910:83;23887:139;;24006:18;;:::i;:::-;23887:139;23671:362;23623:410;;;;:::o;24039:191::-;24079:3;24098:20;24116:1;24098:20;:::i;:::-;24093:25;;24132:20;24150:1;24132:20;:::i;:::-;24127:25;;24175:1;24172;24168:9;24161:16;;24196:3;24193:1;24190:10;24187:36;;;24203:18;;:::i;:::-;24187:36;24039:191;;;;:::o;24236:180::-;24284:77;24281:1;24274:88;24381:4;24378:1;24371:15;24405:4;24402:1;24395:15;24422:185;24462:1;24479:20;24497:1;24479:20;:::i;:::-;24474:25;;24513:20;24531:1;24513:20;:::i;:::-;24508:25;;24552:1;24542:35;;24557:18;;:::i;:::-;24542:35;24599:1;24596;24592:9;24587:14;;24422:185;;;;:::o;24613:624::-;24798:4;24836:3;24825:9;24821:19;24813:27;;24850:71;24918:1;24907:9;24903:17;24894:6;24850:71;:::i;:::-;24931:70;24997:2;24986:9;24982:18;24973:6;24931:70;:::i;:::-;25011:66;25073:2;25062:9;25058:18;25049:6;25011:66;:::i;:::-;25087;25149:2;25138:9;25134:18;25125:6;25087:66;:::i;:::-;25163:67;25225:3;25214:9;25210:19;25201:6;25163:67;:::i;:::-;24613:624;;;;;;;;:::o;25243:114::-;;:::o;25363:398::-;25522:3;25543:83;25624:1;25619:3;25543:83;:::i;:::-;25536:90;;25635:93;25724:3;25635:93;:::i;:::-;25753:1;25748:3;25744:11;25737:18;;25363:398;;;:::o;25767:379::-;25951:3;25973:147;26116:3;25973:147;:::i;:::-;25966:154;;26137:3;26130:10;;25767:379;;;:::o;26152:140::-;26201:9;26234:52;26252:33;26261:23;26278:5;26261:23;:::i;:::-;26252:33;:::i;:::-;26234:52;:::i;:::-;26221:65;;26152:140;;;:::o;26298:129::-;26384:36;26414:5;26384:36;:::i;:::-;26379:3;26372:49;26298:129;;:::o;26433:438::-;26580:4;26618:2;26607:9;26603:18;26595:26;;26631:71;26699:1;26688:9;26684:17;26675:6;26631:71;:::i;:::-;26712;26779:2;26768:9;26764:18;26755:6;26712:71;:::i;:::-;26793;26860:2;26849:9;26845:18;26836:6;26793:71;:::i;:::-;26433:438;;;;;;:::o;26877:213::-;26916:3;26935:19;26952:1;26935:19;:::i;:::-;26930:24;;26968:19;26985:1;26968:19;:::i;:::-;26963:24;;27010:1;27007;27003:9;26996:16;;27033:26;27028:3;27025:35;27022:61;;;27063:18;;:::i;:::-;27022:61;26877:213;;;;:::o;27096:216::-;27135:4;27155:19;27172:1;27155:19;:::i;:::-;27150:24;;27188:19;27205:1;27188:19;:::i;:::-;27183:24;;27231:1;27228;27224:9;27216:17;;27255:26;27249:4;27246:36;27243:62;;;27285:18;;:::i;:::-;27243:62;27096:216;;;;:::o;27318:330::-;27438:4;27476:2;27465:9;27461:18;27453:26;;27489:71;27557:1;27546:9;27542:17;27533:6;27489:71;:::i;:::-;27570;27637:2;27626:9;27622:18;27613:6;27570:71;:::i;:::-;27318:330;;;;;:::o;27654:116::-;27724:21;27739:5;27724:21;:::i;:::-;27717:5;27714:32;27704:60;;27760:1;27757;27750:12;27704:60;27654:116;:::o;27776:137::-;27830:5;27861:6;27855:13;27846:22;;27877:30;27901:5;27877:30;:::i;:::-;27776:137;;;;:::o;27919:345::-;27986:6;28035:2;28023:9;28014:7;28010:23;28006:32;28003:119;;;28041:79;;:::i;:::-;28003:119;28161:1;28186:61;28239:7;28230:6;28219:9;28215:22;28186:61;:::i;:::-;28176:71;;28132:125;27919:345;;;;:::o;28270:169::-;28354:11;28388:6;28383:3;28376:19;28428:4;28423:3;28419:14;28404:29;;28270:169;;;;:::o;28445:172::-;28585:24;28581:1;28573:6;28569:14;28562:48;28445:172;:::o;28623:366::-;28765:3;28786:67;28850:2;28845:3;28786:67;:::i;:::-;28779:74;;28862:93;28951:3;28862:93;:::i;:::-;28980:2;28975:3;28971:12;28964:19;;28623:366;;;:::o;28995:419::-;29161:4;29199:2;29188:9;29184:18;29176:26;;29248:9;29242:4;29238:20;29234:1;29223:9;29219:17;29212:47;29276:131;29402:4;29276:131;:::i;:::-;29268:139;;28995:419;;;:::o;29420:134::-;29478:9;29511:37;29542:5;29511:37;:::i;:::-;29498:50;;29420:134;;;:::o;29560:147::-;29655:45;29694:5;29655:45;:::i;:::-;29650:3;29643:58;29560:147;;:::o;29713:348::-;29842:4;29880:2;29869:9;29865:18;29857:26;;29893:79;29969:1;29958:9;29954:17;29945:6;29893:79;:::i;:::-;29982:72;30050:2;30039:9;30035:18;30026:6;29982:72;:::i;:::-;29713:348;;;;;:::o;30067:332::-;30188:4;30226:2;30215:9;30211:18;30203:26;;30239:71;30307:1;30296:9;30292:17;30283:6;30239:71;:::i;:::-;30320:72;30388:2;30377:9;30373:18;30364:6;30320:72;:::i;:::-;30067:332;;;;;:::o;30405:117::-;30514:1;30511;30504:12;30528:117;30637:1;30634;30627:12;30651:117;30760:1;30757;30750:12;30774:724;30851:4;30857:6;30913:11;30900:25;31013:1;31007:4;31003:12;30992:8;30976:14;30972:29;30968:48;30948:18;30944:73;30934:168;;31021:79;;:::i;:::-;30934:168;31133:18;31123:8;31119:33;31111:41;;31185:4;31172:18;31162:28;;31213:18;31205:6;31202:30;31199:117;;;31235:79;;:::i;:::-;31199:117;31343:2;31337:4;31333:13;31325:21;;31400:4;31392:6;31388:17;31372:14;31368:38;31362:4;31358:49;31355:136;;;31410:79;;:::i;:::-;31355:136;30864:634;30774:724;;;;;:::o;31504:120::-;31576:23;31593:5;31576:23;:::i;:::-;31569:5;31566:34;31556:62;;31614:1;31611;31604:12;31556:62;31504:120;:::o;31630:137::-;31675:5;31713:6;31700:20;31691:29;;31729:32;31755:5;31729:32;:::i;:::-;31630:137;;;;:::o;31773:327::-;31831:6;31880:2;31868:9;31859:7;31855:23;31851:32;31848:119;;;31886:79;;:::i;:::-;31848:119;32006:1;32031:52;32075:7;32066:6;32055:9;32051:22;32031:52;:::i;:::-;32021:62;;31977:116;31773:327;;;;:::o;32106:140::-;32154:4;32177:3;32169:11;;32200:3;32197:1;32190:14;32234:4;32231:1;32221:18;32213:26;;32106:140;;;:::o;32252:93::-;32289:6;32336:2;32331;32324:5;32320:14;32316:23;32306:33;;32252:93;;;:::o;32351:107::-;32395:8;32445:5;32439:4;32435:16;32414:37;;32351:107;;;;:::o;32464:393::-;32533:6;32583:1;32571:10;32567:18;32606:97;32636:66;32625:9;32606:97;:::i;:::-;32724:39;32754:8;32743:9;32724:39;:::i;:::-;32712:51;;32796:4;32792:9;32785:5;32781:21;32772:30;;32845:4;32835:8;32831:19;32824:5;32821:30;32811:40;;32540:317;;32464:393;;;;;:::o;32863:142::-;32913:9;32946:53;32964:34;32973:24;32991:5;32973:24;:::i;:::-;32964:34;:::i;:::-;32946:53;:::i;:::-;32933:66;;32863:142;;;:::o;33011:75::-;33054:3;33075:5;33068:12;;33011:75;;;:::o;33092:269::-;33202:39;33233:7;33202:39;:::i;:::-;33263:91;33312:41;33336:16;33312:41;:::i;:::-;33304:6;33297:4;33291:11;33263:91;:::i;:::-;33257:4;33250:105;33168:193;33092:269;;;:::o;33367:73::-;33412:3;33367:73;:::o;33446:189::-;33523:32;;:::i;:::-;33564:65;33622:6;33614;33608:4;33564:65;:::i;:::-;33499:136;33446:189;;:::o;33641:186::-;33701:120;33718:3;33711:5;33708:14;33701:120;;;33772:39;33809:1;33802:5;33772:39;:::i;:::-;33745:1;33738:5;33734:13;33725:22;;33701:120;;;33641:186;;:::o;33833:541::-;33933:2;33928:3;33925:11;33922:445;;;33967:37;33998:5;33967:37;:::i;:::-;34050:29;34068:10;34050:29;:::i;:::-;34040:8;34036:44;34233:2;34221:10;34218:18;34215:49;;;34254:8;34239:23;;34215:49;34277:80;34333:22;34351:3;34333:22;:::i;:::-;34323:8;34319:37;34306:11;34277:80;:::i;:::-;33937:430;;33922:445;33833:541;;;:::o;34380:117::-;34434:8;34484:5;34478:4;34474:16;34453:37;;34380:117;;;;:::o;34503:169::-;34547:6;34580:51;34628:1;34624:6;34616:5;34613:1;34609:13;34580:51;:::i;:::-;34576:56;34661:4;34655;34651:15;34641:25;;34554:118;34503:169;;;;:::o;34677:295::-;34753:4;34899:29;34924:3;34918:4;34899:29;:::i;:::-;34891:37;;34961:3;34958:1;34954:11;34948:4;34945:21;34937:29;;34677:295;;;;:::o;34977:1390::-;35092:36;35124:3;35092:36;:::i;:::-;35193:18;35185:6;35182:30;35179:56;;;35215:18;;:::i;:::-;35179:56;35259:38;35291:4;35285:11;35259:38;:::i;:::-;35344:66;35403:6;35395;35389:4;35344:66;:::i;:::-;35437:1;35461:4;35448:17;;35493:2;35485:6;35482:14;35510:1;35505:617;;;;36166:1;36183:6;36180:77;;;36232:9;36227:3;36223:19;36217:26;36208:35;;36180:77;36283:67;36343:6;36336:5;36283:67;:::i;:::-;36277:4;36270:81;36139:222;35475:886;;35505:617;35557:4;35553:9;35545:6;35541:22;35591:36;35622:4;35591:36;:::i;:::-;35649:1;35663:208;35677:7;35674:1;35671:14;35663:208;;;35756:9;35751:3;35747:19;35741:26;35733:6;35726:42;35807:1;35799:6;35795:14;35785:24;;35854:2;35843:9;35839:18;35826:31;;35700:4;35697:1;35693:12;35688:17;;35663:208;;;35899:6;35890:7;35887:19;35884:179;;;35957:9;35952:3;35948:19;35942:26;36000:48;36042:4;36034:6;36030:17;36019:9;36000:48;:::i;:::-;35992:6;35985:64;35907:156;35884:179;36109:1;36105;36097:6;36093:14;36089:22;36083:4;36076:36;35512:610;;;35475:886;;35067:1300;;;34977:1390;;:::o;36373:120::-;36445:23;36462:5;36445:23;:::i;:::-;36438:5;36435:34;36425:62;;36483:1;36480;36473:12;36425:62;36373:120;:::o;36499:137::-;36544:5;36582:6;36569:20;36560:29;;36598:32;36624:5;36598:32;:::i;:::-;36499:137;;;;:::o;36642:327::-;36700:6;36749:2;36737:9;36728:7;36724:23;36720:32;36717:119;;;36755:79;;:::i;:::-;36717:119;36875:1;36900:52;36944:7;36935:6;36924:9;36920:22;36900:52;:::i;:::-;36890:62;;36846:116;36642:327;;;;:::o;36975:168::-;37058:11;37092:6;37087:3;37080:19;37132:4;37127:3;37123:14;37108:29;;36975:168;;;;:::o;37149:373::-;37235:3;37263:38;37295:5;37263:38;:::i;:::-;37317:70;37380:6;37375:3;37317:70;:::i;:::-;37310:77;;37396:65;37454:6;37449:3;37442:4;37435:5;37431:16;37396:65;:::i;:::-;37486:29;37508:6;37486:29;:::i;:::-;37481:3;37477:39;37470:46;;37239:283;37149:373;;;;:::o;37528:850::-;37773:4;37811:3;37800:9;37796:19;37788:27;;37825:71;37893:1;37882:9;37878:17;37869:6;37825:71;:::i;:::-;37906:72;37974:2;37963:9;37959:18;37950:6;37906:72;:::i;:::-;37988:70;38054:2;38043:9;38039:18;38030:6;37988:70;:::i;:::-;38068;38134:2;38123:9;38119:18;38110:6;38068:70;:::i;:::-;38148:71;38214:3;38203:9;38199:19;38190:6;38148:71;:::i;:::-;38267:9;38261:4;38257:20;38251:3;38240:9;38236:19;38229:49;38295:76;38366:4;38357:6;38295:76;:::i;:::-;38287:84;;37528:850;;;;;;;;;:::o;38384:94::-;38417:8;38465:5;38461:2;38457:14;38436:35;;38384:94;;;:::o;38484:::-;38523:7;38552:20;38566:5;38552:20;:::i;:::-;38541:31;;38484:94;;;:::o;38584:100::-;38623:7;38652:26;38672:5;38652:26;:::i;:::-;38641:37;;38584:100;;;:::o;38690:157::-;38795:45;38815:24;38833:5;38815:24;:::i;:::-;38795:45;:::i;:::-;38790:3;38783:58;38690:157;;:::o;38853:77::-;38890:7;38919:5;38908:16;;38853:77;;;:::o;38936:79::-;38975:7;39004:5;38993:16;;38936:79;;;:::o;39021:157::-;39126:45;39146:24;39164:5;39146:24;:::i;:::-;39126:45;:::i;:::-;39121:3;39114:58;39021:157;;:::o;39184:96::-;39218:8;39267:5;39262:3;39258:15;39237:36;;39184:96;;;:::o;39286:94::-;39324:7;39353:21;39368:5;39353:21;:::i;:::-;39342:32;;39286:94;;;:::o;39386:153::-;39489:43;39508:23;39525:5;39508:23;:::i;:::-;39489:43;:::i;:::-;39484:3;39477:56;39386:153;;:::o;39545:674::-;39739:3;39754:75;39825:3;39816:6;39754:75;:::i;:::-;39854:2;39849:3;39845:12;39838:19;;39867:75;39938:3;39929:6;39867:75;:::i;:::-;39967:2;39962:3;39958:12;39951:19;;39980:75;40051:3;40042:6;39980:75;:::i;:::-;40080:2;40075:3;40071:12;40064:19;;40093:73;40162:3;40153:6;40093:73;:::i;:::-;40191:1;40186:3;40182:11;40175:18;;40210:3;40203:10;;39545:674;;;;;;;:::o;40225:205::-;40264:3;40283:19;40300:1;40283:19;:::i;:::-;40278:24;;40316:19;40333:1;40316:19;:::i;:::-;40311:24;;40358:1;40355;40351:9;40344:16;;40381:18;40376:3;40373:27;40370:53;;;40403:18;;:::i;:::-;40370:53;40225:205;;;;:::o;40436:332::-;40557:4;40595:2;40584:9;40580:18;40572:26;;40608:71;40676:1;40665:9;40661:17;40652:6;40608:71;:::i;:::-;40689:72;40757:2;40746:9;40742:18;40733:6;40689:72;:::i;:::-;40436:332;;;;;:::o;40774:180::-;40822:77;40819:1;40812:88;40919:4;40916:1;40909:15;40943:4;40940:1;40933:15;40960:143;41017:5;41048:6;41042:13;41033:22;;41064:33;41091:5;41064:33;:::i;:::-;40960:143;;;;:::o;41109:351::-;41179:6;41228:2;41216:9;41207:7;41203:23;41199:32;41196:119;;;41234:79;;:::i;:::-;41196:119;41354:1;41379:64;41435:7;41426:6;41415:9;41411:22;41379:64;:::i;:::-;41369:74;;41325:128;41109:351;;;;:::o;41466:332::-;41587:4;41625:2;41614:9;41610:18;41602:26;;41638:71;41706:1;41695:9;41691:17;41682:6;41638:71;:::i;:::-;41719:72;41787:2;41776:9;41772:18;41763:6;41719:72;:::i;:::-;41466:332;;;;;:::o;41804:172::-;41944:24;41940:1;41932:6;41928:14;41921:48;41804:172;:::o;41982:366::-;42124:3;42145:67;42209:2;42204:3;42145:67;:::i;:::-;42138:74;;42221:93;42310:3;42221:93;:::i;:::-;42339:2;42334:3;42330:12;42323:19;;41982:366;;;:::o;42354:419::-;42520:4;42558:2;42547:9;42543:18;42535:26;;42607:9;42601:4;42597:20;42593:1;42582:9;42578:17;42571:47;42635:131;42761:4;42635:131;:::i;:::-;42627:139;;42354:419;;;:::o;42779:96::-;42837:6;42865:3;42855:13;;42779:96;;;;:::o;42973:149::-;43009:7;43049:66;43042:5;43038:78;43027:89;;42973:149;;;:::o;43128:548::-;43218:5;43249:45;43290:3;43283:5;43249:45;:::i;:::-;43319:5;43343:40;43373:8;43360:22;43343:40;:::i;:::-;43334:49;;43407:1;43399:6;43396:13;43393:276;;;43477:168;43561:66;43531:6;43528:1;43524:14;43521:1;43517:22;43477:168;:::i;:::-;43454:5;43433:226;43424:235;;43393:276;43224:452;;43128:548;;;;:::o;43682:117::-;43791:1;43788;43781:12;43805:117;43914:1;43911;43904:12;43928:469;44033:9;44044;44082:8;44070:10;44067:24;44064:111;;;44094:79;;:::i;:::-;44064:111;44200:6;44190:8;44187:20;44184:107;;;44210:79;;:::i;:::-;44184:107;44341:1;44329:10;44325:18;44317:6;44313:31;44300:44;;44380:10;44370:8;44366:25;44353:38;;43928:469;;;;;;;:::o;44403:117::-;44512:1;44509;44502:12;44649:133;44692:5;44730:6;44717:20;44708:29;;44746:30;44770:5;44746:30;:::i;:::-;44649:133;;;;:::o;44830:423::-;44908:5;44952:4;44940:9;44935:3;44931:19;44927:30;44924:117;;;44960:79;;:::i;:::-;44924:117;45059:21;45075:4;45059:21;:::i;:::-;45050:30;;45148:1;45188:46;45230:3;45221:6;45210:9;45206:22;45188:46;:::i;:::-;45181:4;45174:5;45170:16;45163:72;45090:156;44830:423;;;;:::o;45259:387::-;45347:6;45396:2;45384:9;45375:7;45371:23;45367:32;45364:119;;;45402:79;;:::i;:::-;45364:119;45522:1;45547:82;45621:7;45612:6;45601:9;45597:22;45547:82;:::i;:::-;45537:92;;45493:146;45259:387;;;;:::o;45652:99::-;45723:21;45738:5;45723:21;:::i;:::-;45718:3;45711:34;45652:99;;:::o;45837:344::-;45992:4;45987:3;45983:14;46088:4;46081:5;46077:16;46071:23;46107:57;46158:4;46153:3;46149:14;46135:12;46107:57;:::i;:::-;46007:167;45961:220;45837:344;;:::o;46187:338::-;46338:4;46376:2;46365:9;46361:18;46353:26;;46389:129;46515:1;46504:9;46500:17;46491:6;46389:129;:::i;:::-;46187:338;;;;:::o;46531:173::-;46671:25;46667:1;46659:6;46655:14;46648:49;46531:173;:::o;46710:366::-;46852:3;46873:67;46937:2;46932:3;46873:67;:::i;:::-;46866:74;;46949:93;47038:3;46949:93;:::i;:::-;47067:2;47062:3;47058:12;47051:19;;46710:366;;;:::o;47082:419::-;47248:4;47286:2;47275:9;47271:18;47263:26;;47335:9;47329:4;47325:20;47321:1;47310:9;47306:17;47299:47;47363:131;47489:4;47363:131;:::i;:::-;47355:139;;47082:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4725800","executionCost":"infinite","totalCost":"infinite"},"external":{"LINK()":"infinite","LINK_NATIVE_FEED()":"infinite","MAX_CONSUMERS()":"425","acceptOwnership()":"54607","acceptSubscriptionOwnerTransfer(uint256)":"infinite","addConsumer(uint256,address)":"infinite","cancelSubscription(uint256,address)":"infinite","consumerIsAdded(uint256,address)":"3230","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"infinite","fundSubscription(uint256,uint256)":"infinite","fundSubscriptionWithNative(uint256)":"infinite","getActiveSubscriptionIds(uint256,uint256)":"infinite","getSubscription(uint256)":"infinite","i_base_fee()":"infinite","i_gas_price()":"infinite","i_wei_per_unit_link()":"infinite","onTokenTransfer(address,uint256,bytes)":"infinite","owner()":"2590","ownerCancelSubscription(uint256)":"infinite","pendingRequestExists(uint256)":"489","recoverFunds(address)":"infinite","recoverNativeFunds(address)":"infinite","removeConsumer(uint256,address)":"infinite","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"infinite","requestSubscriptionOwnerTransfer(uint256,address)":"infinite","s_config()":"infinite","s_currentSubNonce()":"2538","s_totalBalance()":"2604","s_totalNativeBalance()":"2589","setConfig()":"222345","setLINKAndLINKNativeFeed(address,address)":"infinite","transferOwnership(address)":"30786","withdraw(address)":"infinite","withdrawNative(address)":"infinite"},"internal":{"_chargePayment(uint96,bool,uint256)":"infinite","_fromBytes(bytes calldata)":"infinite"}},"methodIdentifiers":{"LINK()":"1b6b6d23","LINK_NATIVE_FEED()":"72e9d565","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","consumerIsAdded(uint256,address)":"953e9c75","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"08e3898e","fundSubscription(uint256,uint256)":"115e3c0d","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","i_base_fee()":"1eebc117","i_gas_price()":"dcab3dcf","i_wei_per_unit_link()":"13478329","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","owner()":"8da5cb5b","ownerCancelSubscription(uint256)":"aa433aff","pendingRequestExists(uint256)":"41af6c87","recoverFunds(address)":"e72f6e30","recoverNativeFunds(address)":"8402595e","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29","s_config()":"088070f5","s_currentSubNonce()":"9d40a6fd","s_totalBalance()":"86fe91c7","s_totalNativeBalance()":"18e3dd27","setConfig()":"8b673e7a","setLINKAndLINKNativeFeed(address,address)":"65982744","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9","withdrawNative(address)":"2f622e6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPrice\",\"type\":\"uint96\"},{\"internalType\":\"int256\",\"name\":\"_weiPerUnitLink\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNative\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToTransferLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExtraArgsTag\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeFundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"nativePayment\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"onlyPremium\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLink\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNativeBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNativeBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFundedWithNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_NATIVE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"subOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_base_fee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_gas_price\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_wei_per_unit_link\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"_req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_config\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"reentrancyLock\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeNativePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkDiscountPPM\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"nativePremiumPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"linkPremiumPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentSubNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalNativeBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkNativeFeed\",\"type\":\"address\"}],\"name\":\"setLINKAndLINKNativeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint256,uint256)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"reqCount\":\"- Requests count of subscription.\",\"subOwner\":\"- owner of the subscription.\"}},\"ownerCancelSubscription(uint256)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"recoverNativeFunds(address)\":{\"params\":{\"to\":\"address to send native to\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setLINKAndLINKNativeFeed(address,address)\":{\"params\":{\"link\":\"- address of link token\",\"linkNativeFeed\":\"address of the link native feed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint256,uint256)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint256)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"recoverNativeFunds(address)\":{\"notice\":\"Recover native sent with transfer/call/send instead of fundSubscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setConfig()\":{\"notice\":\"Sets the configuration of the vrfv2 mock coordinator\"},\"setLINKAndLINKNativeFeed(address,address)\":{\"notice\":\"set the LINK token contract and link native feed to be used by this coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":\"VRFCoordinatorV2_5Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  function _requireSufficientBalance(bool condition) internal pure {\\n    if (!condition) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function _requireValidSubscription(address subOwner) internal pure {\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n  }\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    _requireSufficientBalance(amount > 0);\\n    s_withdrawableTokens = 0;\\n    s_totalBalance -= amount;\\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    uint96 amount = s_withdrawableNative;\\n    _requireSufficientBalance(amount > 0);\\n    // Prevent re-entrancy by updating state before transfer.\\n    s_withdrawableNative = 0;\\n    s_totalNativeBalance -= amount;\\n    _mustSendNative(recipient, amount);\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(oldOwner);\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    _mustSendNative(to, uint256(nativeBalance));\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n\\n  function _mustSendNative(address to, uint256 amount) internal {\\n    (bool success, ) = to.call{value: amount}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3687ca9adb25fa3b7645a1f7840e73f8ca3d87dd5f19ebc93cea76db5866717e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2_5.\\npragma solidity ^0.8.19;\\n\\n// solhint-disable-next-line no-unused-import\\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \\\"../dev/interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"../dev/libraries/VRFV2PlusClient.sol\\\";\\nimport {SubscriptionAPI} from \\\"../dev/SubscriptionAPI.sol\\\";\\nimport {VRFConsumerBaseV2Plus} from \\\"../dev/VRFConsumerBaseV2Plus.sol\\\";\\n\\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\\n  uint96 public immutable i_base_fee;\\n  uint96 public immutable i_gas_price;\\n  int256 public immutable i_wei_per_unit_link;\\n\\n  error InvalidRequest();\\n  error InvalidRandomWords();\\n  error InvalidExtraArgsTag();\\n  error NotImplemented();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint256 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    bytes extraArgs,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(\\n    uint256 indexed requestId,\\n    uint256 outputSeed,\\n    uint256 indexed subId,\\n    uint96 payment,\\n    bool nativePayment,\\n    bool success,\\n    bool onlyPremium\\n  );\\n  event ConfigSet();\\n\\n\\n  uint64 internal s_currentSubId;\\n  uint256 internal s_nextRequestId = 1;\\n  uint256 internal s_nextPreSeed = 100;\\n\\n  struct Request {\\n    uint256 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\\n    i_base_fee = _baseFee;\\n    i_gas_price = _gasPrice;\\n    i_wei_per_unit_link = _weiPerUnitLink;\\n    setConfig();\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 mock coordinator\\n   */\\n  function setConfig() public onlyOwner {\\n    s_config = Config({\\n      minimumRequestConfirmations: 0,\\n      maxGasLimit: 0,\\n      stalenessSeconds: 0,\\n      gasAfterPaymentCalculation: 0,\\n      reentrancyLock: false,\\n      fulfillmentFlatFeeNativePPM: 0,\\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\\n      nativePremiumPercentage: 0,\\n      linkPremiumPercentage: 0\\n    });\\n    emit ConfigSet();\\n  }\\n\\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\\n    return s_consumers[_consumer][_subId].active;\\n  }\\n\\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert InvalidRequest();\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2Plus v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    s_config.reentrancyLock = true;\\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n    s_config.reentrancyLock = false;\\n\\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\\n\\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\\n    if (!nativePayment) {\\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\\n    }\\n    uint96 payment = uint96(rawPayment);\\n\\n    // _chargePayment(payment, nativePayment, req.subId);\\n\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\\n  }\\n\\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\\n    Subscription storage subcription = s_subscriptions[subId];\\n    if (nativePayment) {\\n      uint96 prevBal = subcription.nativeBalance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.nativeBalance = prevBal - payment;\\n      s_withdrawableNative += payment;\\n    } else {\\n      uint96 prevBal = subcription.balance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.balance = prevBal - payment;\\n      s_withdrawableTokens += payment;\\n    }\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint256 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += uint96(_amount);\\n    s_totalBalance += uint96(_amount);\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  /// @dev Convert the extra args bytes into a struct\\n  /// @param extraArgs The extra args bytes\\n  /// @return The extra args struct\\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\\n    if (extraArgs.length == 0) {\\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\\n    }\\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\\n  }\\n\\n  function requestRandomWords(\\n    VRFV2PlusClient.RandomWordsRequest calldata _req\\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\\n    uint256 subId = _req.subId;\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\\n    s_requests[requestId] = Request({\\n      subId: _req.subId,\\n      callbackGasLimit: _req.callbackGasLimit,\\n      numWords: _req.numWords,\\n      extraArgs: _req.extraArgs\\n    });\\n\\n    emit RandomWordsRequested(\\n      _req.keyHash,\\n      requestId,\\n      preSeed,\\n      _req.subId,\\n      _req.requestConfirmations,\\n      _req.callbackGasLimit,\\n      _req.numWords,\\n      extraArgsBytes,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function removeConsumer(\\n    uint256 _subId,\\n    address _consumer\\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\\n    if (!s_consumers[_consumer][_subId].active) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\\n    uint256 lastConsumerIndex = consumers.length - 1;\\n    for (uint256 i = 0; i < consumers.length; ++i) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[lastConsumerIndex];\\n        s_subscriptionConfigs[_subId].consumers[i] = last;\\n        s_subscriptionConfigs[_subId].consumers.pop();\\n        break;\\n      }\\n    }\\n    s_consumers[_consumer][_subId].active = false;\\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\\n\\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\\n  }\\n\\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\\n    revert NotImplemented();\\n  }\\n}\\n\",\"keccak256\":\"0xa9651c38faa281bb742626b57e945f0d0468160c5f0845c40bfb93aeb31c7791\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1070,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"LINK","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)371"},{"astId":1074,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"LINK_NATIVE_FEED","offset":0,"slot":"3","type":"t_contract(AggregatorV3Interface)248"},{"astId":1160,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage))"},{"astId":1165,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subscriptionConfigs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(SubscriptionConfig)1146_storage)"},{"astId":1170,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Subscription)1138_storage)"},{"astId":1172,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_currentSubNonce","offset":0,"slot":"7","type":"t_uint64"},{"astId":1175,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subIds","offset":0,"slot":"8","type":"t_struct(UintSet)854_storage"},{"astId":1177,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_totalBalance","offset":0,"slot":"10","type":"t_uint96"},{"astId":1179,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_totalNativeBalance","offset":12,"slot":"10","type":"t_uint96"},{"astId":1181,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_withdrawableTokens","offset":0,"slot":"11","type":"t_uint96"},{"astId":1183,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_withdrawableNative","offset":12,"slot":"11","type":"t_uint96"},{"astId":1265,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_config","offset":0,"slot":"12","type":"t_struct(Config)1262_storage"},{"astId":3780,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_currentSubId","offset":0,"slot":"13","type":"t_uint64"},{"astId":3783,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_nextRequestId","offset":0,"slot":"14","type":"t_uint256"},{"astId":3786,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_nextPreSeed","offset":0,"slot":"15","type":"t_uint256"},{"astId":3800,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_requests","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(Request)3795_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)248":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)371":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ConsumerConfig)1153_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)","numberOfBytes":"32","value":"t_struct(ConsumerConfig)1153_storage"},"t_mapping(t_uint256,t_struct(Request)3795_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)3795_storage"},"t_mapping(t_uint256,t_struct(Subscription)1138_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1138_storage"},"t_mapping(t_uint256,t_struct(SubscriptionConfig)1146_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)1146_storage"},"t_struct(Config)1262_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Config","members":[{"astId":1245,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":1247,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":1249,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":1251,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":1253,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"},{"astId":1255,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"fulfillmentFlatFeeNativePPM","offset":15,"slot":"0","type":"t_uint32"},{"astId":1257,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"fulfillmentFlatFeeLinkDiscountPPM","offset":19,"slot":"0","type":"t_uint32"},{"astId":1259,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nativePremiumPercentage","offset":23,"slot":"0","type":"t_uint8"},{"astId":1261,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"linkPremiumPercentage","offset":24,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(ConsumerConfig)1153_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.ConsumerConfig","members":[{"astId":1148,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"active","offset":0,"slot":"0","type":"t_bool"},{"astId":1150,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nonce","offset":1,"slot":"0","type":"t_uint64"},{"astId":1152,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"pendingReqCount","offset":9,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Request)3795_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2_5Mock.Request","members":[{"astId":3788,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"subId","offset":0,"slot":"0","type":"t_uint256"},{"astId":3790,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"callbackGasLimit","offset":0,"slot":"1","type":"t_uint32"},{"astId":3792,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"numWords","offset":4,"slot":"1","type":"t_uint32"},{"astId":3794,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"extraArgs","offset":0,"slot":"2","type":"t_bytes_storage"}],"numberOfBytes":"96"},"t_struct(Set)382_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":377,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":381,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(Subscription)1138_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Subscription","members":[{"astId":1133,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":1135,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nativeBalance","offset":12,"slot":"0","type":"t_uint96"},{"astId":1137,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"reqCount","offset":24,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)1146_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.SubscriptionConfig","members":[{"astId":1140,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1142,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1145,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_struct(UintSet)854_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":853,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)382_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"notice":"fulfillRandomWordsWithOverride allows the user to pass in their own random words."},"fundSubscription(uint256,uint256)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint256)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"recoverNativeFunds(address)":{"notice":"Recover native sent with transfer/call/send instead of fundSubscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."},"setConfig()":{"notice":"Sets the configuration of the vrfv2 mock coordinator"},"setLINKAndLINKNativeFeed(address,address)":{"notice":"set the LINK token contract and link native feed to be used by this coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"contracts/Lottery.sol":{"Lottery":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subscriptionId","type":"uint256"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Lottery__Closed","type":"error"},{"inputs":[],"name":"Lottery__NotEnoughETHforTicket","type":"error"},{"inputs":[],"name":"Lottery__TransactionFailed","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"LotteryEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedLotteryWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[],"name":"EnterLottery","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLotteryState","outputs":[{"internalType":"enum Lottery.LotteryState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmations","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getTicketPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getcallbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getkeyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getsubscriptionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"Harigovind M G","details":"This implements Chainlink VRF for ensuring the randomness and Chainlink Keepers for the automation of the Lottery","kind":"dev","methods":{},"title":"A Ethereum Lottery Smart Contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_2417":{"entryPoint":null,"id":2417,"parameterSlots":1,"returnSlots":0},"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_4649":{"entryPoint":null,"id":4649,"parameterSlots":6,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":599,"id":180,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1566,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1444,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1605,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1347,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":939,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":907,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1008,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1126,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":1478,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":902,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":1364,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1525,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":959,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1077,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1018,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1142,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5386:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"890:32:21","statements":[{"nodeType":"YulAssignment","src":"900:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:21","type":""}],"src":"845:77:21"},{"body":{"nodeType":"YulBlock","src":"971:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:21"},"nodeType":"YulFunctionCall","src":"1030:12:21"},"nodeType":"YulExpressionStatement","src":"1030:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1001:17:21"},"nodeType":"YulFunctionCall","src":"1001:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:21"},"nodeType":"YulFunctionCall","src":"991:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:21"},"nodeType":"YulFunctionCall","src":"984:43:21"},"nodeType":"YulIf","src":"981:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:21","type":""}],"src":"928:122:21"},{"body":{"nodeType":"YulBlock","src":"1119:80:21","statements":[{"nodeType":"YulAssignment","src":"1129:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:21"},"nodeType":"YulFunctionCall","src":"1138:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1160:26:21"},"nodeType":"YulFunctionCall","src":"1160:33:21"},"nodeType":"YulExpressionStatement","src":"1160:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:21","type":""}],"src":"1056:143:21"},{"body":{"nodeType":"YulBlock","src":"1250:32:21","statements":[{"nodeType":"YulAssignment","src":"1260:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1271:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1260:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1242:7:21","type":""}],"src":"1205:77:21"},{"body":{"nodeType":"YulBlock","src":"1331:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:21"},"nodeType":"YulFunctionCall","src":"1390:12:21"},"nodeType":"YulExpressionStatement","src":"1390:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1354:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1379:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1361:17:21"},"nodeType":"YulFunctionCall","src":"1361:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1351:2:21"},"nodeType":"YulFunctionCall","src":"1351:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:21"},"nodeType":"YulFunctionCall","src":"1344:43:21"},"nodeType":"YulIf","src":"1341:63:21"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:21","type":""}],"src":"1288:122:21"},{"body":{"nodeType":"YulBlock","src":"1479:80:21","statements":[{"nodeType":"YulAssignment","src":"1489:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:21"},"nodeType":"YulFunctionCall","src":"1498:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1520:26:21"},"nodeType":"YulFunctionCall","src":"1520:33:21"},"nodeType":"YulExpressionStatement","src":"1520:33:21"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1465:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1473:5:21","type":""}],"src":"1416:143:21"},{"body":{"nodeType":"YulBlock","src":"1609:49:21","statements":[{"nodeType":"YulAssignment","src":"1619:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1634:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1641:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1630:3:21"},"nodeType":"YulFunctionCall","src":"1630:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1619:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1591:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1601:7:21","type":""}],"src":"1565:93:21"},{"body":{"nodeType":"YulBlock","src":"1706:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"1762:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1774:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:21"},"nodeType":"YulFunctionCall","src":"1764:12:21"},"nodeType":"YulExpressionStatement","src":"1764:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1729:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1753:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1736:16:21"},"nodeType":"YulFunctionCall","src":"1736:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1726:2:21"},"nodeType":"YulFunctionCall","src":"1726:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1719:6:21"},"nodeType":"YulFunctionCall","src":"1719:42:21"},"nodeType":"YulIf","src":"1716:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1699:5:21","type":""}],"src":"1664:120:21"},{"body":{"nodeType":"YulBlock","src":"1852:79:21","statements":[{"nodeType":"YulAssignment","src":"1862:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1877:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1871:5:21"},"nodeType":"YulFunctionCall","src":"1871:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1919:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1893:25:21"},"nodeType":"YulFunctionCall","src":"1893:32:21"},"nodeType":"YulExpressionStatement","src":"1893:32:21"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1830:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1838:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1846:5:21","type":""}],"src":"1790:141:21"},{"body":{"nodeType":"YulBlock","src":"2098:971:21","statements":[{"body":{"nodeType":"YulBlock","src":"2145:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2147:77:21"},"nodeType":"YulFunctionCall","src":"2147:79:21"},"nodeType":"YulExpressionStatement","src":"2147:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2119:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2128:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2115:3:21"},"nodeType":"YulFunctionCall","src":"2115:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2140:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2111:3:21"},"nodeType":"YulFunctionCall","src":"2111:33:21"},"nodeType":"YulIf","src":"2108:120:21"},{"nodeType":"YulBlock","src":"2238:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2253:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2267:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2257:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2282:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2328:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2339:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:21"},"nodeType":"YulFunctionCall","src":"2324:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2348:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2292:31:21"},"nodeType":"YulFunctionCall","src":"2292:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2282:6:21"}]}]},{"nodeType":"YulBlock","src":"2376:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2391:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2405:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2395:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2421:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2467:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2463:3:21"},"nodeType":"YulFunctionCall","src":"2463:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2487:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2431:31:21"},"nodeType":"YulFunctionCall","src":"2431:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2421:6:21"}]}]},{"nodeType":"YulBlock","src":"2515:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2530:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2544:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2534:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2560:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2606:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2617:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:21"},"nodeType":"YulFunctionCall","src":"2602:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2626:7:21"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2570:31:21"},"nodeType":"YulFunctionCall","src":"2570:64:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2560:6:21"}]}]},{"nodeType":"YulBlock","src":"2654:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2669:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2683:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2673:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2699:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2745:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2756:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2741:3:21"},"nodeType":"YulFunctionCall","src":"2741:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2765:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2709:31:21"},"nodeType":"YulFunctionCall","src":"2709:64:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2699:6:21"}]}]},{"nodeType":"YulBlock","src":"2793:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2808:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2822:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2812:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2839:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2884:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2895:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2880:3:21"},"nodeType":"YulFunctionCall","src":"2880:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2904:7:21"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"2849:30:21"},"nodeType":"YulFunctionCall","src":"2849:63:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2839:6:21"}]}]},{"nodeType":"YulBlock","src":"2932:130:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2947:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2961:3:21","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2951:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2978:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3024:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3035:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3020:3:21"},"nodeType":"YulFunctionCall","src":"3020:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3044:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2988:31:21"},"nodeType":"YulFunctionCall","src":"2988:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2978:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2028:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2039:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2051:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2059:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2067:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2075:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2083:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2091:6:21","type":""}],"src":"1937:1132:21"},{"body":{"nodeType":"YulBlock","src":"3171:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3188:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3193:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3181:6:21"},"nodeType":"YulFunctionCall","src":"3181:19:21"},"nodeType":"YulExpressionStatement","src":"3181:19:21"},{"nodeType":"YulAssignment","src":"3209:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3228:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3233:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3224:3:21"},"nodeType":"YulFunctionCall","src":"3224:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3209:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3143:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"3148:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3159:11:21","type":""}],"src":"3075:169:21"},{"body":{"nodeType":"YulBlock","src":"3356:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3378:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3386:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3374:3:21"},"nodeType":"YulFunctionCall","src":"3374:14:21"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"3390:26:21","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3367:6:21"},"nodeType":"YulFunctionCall","src":"3367:50:21"},"nodeType":"YulExpressionStatement","src":"3367:50:21"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3348:6:21","type":""}],"src":"3250:174:21"},{"body":{"nodeType":"YulBlock","src":"3576:220:21","statements":[{"nodeType":"YulAssignment","src":"3586:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3652:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3657:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3593:58:21"},"nodeType":"YulFunctionCall","src":"3593:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3586:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3758:3:21"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"3669:88:21"},"nodeType":"YulFunctionCall","src":"3669:93:21"},"nodeType":"YulExpressionStatement","src":"3669:93:21"},{"nodeType":"YulAssignment","src":"3771:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3782:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3787:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:21"},"nodeType":"YulFunctionCall","src":"3778:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3771:3:21"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3564:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3572:3:21","type":""}],"src":"3430:366:21"},{"body":{"nodeType":"YulBlock","src":"3973:248:21","statements":[{"nodeType":"YulAssignment","src":"3983:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3995:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4006:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:21"},"nodeType":"YulFunctionCall","src":"3991:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3983:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4030:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4041:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4026:3:21"},"nodeType":"YulFunctionCall","src":"4026:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4049:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4055:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4045:3:21"},"nodeType":"YulFunctionCall","src":"4045:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:21"},"nodeType":"YulFunctionCall","src":"4019:47:21"},"nodeType":"YulExpressionStatement","src":"4019:47:21"},{"nodeType":"YulAssignment","src":"4075:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4209:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4083:124:21"},"nodeType":"YulFunctionCall","src":"4083:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4075:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3953:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3968:4:21","type":""}],"src":"3802:419:21"},{"body":{"nodeType":"YulBlock","src":"4255:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4275:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:21"},"nodeType":"YulFunctionCall","src":"4265:88:21"},"nodeType":"YulExpressionStatement","src":"4265:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4372:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4362:6:21"},"nodeType":"YulFunctionCall","src":"4362:15:21"},"nodeType":"YulExpressionStatement","src":"4362:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4393:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4396:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4386:6:21"},"nodeType":"YulFunctionCall","src":"4386:15:21"},"nodeType":"YulExpressionStatement","src":"4386:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"4227:180:21"},{"body":{"nodeType":"YulBlock","src":"4519:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4541:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4549:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:21"},"nodeType":"YulFunctionCall","src":"4537:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"4553:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4530:6:21"},"nodeType":"YulFunctionCall","src":"4530:49:21"},"nodeType":"YulExpressionStatement","src":"4530:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4511:6:21","type":""}],"src":"4413:173:21"},{"body":{"nodeType":"YulBlock","src":"4738:220:21","statements":[{"nodeType":"YulAssignment","src":"4748:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4814:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4819:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4755:58:21"},"nodeType":"YulFunctionCall","src":"4755:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4748:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4920:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4831:88:21"},"nodeType":"YulFunctionCall","src":"4831:93:21"},"nodeType":"YulExpressionStatement","src":"4831:93:21"},{"nodeType":"YulAssignment","src":"4933:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4944:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4940:3:21"},"nodeType":"YulFunctionCall","src":"4940:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4933:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4726:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4734:3:21","type":""}],"src":"4592:366:21"},{"body":{"nodeType":"YulBlock","src":"5135:248:21","statements":[{"nodeType":"YulAssignment","src":"5145:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5157:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5168:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5153:3:21"},"nodeType":"YulFunctionCall","src":"5153:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5145:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5192:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5203:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5188:3:21"},"nodeType":"YulFunctionCall","src":"5188:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5211:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5217:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5207:3:21"},"nodeType":"YulFunctionCall","src":"5207:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5181:6:21"},"nodeType":"YulFunctionCall","src":"5181:47:21"},"nodeType":"YulExpressionStatement","src":"5181:47:21"},{"nodeType":"YulAssignment","src":"5237:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5371:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5245:124:21"},"nodeType":"YulFunctionCall","src":"5245:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5237:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5115:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5130:4:21","type":""}],"src":"4964:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040523480156200001257600080fd5b506040516200266b3803806200266b8339818101604052810190620000389190620004a7565b85338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a590620005a4565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001355762000134816200025760201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200019f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505084608081815250508360a081815250508260c081815250508163ffffffff1660e08163ffffffff16815250506000600560146101000a81548160ff02191690836001811115620002365762000235620005c6565b5b02179055504260048190555080610100818152505050505050505062000667565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002bf9062000645565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003b8826200038b565b9050919050565b620003ca81620003ab565b8114620003d657600080fd5b50565b600081519050620003ea81620003bf565b92915050565b6000819050919050565b6200040581620003f0565b81146200041157600080fd5b50565b6000815190506200042581620003fa565b92915050565b6000819050919050565b62000440816200042b565b81146200044c57600080fd5b50565b600081519050620004608162000435565b92915050565b600063ffffffff82169050919050565b620004818162000466565b81146200048d57600080fd5b50565b600081519050620004a18162000476565b92915050565b60008060008060008060c08789031215620004c757620004c662000386565b5b6000620004d789828a01620003d9565b9650506020620004ea89828a0162000414565b9550506040620004fd89828a016200044f565b94505060606200051089828a0162000414565b93505060806200052389828a0162000490565b92505060a06200053689828a0162000414565b9150509295509295509295565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200058c60188362000543565b9150620005998262000554565b602082019050919050565b60006020820190508181036000830152620005bf816200057d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200062d60178362000543565b91506200063a82620005f5565b602082019050919050565b6000602082019050818103600083015262000660816200061e565b9050919050565b60805160a05160c05160e05161010051611f9c620006cf600039600081816109a60152610e160152600081816107d50152610e3e0152600081816107a40152610e8c0152600081816106e2015261077e0152600081816105710152610be40152611f9c6000f3fe60806040526004361061012e5760003560e01c80636e04ff0d116100ab57806391ad27b41161006f57806391ad27b4146103a95780639862eed0146103d45780639eccacf6146103ff578063b4f8d9f21461042a578063f2fde38b14610455578063f43b52cb1461047e57610135565b80636e04ff0d146102d557806379ba50971461031357806387bb7ae01461032a5780638da5cb5b146103555780638ea981171461038057610135565b8063473f1ddc116100f2578063473f1ddc146101fe57806353a2c19a1461022957806355c9e926146102545780635f1b0fd81461027f5780636b68c03c146102aa57610135565b80631fe543e31461013a57806330f4c43d1461016357806340cc232b1461016d5780634585e33b14610198578063460e2049146101c157610135565b3661013557005b600080fd5b34801561014657600080fd5b50610161600480360381019061015c91906114ab565b6104a9565b005b61016b61056f565b005b34801561017957600080fd5b506101826106de565b60405161018f9190611524565b60405180910390f35b3480156101a457600080fd5b506101bf60048036038101906101ba9190611595565b610706565b005b3480156101cd57600080fd5b506101e860048036038101906101e391906115e2565b6108bc565b6040516101f59190611650565b60405180910390f35b34801561020a57600080fd5b50610213610904565b6040516102209190611650565b60405180910390f35b34801561023557600080fd5b5061023e61092e565b60405161024b919061168a565b60405180910390f35b34801561026057600080fd5b50610269610937565b60405161027691906116b4565b60405180910390f35b34801561028b57600080fd5b50610294610944565b6040516102a191906116ec565b60405180910390f35b3480156102b657600080fd5b506102bf61094d565b6040516102cc919061177e565b60405180910390f35b3480156102e157600080fd5b506102fc60048036038101906102f791906118da565b610964565b60405161030a9291906119bd565b60405180910390f35b34801561031f57600080fd5b50610328610a4b565b005b34801561033657600080fd5b5061033f610be0565b60405161034c91906116b4565b60405180910390f35b34801561036157600080fd5b5061036a610c08565b6040516103779190611650565b60405180910390f35b34801561038c57600080fd5b506103a760048036038101906103a29190611a19565b610c31565b005b3480156103b557600080fd5b506103be610e12565b6040516103cb91906116b4565b60405180910390f35b3480156103e057600080fd5b506103e9610e3a565b6040516103f6919061168a565b60405180910390f35b34801561040b57600080fd5b50610414610e62565b6040516104219190611aa5565b60405180910390f35b34801561043657600080fd5b5061043f610e88565b60405161044c91906116b4565b60405180910390f35b34801561046157600080fd5b5061047c60048036038101906104779190611a19565b610eb0565b005b34801561048a57600080fd5b50610493610ec4565b6040516104a091906116b4565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055f5733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610556929190611ac0565b60405180910390fd5b61056a838383610ece565b505050565b7f00000000000000000000000000000000000000000000000000000000000000003410156105c9576040517f944a25f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156105dd576105dc611707565b5b600560149054906101000a900460ff1660018111156105ff576105fe611707565b5b14610636576040517f7d6d79f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f1d64fb5ba9f2548c5b98468d58f25b87b9e866afee0122e92d9fe722bf85076c60405160405180910390a2565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6001600560146101000a81548160ff0219169083600181111561072c5761072b611707565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1c385e6040518060c001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000008152602001600361ffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001600163ffffffff168152602001610826604051806020016040528060011515815250611101565b8152506040518263ffffffff1660e01b81526004016108459190611bf8565b6020604051808303816000875af1158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190611c2f565b9050807febf56642252004c18a776f30d528e7a0ce8c5db14b6596fb6550f630c8a24c6c60405160405180910390a2505050565b6000600382815481106108d2576108d1611c5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001905090565b6000600380549050905090565b60006003905090565b6000600560149054906101000a900460ff16905090565b60006060600080600181111561097d5761097c611707565b5b600560149054906101000a900460ff16600181111561099f5761099e611707565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600454426109d39190611cba565b119050600080600380549050119050600080471190508380156109f35750825b80156109fc5750815b8015610a055750805b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad290611d4b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c39610c08565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610cc25750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610d315733610cd0610c08565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c1000000000000000000000000000000000000000000000000000000008152600401610d2893929190611d6b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d97576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be681604051610e079190611650565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610eb8611199565b610ec181611229565b50565b6000600454905090565b600060038054905083836000818110610eea57610ee9611c5c565b5b90506020020135610efb9190611dd1565b9050600060038281548110610f1357610f12611c5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610fa790611e33565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b505090506000600560146101000a81548160ff0219169083600181111561101357611012611707565b5b0217905550600067ffffffffffffffff811115611033576110326117af565b5b6040519080825280602002602001820160405280156110615781602001602082028036833780820191505090505b5060039080519060200190611077929190611355565b5042600481905550806110b6576040517f5271696c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a2505050505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa826040516024016111359190611e73565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121e90611eda565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128e90611f46565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b8280548282559060005260206000209081019282156113ce579160200282015b828111156113cd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611375565b5b5090506113db91906113df565b5090565b5b808211156113f85760008160009055506001016113e0565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61142381611410565b811461142e57600080fd5b50565b6000813590506114408161141a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261146b5761146a611446565b5b8235905067ffffffffffffffff8111156114885761148761144b565b5b6020830191508360208202830111156114a4576114a3611450565b5b9250929050565b6000806000604084860312156114c4576114c3611406565b5b60006114d286828701611431565b935050602084013567ffffffffffffffff8111156114f3576114f261140b565b5b6114ff86828701611455565b92509250509250925092565b6000819050919050565b61151e8161150b565b82525050565b60006020820190506115396000830184611515565b92915050565b60008083601f84011261155557611554611446565b5b8235905067ffffffffffffffff8111156115725761157161144b565b5b60208301915083600182028301111561158e5761158d611450565b5b9250929050565b600080602083850312156115ac576115ab611406565b5b600083013567ffffffffffffffff8111156115ca576115c961140b565b5b6115d68582860161153f565b92509250509250929050565b6000602082840312156115f8576115f7611406565b5b600061160684828501611431565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061163a8261160f565b9050919050565b61164a8161162f565b82525050565b60006020820190506116656000830184611641565b92915050565b600063ffffffff82169050919050565b6116848161166b565b82525050565b600060208201905061169f600083018461167b565b92915050565b6116ae81611410565b82525050565b60006020820190506116c960008301846116a5565b92915050565b600061ffff82169050919050565b6116e6816116cf565b82525050565b600060208201905061170160008301846116dd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061174757611746611707565b5b50565b600081905061175882611736565b919050565b60006117688261174a565b9050919050565b6117788161175d565b82525050565b6000602082019050611793600083018461176f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117e78261179e565b810181811067ffffffffffffffff82111715611806576118056117af565b5b80604052505050565b60006118196113fc565b905061182582826117de565b919050565b600067ffffffffffffffff821115611845576118446117af565b5b61184e8261179e565b9050602081019050919050565b82818337600083830152505050565b600061187d6118788461182a565b61180f565b90508281526020810184848401111561189957611898611799565b5b6118a484828561185b565b509392505050565b600082601f8301126118c1576118c0611446565b5b81356118d184826020860161186a565b91505092915050565b6000602082840312156118f0576118ef611406565b5b600082013567ffffffffffffffff81111561190e5761190d61140b565b5b61191a848285016118ac565b91505092915050565b60008115159050919050565b61193881611923565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561197857808201518184015260208101905061195d565b60008484015250505050565b600061198f8261193e565b6119998185611949565b93506119a981856020860161195a565b6119b28161179e565b840191505092915050565b60006040820190506119d2600083018561192f565b81810360208301526119e48184611984565b90509392505050565b6119f68161162f565b8114611a0157600080fd5b50565b600081359050611a13816119ed565b92915050565b600060208284031215611a2f57611a2e611406565b5b6000611a3d84828501611a04565b91505092915050565b6000819050919050565b6000611a6b611a66611a618461160f565b611a46565b61160f565b9050919050565b6000611a7d82611a50565b9050919050565b6000611a8f82611a72565b9050919050565b611a9f81611a84565b82525050565b6000602082019050611aba6000830184611a96565b92915050565b6000604082019050611ad56000830185611641565b611ae26020830184611641565b9392505050565b611af28161150b565b82525050565b611b0181611410565b82525050565b611b10816116cf565b82525050565b611b1f8161166b565b82525050565b600082825260208201905092915050565b6000611b418261193e565b611b4b8185611b25565b9350611b5b81856020860161195a565b611b648161179e565b840191505092915050565b600060c083016000830151611b876000860182611ae9565b506020830151611b9a6020860182611af8565b506040830151611bad6040860182611b07565b506060830151611bc06060860182611b16565b506080830151611bd36080860182611b16565b5060a083015184820360a0860152611beb8282611b36565b9150508091505092915050565b60006020820190508181036000830152611c128184611b6f565b905092915050565b600081519050611c298161141a565b92915050565b600060208284031215611c4557611c44611406565b5b6000611c5384828501611c1a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cc582611410565b9150611cd083611410565b9250828203905081811115611ce857611ce7611c8b565b5b92915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000611d35601683611cee565b9150611d4082611cff565b602082019050919050565b60006020820190508181036000830152611d6481611d28565b9050919050565b6000606082019050611d806000830186611641565b611d8d6020830185611641565b611d9a6040830184611641565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ddc82611410565b9150611de783611410565b925082611df757611df6611da2565b5b828206905092915050565b600081905092915050565b50565b6000611e1d600083611e02565b9150611e2882611e0d565b600082019050919050565b6000611e3e82611e10565b9150819050919050565b611e5181611923565b82525050565b602082016000820151611e6d6000850182611e48565b50505050565b6000602082019050611e886000830184611e57565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611ec4601683611cee565b9150611ecf82611e8e565b602082019050919050565b60006020820190508181036000830152611ef381611eb7565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611f30601783611cee565b9150611f3b82611efa565b602082019050919050565b60006020820190508181036000830152611f5f81611f23565b905091905056fea2646970667358221220552c3b0210c3af31000e5ca3a3fc18fe813e0f9041f033d322d3649910fa8dc964736f6c63430008130033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x266B CODESIZE SUB DUP1 PUSH3 0x266B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x4A7 JUMP JUMPDEST DUP6 CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA5 SWAP1 PUSH3 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x135 JUMPI PUSH3 0x134 DUP2 PUSH3 0x257 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x19F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP5 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x236 JUMPI PUSH3 0x235 PUSH3 0x5C6 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x667 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2BF SWAP1 PUSH3 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B8 DUP3 PUSH3 0x38B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CA DUP2 PUSH3 0x3AB JUMP JUMPDEST DUP2 EQ PUSH3 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3EA DUP2 PUSH3 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x405 DUP2 PUSH3 0x3F0 JUMP JUMPDEST DUP2 EQ PUSH3 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x425 DUP2 PUSH3 0x3FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x440 DUP2 PUSH3 0x42B JUMP JUMPDEST DUP2 EQ PUSH3 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x460 DUP2 PUSH3 0x435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x481 DUP2 PUSH3 0x466 JUMP JUMPDEST DUP2 EQ PUSH3 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4A1 DUP2 PUSH3 0x476 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4C7 JUMPI PUSH3 0x4C6 PUSH3 0x386 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x4D7 DUP10 DUP3 DUP11 ADD PUSH3 0x3D9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x4EA DUP10 DUP3 DUP11 ADD PUSH3 0x414 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4FD DUP10 DUP3 DUP11 ADD PUSH3 0x44F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x510 DUP10 DUP3 DUP11 ADD PUSH3 0x414 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x523 DUP10 DUP3 DUP11 ADD PUSH3 0x490 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x536 DUP10 DUP3 DUP11 ADD PUSH3 0x414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58C PUSH1 0x18 DUP4 PUSH3 0x543 JUMP JUMPDEST SWAP2 POP PUSH3 0x599 DUP3 PUSH3 0x554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5BF DUP2 PUSH3 0x57D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x62D PUSH1 0x17 DUP4 PUSH3 0x543 JUMP JUMPDEST SWAP2 POP PUSH3 0x63A DUP3 PUSH3 0x5F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x660 DUP2 PUSH3 0x61E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x1F9C PUSH3 0x6CF PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x9A6 ADD MSTORE PUSH2 0xE16 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7D5 ADD MSTORE PUSH2 0xE3E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7A4 ADD MSTORE PUSH2 0xE8C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x6E2 ADD MSTORE PUSH2 0x77E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x571 ADD MSTORE PUSH2 0xBE4 ADD MSTORE PUSH2 0x1F9C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x9862EED0 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xB4F8D9F2 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF43B52CB EQ PUSH2 0x47E JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x87BB7AE0 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x380 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x473F1DDC GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x55C9E926 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6B68C03C EQ PUSH2 0x2AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x30F4C43D EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x40CC232B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x460E2049 EQ PUSH2 0x1C1 JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP3 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0xA4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0xEB0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55F JUMPI CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56A DUP4 DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x944A25F800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5DD JUMPI PUSH2 0x5DC PUSH2 0x1707 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5FE PUSH2 0x1707 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D6D79F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D64FB5BA9F2548C5B98468D58F25B87B9E866AFEE0122E92D9FE722BF85076C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x1707 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9B1C385E PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x826 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH2 0x1101 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xEBF56642252004C18A776F30D528E7A0CE8C5DB14B6596FB6550F630C8A24C6C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D2 JUMPI PUSH2 0x8D1 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0x1707 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0x1707 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x9F3 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x9FC JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xA05 JUMPI POP DUP1 JUMPDEST SWAP6 POP DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC39 PUSH2 0xC08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCC2 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xD31 JUMPI CALLER PUSH2 0xCD0 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x61DB9C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEB8 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xEC1 DUP2 PUSH2 0x1229 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFA7 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1013 JUMPI PUSH2 0x1012 PUSH2 0x1707 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1033 JUMPI PUSH2 0x1032 PUSH2 0x17AF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1061 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1077 SWAP3 SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5271696C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP1 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1297 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128E SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x13CE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x13CD JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1375 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x13DB SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x13E0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1423 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP2 EQ PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1440 DUP2 PUSH2 0x141A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x144B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x1450 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH2 0x14FF DUP7 DUP3 DUP8 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x150B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1539 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1555 JUMPI PUSH2 0x1554 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x144B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x1450 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AB PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH2 0x15D6 DUP6 DUP3 DUP7 ADD PUSH2 0x153F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1606 DUP5 DUP3 DUP6 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163A DUP3 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164A DUP2 PUSH2 0x162F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1665 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1684 DUP2 PUSH2 0x166B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AE DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1701 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1747 JUMPI PUSH2 0x1746 PUSH2 0x1707 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1758 DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1768 DUP3 PUSH2 0x174A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1778 DUP2 PUSH2 0x175D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1793 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x176F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17E7 DUP3 PUSH2 0x179E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1806 JUMPI PUSH2 0x1805 PUSH2 0x17AF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP PUSH2 0x1825 DUP3 DUP3 PUSH2 0x17DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x17AF JUMP JUMPDEST JUMPDEST PUSH2 0x184E DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187D PUSH2 0x1878 DUP5 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST PUSH2 0x18A4 DUP5 DUP3 DUP6 PUSH2 0x185B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x186A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F0 JUMPI PUSH2 0x18EF PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x190E JUMPI PUSH2 0x190D PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH2 0x191A DUP5 DUP3 DUP6 ADD PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x1923 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1978 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198F DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1999 DUP2 DUP6 PUSH2 0x1949 JUMP JUMPDEST SWAP4 POP PUSH2 0x19A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195A JUMP JUMPDEST PUSH2 0x19B2 DUP2 PUSH2 0x179E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x192F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19E4 DUP2 DUP5 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A13 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2F JUMPI PUSH2 0x1A2E PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3D DUP5 DUP3 DUP6 ADD PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6B PUSH2 0x1A66 PUSH2 0x1A61 DUP5 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x160F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7D DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8F DUP3 PUSH2 0x1A72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1AE2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AF2 DUP2 PUSH2 0x150B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B01 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x166B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B41 DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1B4B DUP2 DUP6 PUSH2 0x1B25 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B5B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x179E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1B87 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1AE9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1B9A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1BAD PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1BC0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1B16 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1BD3 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1B16 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1BEB DUP3 DUP3 PUSH2 0x1B36 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C12 DUP2 DUP5 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C29 DUP2 PUSH2 0x141A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C53 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CC5 DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD0 DUP4 PUSH2 0x1410 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x1C8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x16 DUP4 PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1D8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1D9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DDC DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE7 DUP4 PUSH2 0x1410 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1DA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D PUSH1 0x0 DUP4 PUSH2 0x1E02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E28 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3E DUP3 PUSH2 0x1E10 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x1923 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1E6D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1E48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH1 0x16 DUP4 PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP3 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF3 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 PUSH1 0x17 DUP4 PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3B DUP3 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5F DUP2 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x2C EXTCODESIZE MUL LT 0xC3 0xAF BALANCE STOP 0xE 0x5C LOG3 LOG3 0xFC XOR INVALID DUP2 RETURNDATACOPY 0xF SWAP1 COINBASE CREATE CALLER 0xD3 0x22 0xD3 PUSH5 0x9910FA8DC9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"915:5361:18:-:0;;;1805:590;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2024:16;6254:10:10;355:8:1;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;6303:1:10::1;6276:29;;:15;:29;;::::0;6272:70:::1;;6322:13;;;;;;;;;;;;;;6272:70;6388:15;6347:16;;:57;;;;;;;;;;;;;;;;;;6202:207:::0;2068:11:18::1;2052:27;;;;::::0;::::1;2176:7;2164:19;;;;::::0;::::1;2212:14;2193:33;;;;::::0;::::1;2257:16;2236:37;;;;;;;;::::0;::::1;2300:17;2283:14;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2343:15;2327;:31;;;;2380:8;2368:20;;;;::::0;::::1;1805:590:::0;;;;;;915:5361;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:93::-;1601:7;1641:10;1634:5;1630:22;1619:33;;1565:93;;;:::o;1664:120::-;1736:23;1753:5;1736:23;:::i;:::-;1729:5;1726:34;1716:62;;1774:1;1771;1764:12;1716:62;1664:120;:::o;1790:141::-;1846:5;1877:6;1871:13;1862:22;;1893:32;1919:5;1893:32;:::i;:::-;1790:141;;;;:::o;1937:1132::-;2051:6;2059;2067;2075;2083;2091;2140:3;2128:9;2119:7;2115:23;2111:33;2108:120;;;2147:79;;:::i;:::-;2108:120;2267:1;2292:64;2348:7;2339:6;2328:9;2324:22;2292:64;:::i;:::-;2282:74;;2238:128;2405:2;2431:64;2487:7;2478:6;2467:9;2463:22;2431:64;:::i;:::-;2421:74;;2376:129;2544:2;2570:64;2626:7;2617:6;2606:9;2602:22;2570:64;:::i;:::-;2560:74;;2515:129;2683:2;2709:64;2765:7;2756:6;2745:9;2741:22;2709:64;:::i;:::-;2699:74;;2654:129;2822:3;2849:63;2904:7;2895:6;2884:9;2880:22;2849:63;:::i;:::-;2839:73;;2793:129;2961:3;2988:64;3044:7;3035:6;3024:9;3020:22;2988:64;:::i;:::-;2978:74;;2932:130;1937:1132;;;;;;;;:::o;3075:169::-;3159:11;3193:6;3188:3;3181:19;3233:4;3228:3;3224:14;3209:29;;3075:169;;;;:::o;3250:174::-;3390:26;3386:1;3378:6;3374:14;3367:50;3250:174;:::o;3430:366::-;3572:3;3593:67;3657:2;3652:3;3593:67;:::i;:::-;3586:74;;3669:93;3758:3;3669:93;:::i;:::-;3787:2;3782:3;3778:12;3771:19;;3430:366;;;:::o;3802:419::-;3968:4;4006:2;3995:9;3991:18;3983:26;;4055:9;4049:4;4045:20;4041:1;4030:9;4026:17;4019:47;4083:131;4209:4;4083:131;:::i;:::-;4075:139;;3802:419;;;:::o;4227:180::-;4275:77;4272:1;4265:88;4372:4;4369:1;4362:15;4396:4;4393:1;4386:15;4413:173;4553:25;4549:1;4541:6;4537:14;4530:49;4413:173;:::o;4592:366::-;4734:3;4755:67;4819:2;4814:3;4755:67;:::i;:::-;4748:74;;4831:93;4920:3;4831:93;:::i;:::-;4949:2;4944:3;4940:12;4933:19;;4592:366;;;:::o;4964:419::-;5130:4;5168:2;5157:9;5153:18;5145:26;;5217:9;5211:4;5207:20;5203:1;5192:9;5188:17;5181:47;5245:131;5371:4;5245:131;:::i;:::-;5237:139;;4964:419;;;:::o;915:5361:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EnterLottery_4786":{"entryPoint":1391,"id":4786,"parameterSlots":0,"returnSlots":0},"@_4861":{"entryPoint":null,"id":4861,"parameterSlots":0,"returnSlots":0},"@_argsToBytes_2682":{"entryPoint":4353,"id":2682,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_180":{"entryPoint":4649,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":4505,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":2635,"id":146,"parameterSlots":0,"returnSlots":0},"@checkUpkeep_4712":{"entryPoint":2404,"id":4712,"parameterSlots":1,"returnSlots":2},"@fulfillRandomWords_4857":{"entryPoint":3790,"id":4857,"parameterSlots":3,"returnSlots":0},"@getInterval_4926":{"entryPoint":3602,"id":4926,"parameterSlots":0,"returnSlots":1},"@getLatestTimestamp_4918":{"entryPoint":3780,"id":4918,"parameterSlots":0,"returnSlots":1},"@getLotteryState_4898":{"entryPoint":2381,"id":4898,"parameterSlots":0,"returnSlots":1},"@getNumPlayers_4907":{"entryPoint":2359,"id":4907,"parameterSlots":0,"returnSlots":1},"@getNumWords_4958":{"entryPoint":2350,"id":4958,"parameterSlots":0,"returnSlots":1},"@getPlayers_4881":{"entryPoint":2236,"id":4881,"parameterSlots":1,"returnSlots":1},"@getRecentWinner_4889":{"entryPoint":2308,"id":4889,"parameterSlots":0,"returnSlots":1},"@getRequestConfirmations_4966":{"entryPoint":2372,"id":4966,"parameterSlots":0,"returnSlots":1},"@getTicketPrice_4869":{"entryPoint":3040,"id":4869,"parameterSlots":0,"returnSlots":1},"@getcallbackGasLimit_4950":{"entryPoint":3642,"id":4950,"parameterSlots":0,"returnSlots":1},"@getkeyHash_4934":{"entryPoint":1758,"id":4934,"parameterSlots":0,"returnSlots":1},"@getsubscriptionId_4942":{"entryPoint":3720,"id":4942,"parameterSlots":0,"returnSlots":1},"@owner_156":{"entryPoint":3080,"id":156,"parameterSlots":0,"returnSlots":1},"@performUpkeep_4749":{"entryPoint":1798,"id":4749,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_2458":{"entryPoint":1193,"id":2458,"parameterSlots":3,"returnSlots":0},"@s_vrfCoordinator_2389":{"entryPoint":3682,"id":2389,"parameterSlots":0,"returnSlots":0},"@setCoordinator_2489":{"entryPoint":3121,"id":2489,"parameterSlots":1,"returnSlots":0},"@transferOwnership_110":{"entryPoint":3760,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6250,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5205,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5439,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":5525,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":6362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5291,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5697,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":7752,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6447,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":6889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":6966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address_fromStack":{"entryPoint":6806,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_LotteryState_$4562_to_t_uint8_fromStack":{"entryPoint":5999,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":7464,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":7863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":7971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack":{"entryPoint":7767,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_RandomWordsRequest_$2667_memory_ptr_to_t_struct$_RandomWordsRequest_$2667_memory_ptr_fromStack":{"entryPoint":7023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16":{"entryPoint":6919,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":5853,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5797,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":6934,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":5755,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":6848,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":7531,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6589,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2538__to_t_address__fromStack_reversed":{"entryPoint":6821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_LotteryState_$4562__to_t_uint8__fromStack_reversed":{"entryPoint":6014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr__to_t_struct$_ExtraArgsV1_$2654_memory_ptr__fromStack_reversed":{"entryPoint":7795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_RandomWordsRequest_$2667_memory_ptr__to_t_struct$_RandomWordsRequest_$2667_memory_ptr__fromStack_reversed":{"entryPoint":7160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":5868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":5770,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6159,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5116,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6186,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6462,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":6949,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6473,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7682,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7406,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7354,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5679,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6435,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5387,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_LotteryState_$4562":{"entryPoint":5962,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":5839,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5136,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":5739,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address":{"entryPoint":6788,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_LotteryState_$4562_to_t_uint8":{"entryPoint":5981,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6770,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6736,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6235,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6490,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":6110,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6726,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7633,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7307,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7586,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5895,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7260,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6063,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5195,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5190,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5200,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6041,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5131,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5126,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6046,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":7423,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":7822,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":7693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":7930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_LotteryState_$4562":{"entryPoint":5942,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6637,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5146,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22958:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:32:21","statements":[{"nodeType":"YulAssignment","src":"389:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:77:21"},{"body":{"nodeType":"YulBlock","src":"460:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:21"},"nodeType":"YulFunctionCall","src":"519:12:21"},"nodeType":"YulExpressionStatement","src":"519:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:21"},"nodeType":"YulFunctionCall","src":"490:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:21"},"nodeType":"YulFunctionCall","src":"480:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:21"},"nodeType":"YulFunctionCall","src":"473:43:21"},"nodeType":"YulIf","src":"470:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:21","type":""}],"src":"417:122:21"},{"body":{"nodeType":"YulBlock","src":"597:87:21","statements":[{"nodeType":"YulAssignment","src":"607:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:21"},"nodeType":"YulFunctionCall","src":"616:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:21"},"nodeType":"YulFunctionCall","src":"645:33:21"},"nodeType":"YulExpressionStatement","src":"645:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:21","type":""}],"src":"545:139:21"},{"body":{"nodeType":"YulBlock","src":"779:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"789:6:21"},"nodeType":"YulFunctionCall","src":"789:12:21"},"nodeType":"YulExpressionStatement","src":"789:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"690:117:21"},{"body":{"nodeType":"YulBlock","src":"902:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"919:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"922:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"912:6:21"},"nodeType":"YulFunctionCall","src":"912:12:21"},"nodeType":"YulExpressionStatement","src":"912:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"813:117:21"},{"body":{"nodeType":"YulBlock","src":"1025:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1042:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1045:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1035:6:21"},"nodeType":"YulFunctionCall","src":"1035:12:21"},"nodeType":"YulExpressionStatement","src":"1035:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"936:117:21"},{"body":{"nodeType":"YulBlock","src":"1166:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"1215:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1217:77:21"},"nodeType":"YulFunctionCall","src":"1217:79:21"},"nodeType":"YulExpressionStatement","src":"1217:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1194:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1202:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1190:3:21"},"nodeType":"YulFunctionCall","src":"1190:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1209:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1186:3:21"},"nodeType":"YulFunctionCall","src":"1186:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1179:6:21"},"nodeType":"YulFunctionCall","src":"1179:35:21"},"nodeType":"YulIf","src":"1176:122:21"},{"nodeType":"YulAssignment","src":"1307:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1330:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1317:12:21"},"nodeType":"YulFunctionCall","src":"1317:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1307:6:21"}]},{"body":{"nodeType":"YulBlock","src":"1380:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1382:77:21"},"nodeType":"YulFunctionCall","src":"1382:79:21"},"nodeType":"YulExpressionStatement","src":"1382:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1352:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1360:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1349:2:21"},"nodeType":"YulFunctionCall","src":"1349:30:21"},"nodeType":"YulIf","src":"1346:117:21"},{"nodeType":"YulAssignment","src":"1472:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1496:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:21"},"nodeType":"YulFunctionCall","src":"1484:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1472:8:21"}]},{"body":{"nodeType":"YulBlock","src":"1555:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1557:77:21"},"nodeType":"YulFunctionCall","src":"1557:79:21"},"nodeType":"YulExpressionStatement","src":"1557:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1520:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1534:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1542:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1530:3:21"},"nodeType":"YulFunctionCall","src":"1530:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1516:3:21"},"nodeType":"YulFunctionCall","src":"1516:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"1550:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1513:2:21"},"nodeType":"YulFunctionCall","src":"1513:41:21"},"nodeType":"YulIf","src":"1510:128:21"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1133:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1141:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1149:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1159:6:21","type":""}],"src":"1076:568:21"},{"body":{"nodeType":"YulBlock","src":"1768:586:21","statements":[{"body":{"nodeType":"YulBlock","src":"1814:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1816:77:21"},"nodeType":"YulFunctionCall","src":"1816:79:21"},"nodeType":"YulExpressionStatement","src":"1816:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1789:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1798:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1785:3:21"},"nodeType":"YulFunctionCall","src":"1785:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1810:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1781:3:21"},"nodeType":"YulFunctionCall","src":"1781:32:21"},"nodeType":"YulIf","src":"1778:119:21"},{"nodeType":"YulBlock","src":"1907:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1936:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1926:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1951:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:21"},"nodeType":"YulFunctionCall","src":"1982:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2006:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1961:20:21"},"nodeType":"YulFunctionCall","src":"1961:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1951:6:21"}]}]},{"nodeType":"YulBlock","src":"2034:313:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2049:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2080:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2091:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2076:3:21"},"nodeType":"YulFunctionCall","src":"2076:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2063:12:21"},"nodeType":"YulFunctionCall","src":"2063:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2053:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2142:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2144:77:21"},"nodeType":"YulFunctionCall","src":"2144:79:21"},"nodeType":"YulExpressionStatement","src":"2144:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2114:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2122:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2111:2:21"},"nodeType":"YulFunctionCall","src":"2111:30:21"},"nodeType":"YulIf","src":"2108:117:21"},{"nodeType":"YulAssignment","src":"2239:98:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2309:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2320:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:21"},"nodeType":"YulFunctionCall","src":"2305:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2329:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"2257:47:21"},"nodeType":"YulFunctionCall","src":"2257:80:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2239:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"2247:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1722:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1733:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1745:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1753:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1761:6:21","type":""}],"src":"1650:704:21"},{"body":{"nodeType":"YulBlock","src":"2405:32:21","statements":[{"nodeType":"YulAssignment","src":"2415:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2426:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2415:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2387:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2397:7:21","type":""}],"src":"2360:77:21"},{"body":{"nodeType":"YulBlock","src":"2508:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2525:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2548:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2530:17:21"},"nodeType":"YulFunctionCall","src":"2530:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2518:6:21"},"nodeType":"YulFunctionCall","src":"2518:37:21"},"nodeType":"YulExpressionStatement","src":"2518:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2496:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2503:3:21","type":""}],"src":"2443:118:21"},{"body":{"nodeType":"YulBlock","src":"2665:124:21","statements":[{"nodeType":"YulAssignment","src":"2675:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2698:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:21"},"nodeType":"YulFunctionCall","src":"2683:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2675:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2755:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2768:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2779:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2764:3:21"},"nodeType":"YulFunctionCall","src":"2764:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2711:43:21"},"nodeType":"YulFunctionCall","src":"2711:71:21"},"nodeType":"YulExpressionStatement","src":"2711:71:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2637:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2649:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2660:4:21","type":""}],"src":"2567:222:21"},{"body":{"nodeType":"YulBlock","src":"2882:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"2931:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2933:77:21"},"nodeType":"YulFunctionCall","src":"2933:79:21"},"nodeType":"YulExpressionStatement","src":"2933:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2910:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2918:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2906:3:21"},"nodeType":"YulFunctionCall","src":"2906:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2925:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2902:3:21"},"nodeType":"YulFunctionCall","src":"2902:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2895:6:21"},"nodeType":"YulFunctionCall","src":"2895:35:21"},"nodeType":"YulIf","src":"2892:122:21"},{"nodeType":"YulAssignment","src":"3023:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3046:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3033:12:21"},"nodeType":"YulFunctionCall","src":"3033:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3023:6:21"}]},{"body":{"nodeType":"YulBlock","src":"3096:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3098:77:21"},"nodeType":"YulFunctionCall","src":"3098:79:21"},"nodeType":"YulExpressionStatement","src":"3098:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3068:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3076:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3065:2:21"},"nodeType":"YulFunctionCall","src":"3065:30:21"},"nodeType":"YulIf","src":"3062:117:21"},{"nodeType":"YulAssignment","src":"3188:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3204:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3212:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3200:3:21"},"nodeType":"YulFunctionCall","src":"3200:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3188:8:21"}]},{"body":{"nodeType":"YulBlock","src":"3271:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3273:77:21"},"nodeType":"YulFunctionCall","src":"3273:79:21"},"nodeType":"YulExpressionStatement","src":"3273:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3236:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3250:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3258:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3246:3:21"},"nodeType":"YulFunctionCall","src":"3246:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:21"},"nodeType":"YulFunctionCall","src":"3232:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"3266:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3229:2:21"},"nodeType":"YulFunctionCall","src":"3229:41:21"},"nodeType":"YulIf","src":"3226:128:21"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2849:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2857:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2865:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2875:6:21","type":""}],"src":"2808:552:21"},{"body":{"nodeType":"YulBlock","src":"3451:442:21","statements":[{"body":{"nodeType":"YulBlock","src":"3497:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3499:77:21"},"nodeType":"YulFunctionCall","src":"3499:79:21"},"nodeType":"YulExpressionStatement","src":"3499:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3472:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3468:3:21"},"nodeType":"YulFunctionCall","src":"3468:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3493:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3464:3:21"},"nodeType":"YulFunctionCall","src":"3464:32:21"},"nodeType":"YulIf","src":"3461:119:21"},{"nodeType":"YulBlock","src":"3590:296:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3605:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3636:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3647:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:21"},"nodeType":"YulFunctionCall","src":"3632:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3619:12:21"},"nodeType":"YulFunctionCall","src":"3619:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3609:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3697:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3699:77:21"},"nodeType":"YulFunctionCall","src":"3699:79:21"},"nodeType":"YulExpressionStatement","src":"3699:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3669:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3677:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3666:2:21"},"nodeType":"YulFunctionCall","src":"3666:30:21"},"nodeType":"YulIf","src":"3663:117:21"},{"nodeType":"YulAssignment","src":"3794:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3848:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3859:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3844:3:21"},"nodeType":"YulFunctionCall","src":"3844:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3868:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3812:31:21"},"nodeType":"YulFunctionCall","src":"3812:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3794:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"3802:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3413:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3424:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3436:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3444:6:21","type":""}],"src":"3366:527:21"},{"body":{"nodeType":"YulBlock","src":"3965:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4011:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4013:77:21"},"nodeType":"YulFunctionCall","src":"4013:79:21"},"nodeType":"YulExpressionStatement","src":"4013:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3986:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3995:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3982:3:21"},"nodeType":"YulFunctionCall","src":"3982:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4007:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3978:3:21"},"nodeType":"YulFunctionCall","src":"3978:32:21"},"nodeType":"YulIf","src":"3975:119:21"},{"nodeType":"YulBlock","src":"4104:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4119:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4133:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4123:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4148:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4183:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4194:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4179:3:21"},"nodeType":"YulFunctionCall","src":"4179:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4203:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4158:20:21"},"nodeType":"YulFunctionCall","src":"4158:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4148:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3935:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3946:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3958:6:21","type":""}],"src":"3899:329:21"},{"body":{"nodeType":"YulBlock","src":"4279:81:21","statements":[{"nodeType":"YulAssignment","src":"4289:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4304:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4311:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4300:3:21"},"nodeType":"YulFunctionCall","src":"4300:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4289:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4271:7:21","type":""}],"src":"4234:126:21"},{"body":{"nodeType":"YulBlock","src":"4411:51:21","statements":[{"nodeType":"YulAssignment","src":"4421:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4450:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4432:17:21"},"nodeType":"YulFunctionCall","src":"4432:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4421:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4393:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4403:7:21","type":""}],"src":"4366:96:21"},{"body":{"nodeType":"YulBlock","src":"4533:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4550:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4573:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4555:17:21"},"nodeType":"YulFunctionCall","src":"4555:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4543:6:21"},"nodeType":"YulFunctionCall","src":"4543:37:21"},"nodeType":"YulExpressionStatement","src":"4543:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4521:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4528:3:21","type":""}],"src":"4468:118:21"},{"body":{"nodeType":"YulBlock","src":"4690:124:21","statements":[{"nodeType":"YulAssignment","src":"4700:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4712:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4723:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4708:3:21"},"nodeType":"YulFunctionCall","src":"4708:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4700:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4780:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4804:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:21"},"nodeType":"YulFunctionCall","src":"4789:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4736:43:21"},"nodeType":"YulFunctionCall","src":"4736:71:21"},"nodeType":"YulExpressionStatement","src":"4736:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4662:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4674:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4685:4:21","type":""}],"src":"4592:222:21"},{"body":{"nodeType":"YulBlock","src":"4864:49:21","statements":[{"nodeType":"YulAssignment","src":"4874:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4889:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4896:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4885:3:21"},"nodeType":"YulFunctionCall","src":"4885:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4874:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4846:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4856:7:21","type":""}],"src":"4820:93:21"},{"body":{"nodeType":"YulBlock","src":"4982:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4999:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5021:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"5004:16:21"},"nodeType":"YulFunctionCall","src":"5004:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4992:6:21"},"nodeType":"YulFunctionCall","src":"4992:36:21"},"nodeType":"YulExpressionStatement","src":"4992:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4970:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4977:3:21","type":""}],"src":"4919:115:21"},{"body":{"nodeType":"YulBlock","src":"5136:122:21","statements":[{"nodeType":"YulAssignment","src":"5146:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5158:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5169:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5154:3:21"},"nodeType":"YulFunctionCall","src":"5154:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5146:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5224:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5237:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5248:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5233:3:21"},"nodeType":"YulFunctionCall","src":"5233:17:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"5182:41:21"},"nodeType":"YulFunctionCall","src":"5182:69:21"},"nodeType":"YulExpressionStatement","src":"5182:69:21"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5108:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5120:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5131:4:21","type":""}],"src":"5040:218:21"},{"body":{"nodeType":"YulBlock","src":"5329:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5346:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5369:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5351:17:21"},"nodeType":"YulFunctionCall","src":"5351:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5339:6:21"},"nodeType":"YulFunctionCall","src":"5339:37:21"},"nodeType":"YulExpressionStatement","src":"5339:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5317:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5324:3:21","type":""}],"src":"5264:118:21"},{"body":{"nodeType":"YulBlock","src":"5486:124:21","statements":[{"nodeType":"YulAssignment","src":"5496:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5508:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5519:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5504:3:21"},"nodeType":"YulFunctionCall","src":"5504:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5496:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5576:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5589:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5600:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5585:3:21"},"nodeType":"YulFunctionCall","src":"5585:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5532:43:21"},"nodeType":"YulFunctionCall","src":"5532:71:21"},"nodeType":"YulExpressionStatement","src":"5532:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5458:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5470:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5481:4:21","type":""}],"src":"5388:222:21"},{"body":{"nodeType":"YulBlock","src":"5660:45:21","statements":[{"nodeType":"YulAssignment","src":"5670:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5685:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5692:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5681:3:21"},"nodeType":"YulFunctionCall","src":"5681:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5670:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5642:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5652:7:21","type":""}],"src":"5616:89:21"},{"body":{"nodeType":"YulBlock","src":"5774:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5791:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5813:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5796:16:21"},"nodeType":"YulFunctionCall","src":"5796:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5784:6:21"},"nodeType":"YulFunctionCall","src":"5784:36:21"},"nodeType":"YulExpressionStatement","src":"5784:36:21"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5762:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5769:3:21","type":""}],"src":"5711:115:21"},{"body":{"nodeType":"YulBlock","src":"5928:122:21","statements":[{"nodeType":"YulAssignment","src":"5938:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5950:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5961:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5946:3:21"},"nodeType":"YulFunctionCall","src":"5946:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5938:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6016:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6029:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6040:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6025:3:21"},"nodeType":"YulFunctionCall","src":"6025:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"5974:41:21"},"nodeType":"YulFunctionCall","src":"5974:69:21"},"nodeType":"YulExpressionStatement","src":"5974:69:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5900:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5912:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5923:4:21","type":""}],"src":"5832:218:21"},{"body":{"nodeType":"YulBlock","src":"6084:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6101:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6104:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6094:6:21"},"nodeType":"YulFunctionCall","src":"6094:88:21"},"nodeType":"YulExpressionStatement","src":"6094:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6198:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6201:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6191:6:21"},"nodeType":"YulFunctionCall","src":"6191:15:21"},"nodeType":"YulExpressionStatement","src":"6191:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6222:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6225:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6215:6:21"},"nodeType":"YulFunctionCall","src":"6215:15:21"},"nodeType":"YulExpressionStatement","src":"6215:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"6056:180:21"},{"body":{"nodeType":"YulBlock","src":"6302:62:21","statements":[{"body":{"nodeType":"YulBlock","src":"6336:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"6338:16:21"},"nodeType":"YulFunctionCall","src":"6338:18:21"},"nodeType":"YulExpressionStatement","src":"6338:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6325:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6332:1:21","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6322:2:21"},"nodeType":"YulFunctionCall","src":"6322:12:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6315:6:21"},"nodeType":"YulFunctionCall","src":"6315:20:21"},"nodeType":"YulIf","src":"6312:46:21"}]},"name":"validator_assert_t_enum$_LotteryState_$4562","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6295:5:21","type":""}],"src":"6242:122:21"},{"body":{"nodeType":"YulBlock","src":"6432:83:21","statements":[{"nodeType":"YulAssignment","src":"6442:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"6453:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6442:7:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6503:5:21"}],"functionName":{"name":"validator_assert_t_enum$_LotteryState_$4562","nodeType":"YulIdentifier","src":"6459:43:21"},"nodeType":"YulFunctionCall","src":"6459:50:21"},"nodeType":"YulExpressionStatement","src":"6459:50:21"}]},"name":"cleanup_t_enum$_LotteryState_$4562","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6414:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6424:7:21","type":""}],"src":"6370:145:21"},{"body":{"nodeType":"YulBlock","src":"6596:70:21","statements":[{"nodeType":"YulAssignment","src":"6606:54:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6654:5:21"}],"functionName":{"name":"cleanup_t_enum$_LotteryState_$4562","nodeType":"YulIdentifier","src":"6619:34:21"},"nodeType":"YulFunctionCall","src":"6619:41:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6606:9:21"}]}]},"name":"convert_t_enum$_LotteryState_$4562_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6576:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6586:9:21","type":""}],"src":"6521:145:21"},{"body":{"nodeType":"YulBlock","src":"6752:81:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6769:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6820:5:21"}],"functionName":{"name":"convert_t_enum$_LotteryState_$4562_to_t_uint8","nodeType":"YulIdentifier","src":"6774:45:21"},"nodeType":"YulFunctionCall","src":"6774:52:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6762:6:21"},"nodeType":"YulFunctionCall","src":"6762:65:21"},"nodeType":"YulExpressionStatement","src":"6762:65:21"}]},"name":"abi_encode_t_enum$_LotteryState_$4562_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6740:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6747:3:21","type":""}],"src":"6672:161:21"},{"body":{"nodeType":"YulBlock","src":"6952:139:21","statements":[{"nodeType":"YulAssignment","src":"6962:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6974:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6985:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6970:3:21"},"nodeType":"YulFunctionCall","src":"6970:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6962:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7057:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7070:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7081:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7066:3:21"},"nodeType":"YulFunctionCall","src":"7066:17:21"}],"functionName":{"name":"abi_encode_t_enum$_LotteryState_$4562_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"6998:58:21"},"nodeType":"YulFunctionCall","src":"6998:86:21"},"nodeType":"YulExpressionStatement","src":"6998:86:21"}]},"name":"abi_encode_tuple_t_enum$_LotteryState_$4562__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6924:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6936:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6947:4:21","type":""}],"src":"6839:252:21"},{"body":{"nodeType":"YulBlock","src":"7186:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7203:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7206:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7196:6:21"},"nodeType":"YulFunctionCall","src":"7196:12:21"},"nodeType":"YulExpressionStatement","src":"7196:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7097:117:21"},{"body":{"nodeType":"YulBlock","src":"7268:54:21","statements":[{"nodeType":"YulAssignment","src":"7278:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7296:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7303:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7292:3:21"},"nodeType":"YulFunctionCall","src":"7292:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7312:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7308:3:21"},"nodeType":"YulFunctionCall","src":"7308:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7288:3:21"},"nodeType":"YulFunctionCall","src":"7288:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7278:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7251:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7261:6:21","type":""}],"src":"7220:102:21"},{"body":{"nodeType":"YulBlock","src":"7356:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7376:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:21"},"nodeType":"YulFunctionCall","src":"7366:88:21"},"nodeType":"YulExpressionStatement","src":"7366:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7473:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7463:6:21"},"nodeType":"YulFunctionCall","src":"7463:15:21"},"nodeType":"YulExpressionStatement","src":"7463:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7494:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7497:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7487:6:21"},"nodeType":"YulFunctionCall","src":"7487:15:21"},"nodeType":"YulExpressionStatement","src":"7487:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7328:180:21"},{"body":{"nodeType":"YulBlock","src":"7557:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7567:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7589:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7619:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7597:21:21"},"nodeType":"YulFunctionCall","src":"7597:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7585:3:21"},"nodeType":"YulFunctionCall","src":"7585:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7571:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7736:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7738:16:21"},"nodeType":"YulFunctionCall","src":"7738:18:21"},"nodeType":"YulExpressionStatement","src":"7738:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7679:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"7691:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7676:2:21"},"nodeType":"YulFunctionCall","src":"7676:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7715:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7727:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7712:2:21"},"nodeType":"YulFunctionCall","src":"7712:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7673:2:21"},"nodeType":"YulFunctionCall","src":"7673:62:21"},"nodeType":"YulIf","src":"7670:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7774:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7778:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7767:6:21"},"nodeType":"YulFunctionCall","src":"7767:22:21"},"nodeType":"YulExpressionStatement","src":"7767:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7543:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"7551:4:21","type":""}],"src":"7514:281:21"},{"body":{"nodeType":"YulBlock","src":"7842:88:21","statements":[{"nodeType":"YulAssignment","src":"7852:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7862:18:21"},"nodeType":"YulFunctionCall","src":"7862:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7852:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7911:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"7919:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7891:19:21"},"nodeType":"YulFunctionCall","src":"7891:33:21"},"nodeType":"YulExpressionStatement","src":"7891:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7826:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7835:6:21","type":""}],"src":"7801:129:21"},{"body":{"nodeType":"YulBlock","src":"8002:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"8107:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8109:16:21"},"nodeType":"YulFunctionCall","src":"8109:18:21"},"nodeType":"YulExpressionStatement","src":"8109:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8079:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8087:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8076:2:21"},"nodeType":"YulFunctionCall","src":"8076:30:21"},"nodeType":"YulIf","src":"8073:56:21"},{"nodeType":"YulAssignment","src":"8139:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8169:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8147:21:21"},"nodeType":"YulFunctionCall","src":"8147:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8139:4:21"}]},{"nodeType":"YulAssignment","src":"8213:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8225:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"8231:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8221:3:21"},"nodeType":"YulFunctionCall","src":"8221:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8213:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7986:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7997:4:21","type":""}],"src":"7936:307:21"},{"body":{"nodeType":"YulBlock","src":"8313:82:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8336:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"8341:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8346:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8323:12:21"},"nodeType":"YulFunctionCall","src":"8323:30:21"},"nodeType":"YulExpressionStatement","src":"8323:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8373:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8378:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8369:3:21"},"nodeType":"YulFunctionCall","src":"8369:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"8387:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8362:6:21"},"nodeType":"YulFunctionCall","src":"8362:27:21"},"nodeType":"YulExpressionStatement","src":"8362:27:21"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8295:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8300:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8305:6:21","type":""}],"src":"8249:146:21"},{"body":{"nodeType":"YulBlock","src":"8484:340:21","statements":[{"nodeType":"YulAssignment","src":"8494:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8560:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8519:40:21"},"nodeType":"YulFunctionCall","src":"8519:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8503:15:21"},"nodeType":"YulFunctionCall","src":"8503:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8494:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8584:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"8591:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8577:6:21"},"nodeType":"YulFunctionCall","src":"8577:21:21"},"nodeType":"YulExpressionStatement","src":"8577:21:21"},{"nodeType":"YulVariableDeclaration","src":"8607:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8622:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8629:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8618:3:21"},"nodeType":"YulFunctionCall","src":"8618:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8611:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8672:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8674:77:21"},"nodeType":"YulFunctionCall","src":"8674:79:21"},"nodeType":"YulExpressionStatement","src":"8674:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8653:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8658:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:21"},"nodeType":"YulFunctionCall","src":"8649:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"8667:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8646:2:21"},"nodeType":"YulFunctionCall","src":"8646:25:21"},"nodeType":"YulIf","src":"8643:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8801:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"8806:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8811:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8764:36:21"},"nodeType":"YulFunctionCall","src":"8764:54:21"},"nodeType":"YulExpressionStatement","src":"8764:54:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8457:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8462:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8470:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8478:5:21","type":""}],"src":"8401:423:21"},{"body":{"nodeType":"YulBlock","src":"8904:277:21","statements":[{"body":{"nodeType":"YulBlock","src":"8953:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8955:77:21"},"nodeType":"YulFunctionCall","src":"8955:79:21"},"nodeType":"YulExpressionStatement","src":"8955:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8932:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8940:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8928:3:21"},"nodeType":"YulFunctionCall","src":"8928:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"8947:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8924:3:21"},"nodeType":"YulFunctionCall","src":"8924:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8917:6:21"},"nodeType":"YulFunctionCall","src":"8917:35:21"},"nodeType":"YulIf","src":"8914:122:21"},{"nodeType":"YulVariableDeclaration","src":"9045:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9072:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9059:12:21"},"nodeType":"YulFunctionCall","src":"9059:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9049:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9088:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9148:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9156:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9144:3:21"},"nodeType":"YulFunctionCall","src":"9144:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"9163:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"9171:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9097:46:21"},"nodeType":"YulFunctionCall","src":"9097:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9088:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8882:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8890:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8898:5:21","type":""}],"src":"8843:338:21"},{"body":{"nodeType":"YulBlock","src":"9262:432:21","statements":[{"body":{"nodeType":"YulBlock","src":"9308:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9310:77:21"},"nodeType":"YulFunctionCall","src":"9310:79:21"},"nodeType":"YulExpressionStatement","src":"9310:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9283:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9292:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9279:3:21"},"nodeType":"YulFunctionCall","src":"9279:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9304:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9275:3:21"},"nodeType":"YulFunctionCall","src":"9275:32:21"},"nodeType":"YulIf","src":"9272:119:21"},{"nodeType":"YulBlock","src":"9401:286:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9416:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9447:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9458:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9443:3:21"},"nodeType":"YulFunctionCall","src":"9443:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9430:12:21"},"nodeType":"YulFunctionCall","src":"9430:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9420:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9508:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9510:77:21"},"nodeType":"YulFunctionCall","src":"9510:79:21"},"nodeType":"YulExpressionStatement","src":"9510:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9480:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9488:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9477:2:21"},"nodeType":"YulFunctionCall","src":"9477:30:21"},"nodeType":"YulIf","src":"9474:117:21"},{"nodeType":"YulAssignment","src":"9605:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9649:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9660:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9645:3:21"},"nodeType":"YulFunctionCall","src":"9645:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9669:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9615:29:21"},"nodeType":"YulFunctionCall","src":"9615:62:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9605:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9232:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9243:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9255:6:21","type":""}],"src":"9187:507:21"},{"body":{"nodeType":"YulBlock","src":"9742:48:21","statements":[{"nodeType":"YulAssignment","src":"9752:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9777:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9770:6:21"},"nodeType":"YulFunctionCall","src":"9770:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9763:6:21"},"nodeType":"YulFunctionCall","src":"9763:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9752:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9724:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9734:7:21","type":""}],"src":"9700:90:21"},{"body":{"nodeType":"YulBlock","src":"9855:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9872:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9892:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9877:14:21"},"nodeType":"YulFunctionCall","src":"9877:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9865:6:21"},"nodeType":"YulFunctionCall","src":"9865:34:21"},"nodeType":"YulExpressionStatement","src":"9865:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9843:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9850:3:21","type":""}],"src":"9796:109:21"},{"body":{"nodeType":"YulBlock","src":"9969:40:21","statements":[{"nodeType":"YulAssignment","src":"9980:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9996:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9990:5:21"},"nodeType":"YulFunctionCall","src":"9990:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9980:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9952:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9962:6:21","type":""}],"src":"9911:98:21"},{"body":{"nodeType":"YulBlock","src":"10110:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10127:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10132:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10120:6:21"},"nodeType":"YulFunctionCall","src":"10120:19:21"},"nodeType":"YulExpressionStatement","src":"10120:19:21"},{"nodeType":"YulAssignment","src":"10148:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10167:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10172:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10163:3:21"},"nodeType":"YulFunctionCall","src":"10163:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10148:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10082:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"10087:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10098:11:21","type":""}],"src":"10015:168:21"},{"body":{"nodeType":"YulBlock","src":"10251:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10261:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10270:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10265:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10330:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10355:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"10360:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10351:3:21"},"nodeType":"YulFunctionCall","src":"10351:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10374:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"10379:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10370:3:21"},"nodeType":"YulFunctionCall","src":"10370:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10364:5:21"},"nodeType":"YulFunctionCall","src":"10364:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10344:6:21"},"nodeType":"YulFunctionCall","src":"10344:39:21"},"nodeType":"YulExpressionStatement","src":"10344:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10291:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"10294:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10288:2:21"},"nodeType":"YulFunctionCall","src":"10288:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10302:19:21","statements":[{"nodeType":"YulAssignment","src":"10304:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10313:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"10316:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10309:3:21"},"nodeType":"YulFunctionCall","src":"10309:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10304:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"10284:3:21","statements":[]},"src":"10280:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10413:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10418:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10409:3:21"},"nodeType":"YulFunctionCall","src":"10409:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"10427:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10402:6:21"},"nodeType":"YulFunctionCall","src":"10402:27:21"},"nodeType":"YulExpressionStatement","src":"10402:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10233:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10238:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"10243:6:21","type":""}],"src":"10189:246:21"},{"body":{"nodeType":"YulBlock","src":"10531:283:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10541:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10587:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10555:31:21"},"nodeType":"YulFunctionCall","src":"10555:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10545:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10602:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10667:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10672:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10609:57:21"},"nodeType":"YulFunctionCall","src":"10609:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10602:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10727:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10734:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10723:3:21"},"nodeType":"YulFunctionCall","src":"10723:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"10741:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10746:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10688:34:21"},"nodeType":"YulFunctionCall","src":"10688:65:21"},"nodeType":"YulExpressionStatement","src":"10688:65:21"},{"nodeType":"YulAssignment","src":"10762:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10773:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10800:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10778:21:21"},"nodeType":"YulFunctionCall","src":"10778:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10769:3:21"},"nodeType":"YulFunctionCall","src":"10769:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10762:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10512:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10519:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10527:3:21","type":""}],"src":"10441:373:21"},{"body":{"nodeType":"YulBlock","src":"10958:269:21","statements":[{"nodeType":"YulAssignment","src":"10968:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10980:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10991:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:21"},"nodeType":"YulFunctionCall","src":"10976:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10968:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11042:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11055:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11066:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11051:3:21"},"nodeType":"YulFunctionCall","src":"11051:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11004:37:21"},"nodeType":"YulFunctionCall","src":"11004:65:21"},"nodeType":"YulExpressionStatement","src":"11004:65:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11090:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11101:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11086:3:21"},"nodeType":"YulFunctionCall","src":"11086:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11110:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11116:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11106:3:21"},"nodeType":"YulFunctionCall","src":"11106:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11079:6:21"},"nodeType":"YulFunctionCall","src":"11079:48:21"},"nodeType":"YulExpressionStatement","src":"11079:48:21"},{"nodeType":"YulAssignment","src":"11136:84:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11206:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"11215:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11144:61:21"},"nodeType":"YulFunctionCall","src":"11144:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11136:4:21"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10922:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10934:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10942:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10953:4:21","type":""}],"src":"10820:407:21"},{"body":{"nodeType":"YulBlock","src":"11276:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"11333:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11342:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11345:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11335:6:21"},"nodeType":"YulFunctionCall","src":"11335:12:21"},"nodeType":"YulExpressionStatement","src":"11335:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11299:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11324:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11306:17:21"},"nodeType":"YulFunctionCall","src":"11306:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11296:2:21"},"nodeType":"YulFunctionCall","src":"11296:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11289:6:21"},"nodeType":"YulFunctionCall","src":"11289:43:21"},"nodeType":"YulIf","src":"11286:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11269:5:21","type":""}],"src":"11233:122:21"},{"body":{"nodeType":"YulBlock","src":"11413:87:21","statements":[{"nodeType":"YulAssignment","src":"11423:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11445:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11432:12:21"},"nodeType":"YulFunctionCall","src":"11432:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11423:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11488:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"11461:26:21"},"nodeType":"YulFunctionCall","src":"11461:33:21"},"nodeType":"YulExpressionStatement","src":"11461:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11391:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"11399:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11407:5:21","type":""}],"src":"11361:139:21"},{"body":{"nodeType":"YulBlock","src":"11572:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"11618:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11620:77:21"},"nodeType":"YulFunctionCall","src":"11620:79:21"},"nodeType":"YulExpressionStatement","src":"11620:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11593:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11602:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11589:3:21"},"nodeType":"YulFunctionCall","src":"11589:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11614:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11585:3:21"},"nodeType":"YulFunctionCall","src":"11585:32:21"},"nodeType":"YulIf","src":"11582:119:21"},{"nodeType":"YulBlock","src":"11711:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11726:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11740:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11730:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11755:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11790:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11801:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11786:3:21"},"nodeType":"YulFunctionCall","src":"11786:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11810:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11765:20:21"},"nodeType":"YulFunctionCall","src":"11765:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11755:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11542:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11553:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11565:6:21","type":""}],"src":"11506:329:21"},{"body":{"nodeType":"YulBlock","src":"11873:28:21","statements":[{"nodeType":"YulAssignment","src":"11883:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11890:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11883:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11859:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11869:3:21","type":""}],"src":"11841:60:21"},{"body":{"nodeType":"YulBlock","src":"11967:82:21","statements":[{"nodeType":"YulAssignment","src":"11977:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12035:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12017:17:21"},"nodeType":"YulFunctionCall","src":"12017:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12008:8:21"},"nodeType":"YulFunctionCall","src":"12008:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11990:17:21"},"nodeType":"YulFunctionCall","src":"11990:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11977:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11947:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11957:9:21","type":""}],"src":"11907:142:21"},{"body":{"nodeType":"YulBlock","src":"12115:66:21","statements":[{"nodeType":"YulAssignment","src":"12125:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12169:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"12138:30:21"},"nodeType":"YulFunctionCall","src":"12138:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12125:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12095:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12105:9:21","type":""}],"src":"12055:126:21"},{"body":{"nodeType":"YulBlock","src":"12277:66:21","statements":[{"nodeType":"YulAssignment","src":"12287:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12331:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12300:30:21"},"nodeType":"YulFunctionCall","src":"12300:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12287:9:21"}]}]},"name":"convert_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12257:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12267:9:21","type":""}],"src":"12187:156:21"},{"body":{"nodeType":"YulBlock","src":"12444:96:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12461:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12527:5:21"}],"functionName":{"name":"convert_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address","nodeType":"YulIdentifier","src":"12466:60:21"},"nodeType":"YulFunctionCall","src":"12466:67:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12454:6:21"},"nodeType":"YulFunctionCall","src":"12454:80:21"},"nodeType":"YulExpressionStatement","src":"12454:80:21"}]},"name":"abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12432:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12439:3:21","type":""}],"src":"12349:191:21"},{"body":{"nodeType":"YulBlock","src":"12674:154:21","statements":[{"nodeType":"YulAssignment","src":"12684:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12696:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12707:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12692:3:21"},"nodeType":"YulFunctionCall","src":"12692:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12794:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12807:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12818:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12803:3:21"},"nodeType":"YulFunctionCall","src":"12803:17:21"}],"functionName":{"name":"abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12720:73:21"},"nodeType":"YulFunctionCall","src":"12720:101:21"},"nodeType":"YulExpressionStatement","src":"12720:101:21"}]},"name":"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2538__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12646:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12658:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12669:4:21","type":""}],"src":"12546:282:21"},{"body":{"nodeType":"YulBlock","src":"12960:206:21","statements":[{"nodeType":"YulAssignment","src":"12970:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12982:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12993:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12978:3:21"},"nodeType":"YulFunctionCall","src":"12978:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12970:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13050:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13063:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13074:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13059:3:21"},"nodeType":"YulFunctionCall","src":"13059:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13006:43:21"},"nodeType":"YulFunctionCall","src":"13006:71:21"},"nodeType":"YulExpressionStatement","src":"13006:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13131:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13144:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13155:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13140:3:21"},"nodeType":"YulFunctionCall","src":"13140:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13087:43:21"},"nodeType":"YulFunctionCall","src":"13087:72:21"},"nodeType":"YulExpressionStatement","src":"13087:72:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12924:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12936:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12944:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12955:4:21","type":""}],"src":"12834:332:21"},{"body":{"nodeType":"YulBlock","src":"13227:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13244:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13267:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"13249:17:21"},"nodeType":"YulFunctionCall","src":"13249:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13237:6:21"},"nodeType":"YulFunctionCall","src":"13237:37:21"},"nodeType":"YulExpressionStatement","src":"13237:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13215:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13222:3:21","type":""}],"src":"13172:108:21"},{"body":{"nodeType":"YulBlock","src":"13341:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13358:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13381:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13363:17:21"},"nodeType":"YulFunctionCall","src":"13363:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13351:6:21"},"nodeType":"YulFunctionCall","src":"13351:37:21"},"nodeType":"YulExpressionStatement","src":"13351:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13329:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13336:3:21","type":""}],"src":"13286:108:21"},{"body":{"nodeType":"YulBlock","src":"13453:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13470:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13492:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"13475:16:21"},"nodeType":"YulFunctionCall","src":"13475:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13463:6:21"},"nodeType":"YulFunctionCall","src":"13463:36:21"},"nodeType":"YulExpressionStatement","src":"13463:36:21"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13441:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13448:3:21","type":""}],"src":"13400:105:21"},{"body":{"nodeType":"YulBlock","src":"13564:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13581:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13603:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13586:16:21"},"nodeType":"YulFunctionCall","src":"13586:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13574:6:21"},"nodeType":"YulFunctionCall","src":"13574:36:21"},"nodeType":"YulExpressionStatement","src":"13574:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13552:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13559:3:21","type":""}],"src":"13511:105:21"},{"body":{"nodeType":"YulBlock","src":"13707:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13724:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13729:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13717:6:21"},"nodeType":"YulFunctionCall","src":"13717:19:21"},"nodeType":"YulExpressionStatement","src":"13717:19:21"},{"nodeType":"YulAssignment","src":"13745:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13764:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13769:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13760:3:21"},"nodeType":"YulFunctionCall","src":"13760:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13745:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13679:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"13684:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13695:11:21","type":""}],"src":"13622:158:21"},{"body":{"nodeType":"YulBlock","src":"13866:273:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13876:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13922:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13890:31:21"},"nodeType":"YulFunctionCall","src":"13890:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13880:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13937:67:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13992:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13997:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13944:47:21"},"nodeType":"YulFunctionCall","src":"13944:60:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13937:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14052:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14059:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14048:3:21"},"nodeType":"YulFunctionCall","src":"14048:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"14066:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14071:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14013:34:21"},"nodeType":"YulFunctionCall","src":"14013:65:21"},"nodeType":"YulExpressionStatement","src":"14013:65:21"},{"nodeType":"YulAssignment","src":"14087:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14098:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14125:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14103:21:21"},"nodeType":"YulFunctionCall","src":"14103:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14094:3:21"},"nodeType":"YulFunctionCall","src":"14094:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14087:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13847:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13854:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13862:3:21","type":""}],"src":"13786:353:21"},{"body":{"nodeType":"YulBlock","src":"14385:1211:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14395:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14411:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14416:4:21","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14407:3:21"},"nodeType":"YulFunctionCall","src":"14407:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14399:4:21","type":""}]},{"nodeType":"YulBlock","src":"14431:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14469:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14499:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14506:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:21"},"nodeType":"YulFunctionCall","src":"14495:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14489:5:21"},"nodeType":"YulFunctionCall","src":"14489:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14473:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14559:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14577:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14582:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14573:3:21"},"nodeType":"YulFunctionCall","src":"14573:14:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"14525:33:21"},"nodeType":"YulFunctionCall","src":"14525:63:21"},"nodeType":"YulExpressionStatement","src":"14525:63:21"}]},{"nodeType":"YulBlock","src":"14608:165:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14644:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14674:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14681:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14670:3:21"},"nodeType":"YulFunctionCall","src":"14670:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14664:5:21"},"nodeType":"YulFunctionCall","src":"14664:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14648:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14734:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14752:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14757:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14748:3:21"},"nodeType":"YulFunctionCall","src":"14748:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14700:33:21"},"nodeType":"YulFunctionCall","src":"14700:63:21"},"nodeType":"YulExpressionStatement","src":"14700:63:21"}]},{"nodeType":"YulBlock","src":"14783:178:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14834:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14864:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14871:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14860:3:21"},"nodeType":"YulFunctionCall","src":"14860:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14854:5:21"},"nodeType":"YulFunctionCall","src":"14854:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14838:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14922:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14940:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14945:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14936:3:21"},"nodeType":"YulFunctionCall","src":"14936:14:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"14890:31:21"},"nodeType":"YulFunctionCall","src":"14890:61:21"},"nodeType":"YulExpressionStatement","src":"14890:61:21"}]},{"nodeType":"YulBlock","src":"14971:174:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15018:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15048:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15055:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:21"},"nodeType":"YulFunctionCall","src":"15044:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15038:5:21"},"nodeType":"YulFunctionCall","src":"15038:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15022:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15106:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15124:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15129:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15120:3:21"},"nodeType":"YulFunctionCall","src":"15120:14:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"15074:31:21"},"nodeType":"YulFunctionCall","src":"15074:61:21"},"nodeType":"YulExpressionStatement","src":"15074:61:21"}]},{"nodeType":"YulBlock","src":"15155:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15194:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15224:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15231:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15220:3:21"},"nodeType":"YulFunctionCall","src":"15220:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15214:5:21"},"nodeType":"YulFunctionCall","src":"15214:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15198:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15282:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15300:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15305:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15296:3:21"},"nodeType":"YulFunctionCall","src":"15296:14:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"15250:31:21"},"nodeType":"YulFunctionCall","src":"15250:61:21"},"nodeType":"YulExpressionStatement","src":"15250:61:21"}]},{"nodeType":"YulBlock","src":"15331:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15371:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15401:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15408:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15397:3:21"},"nodeType":"YulFunctionCall","src":"15397:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15391:5:21"},"nodeType":"YulFunctionCall","src":"15391:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15375:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15439:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15444:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15435:3:21"},"nodeType":"YulFunctionCall","src":"15435:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15455:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"15461:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15451:3:21"},"nodeType":"YulFunctionCall","src":"15451:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15428:6:21"},"nodeType":"YulFunctionCall","src":"15428:38:21"},"nodeType":"YulExpressionStatement","src":"15428:38:21"},{"nodeType":"YulAssignment","src":"15479:79:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15539:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"15553:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15487:51:21"},"nodeType":"YulFunctionCall","src":"15487:71:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15479:4:21"}]}]},{"nodeType":"YulAssignment","src":"15579:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"15586:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15579:3:21"}]}]},"name":"abi_encode_t_struct$_RandomWordsRequest_$2667_memory_ptr_to_t_struct$_RandomWordsRequest_$2667_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14364:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14371:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14380:3:21","type":""}],"src":"14239:1357:21"},{"body":{"nodeType":"YulBlock","src":"15772:247:21","statements":[{"nodeType":"YulAssignment","src":"15782:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15794:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15805:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15790:3:21"},"nodeType":"YulFunctionCall","src":"15790:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15782:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15829:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15840:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15825:3:21"},"nodeType":"YulFunctionCall","src":"15825:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15848:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15854:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15844:3:21"},"nodeType":"YulFunctionCall","src":"15844:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15818:6:21"},"nodeType":"YulFunctionCall","src":"15818:47:21"},"nodeType":"YulExpressionStatement","src":"15818:47:21"},{"nodeType":"YulAssignment","src":"15874:138:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15998:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"16007:4:21"}],"functionName":{"name":"abi_encode_t_struct$_RandomWordsRequest_$2667_memory_ptr_to_t_struct$_RandomWordsRequest_$2667_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15882:115:21"},"nodeType":"YulFunctionCall","src":"15882:130:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15874:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_RandomWordsRequest_$2667_memory_ptr__to_t_struct$_RandomWordsRequest_$2667_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15744:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15756:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15767:4:21","type":""}],"src":"15602:417:21"},{"body":{"nodeType":"YulBlock","src":"16088:80:21","statements":[{"nodeType":"YulAssignment","src":"16098:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16113:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16107:5:21"},"nodeType":"YulFunctionCall","src":"16107:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16098:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16156:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"16129:26:21"},"nodeType":"YulFunctionCall","src":"16129:33:21"},"nodeType":"YulExpressionStatement","src":"16129:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16066:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"16074:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16082:5:21","type":""}],"src":"16025:143:21"},{"body":{"nodeType":"YulBlock","src":"16251:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"16297:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16299:77:21"},"nodeType":"YulFunctionCall","src":"16299:79:21"},"nodeType":"YulExpressionStatement","src":"16299:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16272:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16281:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16268:3:21"},"nodeType":"YulFunctionCall","src":"16268:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"16293:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16264:3:21"},"nodeType":"YulFunctionCall","src":"16264:32:21"},"nodeType":"YulIf","src":"16261:119:21"},{"nodeType":"YulBlock","src":"16390:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16405:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16419:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16409:6:21","type":""}]},{"nodeType":"YulAssignment","src":"16434:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16480:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"16491:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16476:3:21"},"nodeType":"YulFunctionCall","src":"16476:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16500:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16444:31:21"},"nodeType":"YulFunctionCall","src":"16444:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16434:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16221:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16232:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16244:6:21","type":""}],"src":"16174:351:21"},{"body":{"nodeType":"YulBlock","src":"16559:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16576:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16579:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16569:6:21"},"nodeType":"YulFunctionCall","src":"16569:88:21"},"nodeType":"YulExpressionStatement","src":"16569:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16673:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16676:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16666:6:21"},"nodeType":"YulFunctionCall","src":"16666:15:21"},"nodeType":"YulExpressionStatement","src":"16666:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16697:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16700:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16690:6:21"},"nodeType":"YulFunctionCall","src":"16690:15:21"},"nodeType":"YulExpressionStatement","src":"16690:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16531:180:21"},{"body":{"nodeType":"YulBlock","src":"16745:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16762:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16765:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16755:6:21"},"nodeType":"YulFunctionCall","src":"16755:88:21"},"nodeType":"YulExpressionStatement","src":"16755:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16859:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16862:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16852:6:21"},"nodeType":"YulFunctionCall","src":"16852:15:21"},"nodeType":"YulExpressionStatement","src":"16852:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16883:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16886:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16876:6:21"},"nodeType":"YulFunctionCall","src":"16876:15:21"},"nodeType":"YulExpressionStatement","src":"16876:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16717:180:21"},{"body":{"nodeType":"YulBlock","src":"16948:149:21","statements":[{"nodeType":"YulAssignment","src":"16958:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16981:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16963:17:21"},"nodeType":"YulFunctionCall","src":"16963:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16958:1:21"}]},{"nodeType":"YulAssignment","src":"16992:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17015:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16997:17:21"},"nodeType":"YulFunctionCall","src":"16997:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16992:1:21"}]},{"nodeType":"YulAssignment","src":"17026:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17038:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"17041:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17034:3:21"},"nodeType":"YulFunctionCall","src":"17034:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17026:4:21"}]},{"body":{"nodeType":"YulBlock","src":"17068:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17070:16:21"},"nodeType":"YulFunctionCall","src":"17070:18:21"},"nodeType":"YulExpressionStatement","src":"17070:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"17059:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"17065:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17056:2:21"},"nodeType":"YulFunctionCall","src":"17056:11:21"},"nodeType":"YulIf","src":"17053:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16934:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"16937:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16943:4:21","type":""}],"src":"16903:194:21"},{"body":{"nodeType":"YulBlock","src":"17199:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17216:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17221:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17209:6:21"},"nodeType":"YulFunctionCall","src":"17209:19:21"},"nodeType":"YulExpressionStatement","src":"17209:19:21"},{"nodeType":"YulAssignment","src":"17237:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17256:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17261:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17252:3:21"},"nodeType":"YulFunctionCall","src":"17252:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17237:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17171:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17176:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17187:11:21","type":""}],"src":"17103:169:21"},{"body":{"nodeType":"YulBlock","src":"17384:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17406:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17414:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17402:3:21"},"nodeType":"YulFunctionCall","src":"17402:14:21"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17418:24:21","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17395:6:21"},"nodeType":"YulFunctionCall","src":"17395:48:21"},"nodeType":"YulExpressionStatement","src":"17395:48:21"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17376:6:21","type":""}],"src":"17278:172:21"},{"body":{"nodeType":"YulBlock","src":"17602:220:21","statements":[{"nodeType":"YulAssignment","src":"17612:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17678:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17683:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17619:58:21"},"nodeType":"YulFunctionCall","src":"17619:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17612:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17784:3:21"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"17695:88:21"},"nodeType":"YulFunctionCall","src":"17695:93:21"},"nodeType":"YulExpressionStatement","src":"17695:93:21"},{"nodeType":"YulAssignment","src":"17797:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17808:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17804:3:21"},"nodeType":"YulFunctionCall","src":"17804:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17797:3:21"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17590:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17598:3:21","type":""}],"src":"17456:366:21"},{"body":{"nodeType":"YulBlock","src":"17999:248:21","statements":[{"nodeType":"YulAssignment","src":"18009:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18021:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18032:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18017:3:21"},"nodeType":"YulFunctionCall","src":"18017:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18009:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18056:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18067:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18052:3:21"},"nodeType":"YulFunctionCall","src":"18052:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18075:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18081:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18071:3:21"},"nodeType":"YulFunctionCall","src":"18071:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18045:6:21"},"nodeType":"YulFunctionCall","src":"18045:47:21"},"nodeType":"YulExpressionStatement","src":"18045:47:21"},{"nodeType":"YulAssignment","src":"18101:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18235:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18109:124:21"},"nodeType":"YulFunctionCall","src":"18109:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18101:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17979:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17994:4:21","type":""}],"src":"17828:419:21"},{"body":{"nodeType":"YulBlock","src":"18407:288:21","statements":[{"nodeType":"YulAssignment","src":"18417:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18429:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18440:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18425:3:21"},"nodeType":"YulFunctionCall","src":"18425:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18417:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18497:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18510:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18521:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18506:3:21"},"nodeType":"YulFunctionCall","src":"18506:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18453:43:21"},"nodeType":"YulFunctionCall","src":"18453:71:21"},"nodeType":"YulExpressionStatement","src":"18453:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18578:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18591:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18602:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18587:3:21"},"nodeType":"YulFunctionCall","src":"18587:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18534:43:21"},"nodeType":"YulFunctionCall","src":"18534:72:21"},"nodeType":"YulExpressionStatement","src":"18534:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18660:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18684:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18669:3:21"},"nodeType":"YulFunctionCall","src":"18669:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18616:43:21"},"nodeType":"YulFunctionCall","src":"18616:72:21"},"nodeType":"YulExpressionStatement","src":"18616:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18363:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18375:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18383:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18391:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18402:4:21","type":""}],"src":"18253:442:21"},{"body":{"nodeType":"YulBlock","src":"18729:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18746:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18749:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18739:6:21"},"nodeType":"YulFunctionCall","src":"18739:88:21"},"nodeType":"YulExpressionStatement","src":"18739:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18843:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18846:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18836:6:21"},"nodeType":"YulFunctionCall","src":"18836:15:21"},"nodeType":"YulExpressionStatement","src":"18836:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18867:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18870:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18860:6:21"},"nodeType":"YulFunctionCall","src":"18860:15:21"},"nodeType":"YulExpressionStatement","src":"18860:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"18701:180:21"},{"body":{"nodeType":"YulBlock","src":"18921:142:21","statements":[{"nodeType":"YulAssignment","src":"18931:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18954:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18936:17:21"},"nodeType":"YulFunctionCall","src":"18936:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18931:1:21"}]},{"nodeType":"YulAssignment","src":"18965:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18988:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18970:17:21"},"nodeType":"YulFunctionCall","src":"18970:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18965:1:21"}]},{"body":{"nodeType":"YulBlock","src":"19012:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"19014:16:21"},"nodeType":"YulFunctionCall","src":"19014:18:21"},"nodeType":"YulExpressionStatement","src":"19014:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19009:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19002:6:21"},"nodeType":"YulFunctionCall","src":"19002:9:21"},"nodeType":"YulIf","src":"18999:35:21"},{"nodeType":"YulAssignment","src":"19043:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19052:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"19055:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"19048:3:21"},"nodeType":"YulFunctionCall","src":"19048:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"19043:1:21"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18910:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"18913:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18919:1:21","type":""}],"src":"18887:176:21"},{"body":{"nodeType":"YulBlock","src":"19182:34:21","statements":[{"nodeType":"YulAssignment","src":"19192:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"19207:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19192:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19154:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"19159:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19170:11:21","type":""}],"src":"19069:147:21"},{"body":{"nodeType":"YulBlock","src":"19328:8:21","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19320:6:21","type":""}],"src":"19222:114:21"},{"body":{"nodeType":"YulBlock","src":"19505:235:21","statements":[{"nodeType":"YulAssignment","src":"19515:90:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19598:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19603:1:21","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19522:75:21"},"nodeType":"YulFunctionCall","src":"19522:83:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19515:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19703:3:21"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"19614:88:21"},"nodeType":"YulFunctionCall","src":"19614:93:21"},"nodeType":"YulExpressionStatement","src":"19614:93:21"},{"nodeType":"YulAssignment","src":"19716:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19727:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19732:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:21"},"nodeType":"YulFunctionCall","src":"19723:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19716:3:21"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19493:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19501:3:21","type":""}],"src":"19342:398:21"},{"body":{"nodeType":"YulBlock","src":"19934:191:21","statements":[{"nodeType":"YulAssignment","src":"19945:154:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20095:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19952:141:21"},"nodeType":"YulFunctionCall","src":"19952:147:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19945:3:21"}]},{"nodeType":"YulAssignment","src":"20109:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"20116:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20109:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19921:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19930:3:21","type":""}],"src":"19746:379:21"},{"body":{"nodeType":"YulBlock","src":"20180:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20197:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20217:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20202:14:21"},"nodeType":"YulFunctionCall","src":"20202:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20190:6:21"},"nodeType":"YulFunctionCall","src":"20190:34:21"},"nodeType":"YulExpressionStatement","src":"20190:34:21"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20168:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20175:3:21","type":""}],"src":"20131:99:21"},{"body":{"nodeType":"YulBlock","src":"20440:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20450:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20466:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20471:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20462:3:21"},"nodeType":"YulFunctionCall","src":"20462:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20454:4:21","type":""}]},{"nodeType":"YulBlock","src":"20486:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20530:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20560:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20567:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20556:3:21"},"nodeType":"YulFunctionCall","src":"20556:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20550:5:21"},"nodeType":"YulFunctionCall","src":"20550:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20534:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20614:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20632:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20637:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20628:3:21"},"nodeType":"YulFunctionCall","src":"20628:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"20586:27:21"},"nodeType":"YulFunctionCall","src":"20586:57:21"},"nodeType":"YulExpressionStatement","src":"20586:57:21"}]}]},"name":"abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20427:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20434:3:21","type":""}],"src":"20316:344:21"},{"body":{"nodeType":"YulBlock","src":"20822:182:21","statements":[{"nodeType":"YulAssignment","src":"20832:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20844:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20855:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20840:3:21"},"nodeType":"YulFunctionCall","src":"20840:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20832:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20970:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20983:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20994:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20979:3:21"},"nodeType":"YulFunctionCall","src":"20979:17:21"}],"functionName":{"name":"abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20868:101:21"},"nodeType":"YulFunctionCall","src":"20868:129:21"},"nodeType":"YulExpressionStatement","src":"20868:129:21"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr__to_t_struct$_ExtraArgsV1_$2654_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20794:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20806:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20817:4:21","type":""}],"src":"20666:338:21"},{"body":{"nodeType":"YulBlock","src":"21116:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21138:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21146:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21134:3:21"},"nodeType":"YulFunctionCall","src":"21134:14:21"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21150:24:21","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21127:6:21"},"nodeType":"YulFunctionCall","src":"21127:48:21"},"nodeType":"YulExpressionStatement","src":"21127:48:21"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21108:6:21","type":""}],"src":"21010:172:21"},{"body":{"nodeType":"YulBlock","src":"21334:220:21","statements":[{"nodeType":"YulAssignment","src":"21344:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21410:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21415:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21351:58:21"},"nodeType":"YulFunctionCall","src":"21351:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21344:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21516:3:21"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"21427:88:21"},"nodeType":"YulFunctionCall","src":"21427:93:21"},"nodeType":"YulExpressionStatement","src":"21427:93:21"},{"nodeType":"YulAssignment","src":"21529:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21540:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21545:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21536:3:21"},"nodeType":"YulFunctionCall","src":"21536:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21529:3:21"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21322:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21330:3:21","type":""}],"src":"21188:366:21"},{"body":{"nodeType":"YulBlock","src":"21731:248:21","statements":[{"nodeType":"YulAssignment","src":"21741:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21764:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21749:3:21"},"nodeType":"YulFunctionCall","src":"21749:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21741:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21788:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21799:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21784:3:21"},"nodeType":"YulFunctionCall","src":"21784:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21807:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21813:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21803:3:21"},"nodeType":"YulFunctionCall","src":"21803:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21777:6:21"},"nodeType":"YulFunctionCall","src":"21777:47:21"},"nodeType":"YulExpressionStatement","src":"21777:47:21"},{"nodeType":"YulAssignment","src":"21833:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21967:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21841:124:21"},"nodeType":"YulFunctionCall","src":"21841:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21833:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21711:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21726:4:21","type":""}],"src":"21560:419:21"},{"body":{"nodeType":"YulBlock","src":"22091:67:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22113:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22121:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22109:3:21"},"nodeType":"YulFunctionCall","src":"22109:14:21"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"22125:25:21","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22102:6:21"},"nodeType":"YulFunctionCall","src":"22102:49:21"},"nodeType":"YulExpressionStatement","src":"22102:49:21"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22083:6:21","type":""}],"src":"21985:173:21"},{"body":{"nodeType":"YulBlock","src":"22310:220:21","statements":[{"nodeType":"YulAssignment","src":"22320:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22386:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22391:2:21","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22327:58:21"},"nodeType":"YulFunctionCall","src":"22327:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22320:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22492:3:21"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"22403:88:21"},"nodeType":"YulFunctionCall","src":"22403:93:21"},"nodeType":"YulExpressionStatement","src":"22403:93:21"},{"nodeType":"YulAssignment","src":"22505:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22516:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22521:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22512:3:21"},"nodeType":"YulFunctionCall","src":"22512:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22505:3:21"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22298:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22306:3:21","type":""}],"src":"22164:366:21"},{"body":{"nodeType":"YulBlock","src":"22707:248:21","statements":[{"nodeType":"YulAssignment","src":"22717:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22729:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22740:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22725:3:21"},"nodeType":"YulFunctionCall","src":"22725:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22717:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22764:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22775:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22760:3:21"},"nodeType":"YulFunctionCall","src":"22760:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22783:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22789:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22779:3:21"},"nodeType":"YulFunctionCall","src":"22779:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22753:6:21"},"nodeType":"YulFunctionCall","src":"22753:47:21"},"nodeType":"YulExpressionStatement","src":"22753:47:21"},{"nodeType":"YulAssignment","src":"22809:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22943:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22817:124:21"},"nodeType":"YulFunctionCall","src":"22817:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22809:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22687:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22702:4:21","type":""}],"src":"22536:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_LotteryState_$4562(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_LotteryState_$4562(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_LotteryState_$4562(value)\n    }\n\n    function convert_t_enum$_LotteryState_$4562_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_LotteryState_$4562(value)\n    }\n\n    function abi_encode_t_enum$_LotteryState_$4562_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_LotteryState_$4562_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_LotteryState_$4562__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_LotteryState_$4562_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2538__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2538_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct VRFV2PlusClient.RandomWordsRequest -> struct VRFV2PlusClient.RandomWordsRequest\n    function abi_encode_t_struct$_RandomWordsRequest_$2667_memory_ptr_to_t_struct$_RandomWordsRequest_$2667_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // keyHash\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // subId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // requestConfirmations\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // callbackGasLimit\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // numWords\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // extraArgs\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_RandomWordsRequest_$2667_memory_ptr__to_t_struct$_RandomWordsRequest_$2667_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_RandomWordsRequest_$2667_memory_ptr_to_t_struct$_RandomWordsRequest_$2667_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct VRFV2PlusClient.ExtraArgsV1 -> struct VRFV2PlusClient.ExtraArgsV1\n    function abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // nativePayment\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2654_memory_ptr__to_t_struct$_ExtraArgsV1_$2654_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_ExtraArgsV1_$2654_memory_ptr_to_t_struct$_ExtraArgsV1_$2654_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4564":[{"length":32,"start":1393},{"length":32,"start":3044}],"4569":[{"length":32,"start":1762},{"length":32,"start":1918}],"4571":[{"length":32,"start":1956},{"length":32,"start":3724}],"4573":[{"length":32,"start":2005},{"length":32,"start":3646}],"4583":[{"length":32,"start":2470},{"length":32,"start":3606}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x9862EED0 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xB4F8D9F2 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF43B52CB EQ PUSH2 0x47E JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x87BB7AE0 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x380 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x473F1DDC GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x55C9E926 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6B68C03C EQ PUSH2 0x2AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x30F4C43D EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x40CC232B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x460E2049 EQ PUSH2 0x1C1 JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP3 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0xA4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH2 0xEB0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55F JUMPI CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56A DUP4 DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x944A25F800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5DD JUMPI PUSH2 0x5DC PUSH2 0x1707 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5FE PUSH2 0x1707 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D6D79F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D64FB5BA9F2548C5B98468D58F25B87B9E866AFEE0122E92D9FE722BF85076C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x1707 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9B1C385E PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x826 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH2 0x1101 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xEBF56642252004C18A776F30D528E7A0CE8C5DB14B6596FB6550F630C8A24C6C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D2 JUMPI PUSH2 0x8D1 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0x1707 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0x1707 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x9F3 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x9FC JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xA05 JUMPI POP DUP1 JUMPDEST SWAP6 POP DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC39 PUSH2 0xC08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCC2 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xD31 JUMPI CALLER PUSH2 0xCD0 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x61DB9C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEB8 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xEC1 DUP2 PUSH2 0x1229 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xEFB SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0x1C5C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFA7 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1013 JUMPI PUSH2 0x1012 PUSH2 0x1707 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1033 JUMPI PUSH2 0x1032 PUSH2 0x17AF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1061 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1077 SWAP3 SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5271696C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP1 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1297 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128E SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x13CE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x13CD JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1375 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x13DB SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x13E0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1423 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP2 EQ PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1440 DUP2 PUSH2 0x141A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x144B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x1450 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH2 0x14FF DUP7 DUP3 DUP8 ADD PUSH2 0x1455 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x150B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1539 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1555 JUMPI PUSH2 0x1554 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x144B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x1450 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AB PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH2 0x15D6 DUP6 DUP3 DUP7 ADD PUSH2 0x153F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1606 DUP5 DUP3 DUP6 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163A DUP3 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164A DUP2 PUSH2 0x162F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1665 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1684 DUP2 PUSH2 0x166B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AE DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1701 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1747 JUMPI PUSH2 0x1746 PUSH2 0x1707 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1758 DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1768 DUP3 PUSH2 0x174A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1778 DUP2 PUSH2 0x175D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1793 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x176F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17E7 DUP3 PUSH2 0x179E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1806 JUMPI PUSH2 0x1805 PUSH2 0x17AF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP PUSH2 0x1825 DUP3 DUP3 PUSH2 0x17DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x17AF JUMP JUMPDEST JUMPDEST PUSH2 0x184E DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187D PUSH2 0x1878 DUP5 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST PUSH2 0x18A4 DUP5 DUP3 DUP6 PUSH2 0x185B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x186A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F0 JUMPI PUSH2 0x18EF PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x190E JUMPI PUSH2 0x190D PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH2 0x191A DUP5 DUP3 DUP6 ADD PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x1923 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1978 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198F DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1999 DUP2 DUP6 PUSH2 0x1949 JUMP JUMPDEST SWAP4 POP PUSH2 0x19A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195A JUMP JUMPDEST PUSH2 0x19B2 DUP2 PUSH2 0x179E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x192F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19E4 DUP2 DUP5 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A13 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2F JUMPI PUSH2 0x1A2E PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3D DUP5 DUP3 DUP6 ADD PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6B PUSH2 0x1A66 PUSH2 0x1A61 DUP5 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x160F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7D DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8F DUP3 PUSH2 0x1A72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1AE2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1AF2 DUP2 PUSH2 0x150B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B01 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x166B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B41 DUP3 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1B4B DUP2 DUP6 PUSH2 0x1B25 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B5B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x179E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1B87 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1AE9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1B9A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1BAD PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1BC0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1B16 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1BD3 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1B16 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1BEB DUP3 DUP3 PUSH2 0x1B36 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C12 DUP2 DUP5 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C29 DUP2 PUSH2 0x141A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C53 DUP5 DUP3 DUP6 ADD PUSH2 0x1C1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CC5 DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD0 DUP4 PUSH2 0x1410 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x1C8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x16 DUP4 PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1D8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1D9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DDC DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE7 DUP4 PUSH2 0x1410 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1DA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D PUSH1 0x0 DUP4 PUSH2 0x1E02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E28 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3E DUP3 PUSH2 0x1E10 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x1923 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1E6D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1E48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH1 0x16 DUP4 PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP3 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF3 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 PUSH1 0x17 DUP4 PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3B DUP3 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5F DUP2 PUSH2 0x1F23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x2C EXTCODESIZE MUL LT 0xC3 0xAF BALANCE STOP 0xE 0x5C LOG3 LOG3 0xFC XOR INVALID DUP2 RETURNDATACOPY 0xF SWAP1 COINBASE CREATE CALLER 0xD3 0x22 0xD3 PUSH5 0x9910FA8DC9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"915:5361:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7489:280:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3907:333:18;;;:::i;:::-;;5778:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2956:945;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5151:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5262:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6078:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5468:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6167:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5363:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2401:549;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1026:316:2;;;;;;;;;;;;;:::i;:::-;;5052:93:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1382:81:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7831:276:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5683:85:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5970:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6077:45:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5867:97:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5571:106:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7489:280:10;7612:16;;;;;;;;;;;7590:39;;:10;:39;;;7586:131;;7672:10;7692:16;;;;;;;;;;;7646:64;;;;;;;;;;;;:::i;:::-;;;;;;;;7586:131;7722:42;7741:9;7752:11;;7722:18;:42::i;:::-;7489:280;;;:::o;3907:333:18:-;3972:13;3960:9;:25;3956:95;;;4008:32;;;;;;;;;;;;;;3956:95;4082:17;4064:35;;;;;;;;:::i;:::-;;:14;;;;;;;;;;;:35;;;;;;;;:::i;:::-;;;4060:90;;4122:17;;;;;;;;;;;;;;4060:90;4159:9;4182:10;4159:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4222:10;4209:24;;;;;;;;;;;;3907:333::o;5778:83::-;5820:7;5845:9;5838:16;;5778:83;:::o;2956:945::-;3341:24;3324:14;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3375:17;3395:16;;;;;;;;;;;:35;;;3444:392;;;;;;;;3502:9;3444:392;;;;3532:16;3444:392;;;;1372:1;3444:392;;;;;;3637:18;3444:392;;;;;;1415:1;3444:392;;;;;;3711:114;3761:50;;;;;;;;3805:4;3761:50;;;;;3711:28;:114::i;:::-;3444:392;;;3395:451;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3375:471;;3884:9;3861:33;;;;;;;;;;3031:870;2956:945;;:::o;5151:105::-;5207:7;5233:9;5243:5;5233:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5226:23;;5151:105;;;:::o;5262:95::-;5310:7;5336:14;;;;;;;;;;;5329:21;;5262:95;:::o;6078:83::-;6121:6;1415:1;6138:16;;6078:83;:::o;5468:93::-;5513:7;5538:9;:16;;;;5531:23;;5468:93;:::o;6167:106::-;6222:6;1372:1;6239:27;;6167:106;:::o;5363:99::-;5411:12;5441:14;;;;;;;;;;;5434:21;;5363:99;:::o;2401:549::-;2530:17;2549:12;2598:11;2631:17;2613:35;;;;;;;;:::i;:::-;;:14;;;;;;;;;;;:35;;;;;;;;:::i;:::-;;;2598:51;;2659:15;2716:10;2697:15;;2679;:33;;;;:::i;:::-;2678:48;2659:68;;2737:15;2775:1;2756:9;:16;;;;:20;2737:40;;2787:15;2829:1;2805:21;:25;2787:43;;2856:6;:20;;;;;2866:10;2856:20;:34;;;;;2880:10;2856:34;:48;;;;;2894:10;2856:48;2840:65;;2923:12;2915:28;;;;;;;;;;;;;;;;;;;;;;;;;2401:549;;;:::o;1026:316:2:-;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;5052:93:18:-;5099:7;5125:13;5118:20;;5052:93;:::o;1382:81:2:-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;7831:276:10:-;8169:7;:5;:7::i;:::-;8155:21;;:10;:21;;;;:64;;;;;8202:16;;;;;;;;;;;8180:39;;:10;:39;;;;8155:64;8151:162;;;8259:10;8271:7;:5;:7::i;:::-;8288:16;;;;;;;;;;;8236:70;;;;;;;;;;;;;:::i;:::-;;;;;;;;8151:162;7958:1:::1;7931:29;;:15;:29;;::::0;7927:70:::1;;7977:13;;;;;;;;;;;;;;7927:70;8043:15;8002:16;;:57;;;;;;;;;;;;;;;;;;8071:31;8086:15;8071:31;;;;;;:::i;:::-;;;;;;;;7831:276:::0;:::o;5683:85:18:-;5726:7;5751:10;5744:17;;5683:85;:::o;5970:102::-;6021:6;6045:18;6038:25;;5970:102;:::o;6077:45:10:-;;;;;;;;;;;;;:::o;5867:97:18:-;5916:7;5941:16;5934:23;;5867:97;:::o;847:98:2:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;5571:106:18:-;5621:7;5654:15;;5639:31;;5571:106;:::o;4246:639::-;4380:21;4421:9;:16;;;;4404:11;;4416:1;4404:14;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;4380:57;;4447:28;4478:9;4488:13;4478:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4447:55;;4529:12;4512:14;;:29;;;;;;;;;;;;;;;;;;4552:12;4570;:17;;4595:21;4570:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4551:70;;;4648:17;4631:14;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4709:1;4687:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4675:9;:36;;;;;;;;;;;;:::i;:::-;;4739:15;4721;:33;;;;4769:7;4764:74;;4799:28;;;;;;;;;;;;;;4764:74;4865:12;4852:26;;;;;;;;;;;;4370:515;;;4246:639;;;:::o;475:163:14:-;550:16;211:28;623:9;581:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:59;;475:163;;;:::o;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:117::-;799:1;796;789:12;813:117;922:1;919;912:12;936:117;1045:1;1042;1035:12;1076:568;1149:8;1159:6;1209:3;1202:4;1194:6;1190:17;1186:27;1176:122;;1217:79;;:::i;:::-;1176:122;1330:6;1317:20;1307:30;;1360:18;1352:6;1349:30;1346:117;;;1382:79;;:::i;:::-;1346:117;1496:4;1488:6;1484:17;1472:29;;1550:3;1542:4;1534:6;1530:17;1520:8;1516:32;1513:41;1510:128;;;1557:79;;:::i;:::-;1510:128;1076:568;;;;;:::o;1650:704::-;1745:6;1753;1761;1810:2;1798:9;1789:7;1785:23;1781:32;1778:119;;;1816:79;;:::i;:::-;1778:119;1936:1;1961:53;2006:7;1997:6;1986:9;1982:22;1961:53;:::i;:::-;1951:63;;1907:117;2091:2;2080:9;2076:18;2063:32;2122:18;2114:6;2111:30;2108:117;;;2144:79;;:::i;:::-;2108:117;2257:80;2329:7;2320:6;2309:9;2305:22;2257:80;:::i;:::-;2239:98;;;;2034:313;1650:704;;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2808:552::-;2865:8;2875:6;2925:3;2918:4;2910:6;2906:17;2902:27;2892:122;;2933:79;;:::i;:::-;2892:122;3046:6;3033:20;3023:30;;3076:18;3068:6;3065:30;3062:117;;;3098:79;;:::i;:::-;3062:117;3212:4;3204:6;3200:17;3188:29;;3266:3;3258:4;3250:6;3246:17;3236:8;3232:32;3229:41;3226:128;;;3273:79;;:::i;:::-;3226:128;2808:552;;;;;:::o;3366:527::-;3436:6;3444;3493:2;3481:9;3472:7;3468:23;3464:32;3461:119;;;3499:79;;:::i;:::-;3461:119;3647:1;3636:9;3632:17;3619:31;3677:18;3669:6;3666:30;3663:117;;;3699:79;;:::i;:::-;3663:117;3812:64;3868:7;3859:6;3848:9;3844:22;3812:64;:::i;:::-;3794:82;;;;3590:296;3366:527;;;;;:::o;3899:329::-;3958:6;4007:2;3995:9;3986:7;3982:23;3978:32;3975:119;;;4013:79;;:::i;:::-;3975:119;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;3899:329;;;;:::o;4234:126::-;4271:7;4311:42;4304:5;4300:54;4289:65;;4234:126;;;:::o;4366:96::-;4403:7;4432:24;4450:5;4432:24;:::i;:::-;4421:35;;4366:96;;;:::o;4468:118::-;4555:24;4573:5;4555:24;:::i;:::-;4550:3;4543:37;4468:118;;:::o;4592:222::-;4685:4;4723:2;4712:9;4708:18;4700:26;;4736:71;4804:1;4793:9;4789:17;4780:6;4736:71;:::i;:::-;4592:222;;;;:::o;4820:93::-;4856:7;4896:10;4889:5;4885:22;4874:33;;4820:93;;;:::o;4919:115::-;5004:23;5021:5;5004:23;:::i;:::-;4999:3;4992:36;4919:115;;:::o;5040:218::-;5131:4;5169:2;5158:9;5154:18;5146:26;;5182:69;5248:1;5237:9;5233:17;5224:6;5182:69;:::i;:::-;5040:218;;;;:::o;5264:118::-;5351:24;5369:5;5351:24;:::i;:::-;5346:3;5339:37;5264:118;;:::o;5388:222::-;5481:4;5519:2;5508:9;5504:18;5496:26;;5532:71;5600:1;5589:9;5585:17;5576:6;5532:71;:::i;:::-;5388:222;;;;:::o;5616:89::-;5652:7;5692:6;5685:5;5681:18;5670:29;;5616:89;;;:::o;5711:115::-;5796:23;5813:5;5796:23;:::i;:::-;5791:3;5784:36;5711:115;;:::o;5832:218::-;5923:4;5961:2;5950:9;5946:18;5938:26;;5974:69;6040:1;6029:9;6025:17;6016:6;5974:69;:::i;:::-;5832:218;;;;:::o;6056:180::-;6104:77;6101:1;6094:88;6201:4;6198:1;6191:15;6225:4;6222:1;6215:15;6242:122;6332:1;6325:5;6322:12;6312:46;;6338:18;;:::i;:::-;6312:46;6242:122;:::o;6370:145::-;6424:7;6453:5;6442:16;;6459:50;6503:5;6459:50;:::i;:::-;6370:145;;;:::o;6521:::-;6586:9;6619:41;6654:5;6619:41;:::i;:::-;6606:54;;6521:145;;;:::o;6672:161::-;6774:52;6820:5;6774:52;:::i;:::-;6769:3;6762:65;6672:161;;:::o;6839:252::-;6947:4;6985:2;6974:9;6970:18;6962:26;;6998:86;7081:1;7070:9;7066:17;7057:6;6998:86;:::i;:::-;6839:252;;;;:::o;7097:117::-;7206:1;7203;7196:12;7220:102;7261:6;7312:2;7308:7;7303:2;7296:5;7292:14;7288:28;7278:38;;7220:102;;;:::o;7328:180::-;7376:77;7373:1;7366:88;7473:4;7470:1;7463:15;7497:4;7494:1;7487:15;7514:281;7597:27;7619:4;7597:27;:::i;:::-;7589:6;7585:40;7727:6;7715:10;7712:22;7691:18;7679:10;7676:34;7673:62;7670:88;;;7738:18;;:::i;:::-;7670:88;7778:10;7774:2;7767:22;7557:238;7514:281;;:::o;7801:129::-;7835:6;7862:20;;:::i;:::-;7852:30;;7891:33;7919:4;7911:6;7891:33;:::i;:::-;7801:129;;;:::o;7936:307::-;7997:4;8087:18;8079:6;8076:30;8073:56;;;8109:18;;:::i;:::-;8073:56;8147:29;8169:6;8147:29;:::i;:::-;8139:37;;8231:4;8225;8221:15;8213:23;;7936:307;;;:::o;8249:146::-;8346:6;8341:3;8336;8323:30;8387:1;8378:6;8373:3;8369:16;8362:27;8249:146;;;:::o;8401:423::-;8478:5;8503:65;8519:48;8560:6;8519:48;:::i;:::-;8503:65;:::i;:::-;8494:74;;8591:6;8584:5;8577:21;8629:4;8622:5;8618:16;8667:3;8658:6;8653:3;8649:16;8646:25;8643:112;;;8674:79;;:::i;:::-;8643:112;8764:54;8811:6;8806:3;8801;8764:54;:::i;:::-;8484:340;8401:423;;;;;:::o;8843:338::-;8898:5;8947:3;8940:4;8932:6;8928:17;8924:27;8914:122;;8955:79;;:::i;:::-;8914:122;9072:6;9059:20;9097:78;9171:3;9163:6;9156:4;9148:6;9144:17;9097:78;:::i;:::-;9088:87;;8904:277;8843:338;;;;:::o;9187:507::-;9255:6;9304:2;9292:9;9283:7;9279:23;9275:32;9272:119;;;9310:79;;:::i;:::-;9272:119;9458:1;9447:9;9443:17;9430:31;9488:18;9480:6;9477:30;9474:117;;;9510:79;;:::i;:::-;9474:117;9615:62;9669:7;9660:6;9649:9;9645:22;9615:62;:::i;:::-;9605:72;;9401:286;9187:507;;;;:::o;9700:90::-;9734:7;9777:5;9770:13;9763:21;9752:32;;9700:90;;;:::o;9796:109::-;9877:21;9892:5;9877:21;:::i;:::-;9872:3;9865:34;9796:109;;:::o;9911:98::-;9962:6;9996:5;9990:12;9980:22;;9911:98;;;:::o;10015:168::-;10098:11;10132:6;10127:3;10120:19;10172:4;10167:3;10163:14;10148:29;;10015:168;;;;:::o;10189:246::-;10270:1;10280:113;10294:6;10291:1;10288:13;10280:113;;;10379:1;10374:3;10370:11;10364:18;10360:1;10355:3;10351:11;10344:39;10316:2;10313:1;10309:10;10304:15;;10280:113;;;10427:1;10418:6;10413:3;10409:16;10402:27;10251:184;10189:246;;;:::o;10441:373::-;10527:3;10555:38;10587:5;10555:38;:::i;:::-;10609:70;10672:6;10667:3;10609:70;:::i;:::-;10602:77;;10688:65;10746:6;10741:3;10734:4;10727:5;10723:16;10688:65;:::i;:::-;10778:29;10800:6;10778:29;:::i;:::-;10773:3;10769:39;10762:46;;10531:283;10441:373;;;;:::o;10820:407::-;10953:4;10991:2;10980:9;10976:18;10968:26;;11004:65;11066:1;11055:9;11051:17;11042:6;11004:65;:::i;:::-;11116:9;11110:4;11106:20;11101:2;11090:9;11086:18;11079:48;11144:76;11215:4;11206:6;11144:76;:::i;:::-;11136:84;;10820:407;;;;;:::o;11233:122::-;11306:24;11324:5;11306:24;:::i;:::-;11299:5;11296:35;11286:63;;11345:1;11342;11335:12;11286:63;11233:122;:::o;11361:139::-;11407:5;11445:6;11432:20;11423:29;;11461:33;11488:5;11461:33;:::i;:::-;11361:139;;;;:::o;11506:329::-;11565:6;11614:2;11602:9;11593:7;11589:23;11585:32;11582:119;;;11620:79;;:::i;:::-;11582:119;11740:1;11765:53;11810:7;11801:6;11790:9;11786:22;11765:53;:::i;:::-;11755:63;;11711:117;11506:329;;;;:::o;11841:60::-;11869:3;11890:5;11883:12;;11841:60;;;:::o;11907:142::-;11957:9;11990:53;12008:34;12017:24;12035:5;12017:24;:::i;:::-;12008:34;:::i;:::-;11990:53;:::i;:::-;11977:66;;11907:142;;;:::o;12055:126::-;12105:9;12138:37;12169:5;12138:37;:::i;:::-;12125:50;;12055:126;;;:::o;12187:156::-;12267:9;12300:37;12331:5;12300:37;:::i;:::-;12287:50;;12187:156;;;:::o;12349:191::-;12466:67;12527:5;12466:67;:::i;:::-;12461:3;12454:80;12349:191;;:::o;12546:282::-;12669:4;12707:2;12696:9;12692:18;12684:26;;12720:101;12818:1;12807:9;12803:17;12794:6;12720:101;:::i;:::-;12546:282;;;;:::o;12834:332::-;12955:4;12993:2;12982:9;12978:18;12970:26;;13006:71;13074:1;13063:9;13059:17;13050:6;13006:71;:::i;:::-;13087:72;13155:2;13144:9;13140:18;13131:6;13087:72;:::i;:::-;12834:332;;;;;:::o;13172:108::-;13249:24;13267:5;13249:24;:::i;:::-;13244:3;13237:37;13172:108;;:::o;13286:::-;13363:24;13381:5;13363:24;:::i;:::-;13358:3;13351:37;13286:108;;:::o;13400:105::-;13475:23;13492:5;13475:23;:::i;:::-;13470:3;13463:36;13400:105;;:::o;13511:::-;13586:23;13603:5;13586:23;:::i;:::-;13581:3;13574:36;13511:105;;:::o;13622:158::-;13695:11;13729:6;13724:3;13717:19;13769:4;13764:3;13760:14;13745:29;;13622:158;;;;:::o;13786:353::-;13862:3;13890:38;13922:5;13890:38;:::i;:::-;13944:60;13997:6;13992:3;13944:60;:::i;:::-;13937:67;;14013:65;14071:6;14066:3;14059:4;14052:5;14048:16;14013:65;:::i;:::-;14103:29;14125:6;14103:29;:::i;:::-;14098:3;14094:39;14087:46;;13866:273;13786:353;;;;:::o;14239:1357::-;14380:3;14416:4;14411:3;14407:14;14506:4;14499:5;14495:16;14489:23;14525:63;14582:4;14577:3;14573:14;14559:12;14525:63;:::i;:::-;14431:167;14681:4;14674:5;14670:16;14664:23;14700:63;14757:4;14752:3;14748:14;14734:12;14700:63;:::i;:::-;14608:165;14871:4;14864:5;14860:16;14854:23;14890:61;14945:4;14940:3;14936:14;14922:12;14890:61;:::i;:::-;14783:178;15055:4;15048:5;15044:16;15038:23;15074:61;15129:4;15124:3;15120:14;15106:12;15074:61;:::i;:::-;14971:174;15231:4;15224:5;15220:16;15214:23;15250:61;15305:4;15300:3;15296:14;15282:12;15250:61;:::i;:::-;15155:166;15408:4;15401:5;15397:16;15391:23;15461:3;15455:4;15451:14;15444:4;15439:3;15435:14;15428:38;15487:71;15553:4;15539:12;15487:71;:::i;:::-;15479:79;;15331:238;15586:4;15579:11;;14385:1211;14239:1357;;;;:::o;15602:417::-;15767:4;15805:2;15794:9;15790:18;15782:26;;15854:9;15848:4;15844:20;15840:1;15829:9;15825:17;15818:47;15882:130;16007:4;15998:6;15882:130;:::i;:::-;15874:138;;15602:417;;;;:::o;16025:143::-;16082:5;16113:6;16107:13;16098:22;;16129:33;16156:5;16129:33;:::i;:::-;16025:143;;;;:::o;16174:351::-;16244:6;16293:2;16281:9;16272:7;16268:23;16264:32;16261:119;;;16299:79;;:::i;:::-;16261:119;16419:1;16444:64;16500:7;16491:6;16480:9;16476:22;16444:64;:::i;:::-;16434:74;;16390:128;16174:351;;;;:::o;16531:180::-;16579:77;16576:1;16569:88;16676:4;16673:1;16666:15;16700:4;16697:1;16690:15;16717:180;16765:77;16762:1;16755:88;16862:4;16859:1;16852:15;16886:4;16883:1;16876:15;16903:194;16943:4;16963:20;16981:1;16963:20;:::i;:::-;16958:25;;16997:20;17015:1;16997:20;:::i;:::-;16992:25;;17041:1;17038;17034:9;17026:17;;17065:1;17059:4;17056:11;17053:37;;;17070:18;;:::i;:::-;17053:37;16903:194;;;;:::o;17103:169::-;17187:11;17221:6;17216:3;17209:19;17261:4;17256:3;17252:14;17237:29;;17103:169;;;;:::o;17278:172::-;17418:24;17414:1;17406:6;17402:14;17395:48;17278:172;:::o;17456:366::-;17598:3;17619:67;17683:2;17678:3;17619:67;:::i;:::-;17612:74;;17695:93;17784:3;17695:93;:::i;:::-;17813:2;17808:3;17804:12;17797:19;;17456:366;;;:::o;17828:419::-;17994:4;18032:2;18021:9;18017:18;18009:26;;18081:9;18075:4;18071:20;18067:1;18056:9;18052:17;18045:47;18109:131;18235:4;18109:131;:::i;:::-;18101:139;;17828:419;;;:::o;18253:442::-;18402:4;18440:2;18429:9;18425:18;18417:26;;18453:71;18521:1;18510:9;18506:17;18497:6;18453:71;:::i;:::-;18534:72;18602:2;18591:9;18587:18;18578:6;18534:72;:::i;:::-;18616;18684:2;18673:9;18669:18;18660:6;18616:72;:::i;:::-;18253:442;;;;;;:::o;18701:180::-;18749:77;18746:1;18739:88;18846:4;18843:1;18836:15;18870:4;18867:1;18860:15;18887:176;18919:1;18936:20;18954:1;18936:20;:::i;:::-;18931:25;;18970:20;18988:1;18970:20;:::i;:::-;18965:25;;19009:1;18999:35;;19014:18;;:::i;:::-;18999:35;19055:1;19052;19048:9;19043:14;;18887:176;;;;:::o;19069:147::-;19170:11;19207:3;19192:18;;19069:147;;;;:::o;19222:114::-;;:::o;19342:398::-;19501:3;19522:83;19603:1;19598:3;19522:83;:::i;:::-;19515:90;;19614:93;19703:3;19614:93;:::i;:::-;19732:1;19727:3;19723:11;19716:18;;19342:398;;;:::o;19746:379::-;19930:3;19952:147;20095:3;19952:147;:::i;:::-;19945:154;;20116:3;20109:10;;19746:379;;;:::o;20131:99::-;20202:21;20217:5;20202:21;:::i;:::-;20197:3;20190:34;20131:99;;:::o;20316:344::-;20471:4;20466:3;20462:14;20567:4;20560:5;20556:16;20550:23;20586:57;20637:4;20632:3;20628:14;20614:12;20586:57;:::i;:::-;20486:167;20440:220;20316:344;;:::o;20666:338::-;20817:4;20855:2;20844:9;20840:18;20832:26;;20868:129;20994:1;20983:9;20979:17;20970:6;20868:129;:::i;:::-;20666:338;;;;:::o;21010:172::-;21150:24;21146:1;21138:6;21134:14;21127:48;21010:172;:::o;21188:366::-;21330:3;21351:67;21415:2;21410:3;21351:67;:::i;:::-;21344:74;;21427:93;21516:3;21427:93;:::i;:::-;21545:2;21540:3;21536:12;21529:19;;21188:366;;;:::o;21560:419::-;21726:4;21764:2;21753:9;21749:18;21741:26;;21813:9;21807:4;21803:20;21799:1;21788:9;21784:17;21777:47;21841:131;21967:4;21841:131;:::i;:::-;21833:139;;21560:419;;;:::o;21985:173::-;22125:25;22121:1;22113:6;22109:14;22102:49;21985:173;:::o;22164:366::-;22306:3;22327:67;22391:2;22386:3;22327:67;:::i;:::-;22320:74;;22403:93;22492:3;22403:93;:::i;:::-;22521:2;22516:3;22512:12;22505:19;;22164:366;;;:::o;22536:419::-;22702:4;22740:2;22729:9;22725:18;22717:26;;22789:9;22783:4;22779:20;22775:1;22764:9;22760:17;22753:47;22817:131;22943:4;22817:131;:::i;:::-;22809:139;;22536:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1618400","executionCost":"infinite","totalCost":"infinite"},"external":{"EnterLottery()":"infinite","acceptOwnership()":"54585","checkUpkeep(bytes)":"infinite","getInterval()":"infinite","getLatestTimestamp()":"2569","getLotteryState()":"2729","getNumPlayers()":"2512","getNumWords()":"388","getPlayers(uint256)":"5079","getRecentWinner()":"2545","getRequestConfirmations()":"432","getTicketPrice()":"infinite","getcallbackGasLimit()":"infinite","getkeyHash()":"infinite","getsubscriptionId()":"infinite","owner()":"2611","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","s_vrfCoordinator()":"infinite","setCoordinator(address)":"infinite","transferOwnership(address)":"30764"},"internal":{"fulfillRandomWords(uint256,uint256[] calldata)":"infinite"}},"methodIdentifiers":{"EnterLottery()":"30f4c43d","acceptOwnership()":"79ba5097","checkUpkeep(bytes)":"6e04ff0d","getInterval()":"91ad27b4","getLatestTimestamp()":"f43b52cb","getLotteryState()":"6b68c03c","getNumPlayers()":"55c9e926","getNumWords()":"53a2c19a","getPlayers(uint256)":"460e2049","getRecentWinner()":"473f1ddc","getRequestConfirmations()":"5f1b0fd8","getTicketPrice()":"87bb7ae0","getcallbackGasLimit()":"9862eed0","getkeyHash()":"40cc232b","getsubscriptionId()":"b4f8d9f2","owner()":"8da5cb5b","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Lottery__Closed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__NotEnoughETHforTicket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"LotteryEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedLotteryWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EnterLottery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryState\",\"outputs\":[{\"internalType\":\"enum Lottery.LotteryState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTicketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getcallbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getkeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getsubscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Harigovind M G\",\"details\":\"This implements Chainlink VRF for ensuring the randomness and Chainlink Keepers for the automation of the Lottery\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A Ethereum Lottery Smart Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"This is a smart contract for creating a Fair and Random Lottery\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"},\"contracts/Lottery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7 ;\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\nimport {VRFConsumerBaseV2Plus} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nerror Lottery__NotEnoughETHforTicket();\\nerror Lottery__TransactionFailed();\\nerror Lottery__Closed();\\nerror Lottery__upKeepNotNeeded(\\n    uint256 currentBal,\\n    uint256 numberOfPlayers,\\n    uint256 lotteryState\\n);\\n\\n/**\\n * @title A Ethereum Lottery Smart Contract\\n * @author Harigovind M G\\n * @notice This is a smart contract for creating a Fair and Random Lottery\\n * @dev This implements Chainlink VRF for ensuring the randomness and Chainlink Keepers for the automation of the Lottery\\n */\\n\\ncontract Lottery is VRFConsumerBaseV2Plus, AutomationCompatibleInterface {\\n    /* enums */\\n    enum LotteryState {\\n        OPEN,\\n        CALCULATING\\n    }\\n\\n    /* State variables */\\n    uint256 private immutable i_ticketPrice;\\n    address payable[] private s_players;\\n    bytes32 private immutable i_keyHash;\\n    uint256 private immutable i_subscriptionId;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATION = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n    uint256 private s_lastTimeStamp;\\n    uint256 private immutable i_interval;\\n\\n    /*  Lottery Variables */\\n    address private s_recentWinner;\\n    LotteryState private s_LotteryState;\\n\\n    /* Events */\\n    event LotteryEnter(address indexed player);\\n    event RequestedLotteryWinner(uint256 indexed requestId);\\n    event WinnerPicked(address indexed winner);\\n\\n    /* Functions */\\n\\n    constructor(\\n        address vrfCoordinatorV2,\\n        uint256 ticketPrice,\\n        bytes32 keyHash,\\n        uint256 subscriptionId,\\n        uint32 callbackGasLimit,\\n        uint256 interval\\n    ) VRFConsumerBaseV2Plus(vrfCoordinatorV2) {\\n        i_ticketPrice = ticketPrice;\\n        // i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_keyHash = keyHash;\\n        i_subscriptionId = subscriptionId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_LotteryState = LotteryState.OPEN;\\n        s_lastTimeStamp=block.timestamp;\\n        i_interval= interval;\\n    }\\n\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    )\\n        external\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory /* performData */)\\n    {   \\n        bool isOpen = (s_LotteryState == LotteryState.OPEN);\\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\\n        bool hasPlayers = (s_players.length > 0);\\n        bool hasBalance = address(this).balance > 0;\\n        upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\\n        return (upkeepNeeded, \\\"0x0\\\");\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external override {\\n       // (bool upkeepNeeded,) = checkUpkeep(\\\"\\\");\\n        // if (!upkeepNeeded) {\\n        //     revert Lottery__upKeepNotNeeded(\\n        //         address(this).balance,\\n        //         s_players.length,\\n        //         uint256(s_LotteryState)\\n        //     );\\n        // }\\n        s_LotteryState = LotteryState.CALCULATING;\\n        uint256 requestId = s_vrfCoordinator.requestRandomWords(\\n            VRFV2PlusClient.RandomWordsRequest({\\n            keyHash: i_keyHash,\\n            subId: i_subscriptionId,\\n            requestConfirmations : REQUEST_CONFIRMATION,\\n            callbackGasLimit: i_callbackGasLimit,\\n            numWords:NUM_WORDS,\\n            extraArgs:VRFV2PlusClient._argsToBytes(\\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: true})\\n            )\\n        })\\n        );\\n        emit RequestedLotteryWinner(requestId);\\n    }\\n\\n    function EnterLottery() public payable {\\n        if (msg.value < i_ticketPrice) {\\n            revert Lottery__NotEnoughETHforTicket();\\n        }\\n        if (s_LotteryState != LotteryState.OPEN) {\\n            revert Lottery__Closed();\\n        }\\n        s_players.push(payable(msg.sender));\\n        emit LotteryEnter(msg.sender);\\n    }\\n\\n    function fulfillRandomWords(\\n        uint256 /*requestId*/,\\n        uint256[] calldata randomWords\\n    ) internal override  {\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\n        address payable recentWinner = s_players[indexOfWinner];\\n        s_recentWinner = recentWinner;\\n        (bool callSuc, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n        s_LotteryState = LotteryState.OPEN;\\n        s_players = new address payable[](0);\\n        s_lastTimeStamp = block.timestamp;\\n        if (!callSuc) {\\n            revert Lottery__TransactionFailed();\\n        }\\n        emit WinnerPicked(recentWinner);\\n    }\\n    receive() external payable {}\\n\\n    // function getvrfCoordinatorV2Mock() public view returns(address){\\n    //     return address(i_vrfCoordinator);\\n    // }\\n\\n    function getTicketPrice() public view returns (uint256) {\\n        return i_ticketPrice;\\n    }\\n\\n    function getPlayers(uint256 index) public view returns (address) {\\n        return s_players[index];\\n    }\\n\\n    function getRecentWinner() public view returns (address) {\\n        return s_recentWinner;\\n    }\\n\\n    function getLotteryState() public view returns (LotteryState){\\n        return s_LotteryState;\\n    }\\n\\n    function getNumPlayers() public view returns(uint256){\\n        return s_players.length;\\n    }\\n    \\n    function getLatestTimestamp() public view returns(uint256){\\n        return uint256(s_lastTimeStamp);\\n    }\\n\\n    function getInterval() public view returns(uint256){\\n        return i_interval;\\n    }\\n    \\n    function getkeyHash() public view returns(bytes32){\\n        return i_keyHash;\\n    }\\n\\n    function getsubscriptionId() public view returns(uint256){\\n        return i_subscriptionId;\\n    }\\n\\n    function getcallbackGasLimit() public view returns(uint32){\\n        return i_callbackGasLimit;  \\n    }\\n\\n    function getNumWords() public pure returns(uint32){\\n        return NUM_WORDS;\\n    }\\n\\n    function getRequestConfirmations() public pure returns(uint16){\\n        return REQUEST_CONFIRMATION;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xacdbaa3628a7d36f46b9b914f37ce9ee18c5a3a16a5faeef04d2f3057dd1f712\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"contracts/Lottery.sol:Lottery","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"contracts/Lottery.sol:Lottery","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2389,"contract":"contracts/Lottery.sol:Lottery","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2538"},{"astId":4567,"contract":"contracts/Lottery.sol:Lottery","label":"s_players","offset":0,"slot":"3","type":"t_array(t_address_payable)dyn_storage"},{"astId":4581,"contract":"contracts/Lottery.sol:Lottery","label":"s_lastTimeStamp","offset":0,"slot":"4","type":"t_uint256"},{"astId":4585,"contract":"contracts/Lottery.sol:Lottery","label":"s_recentWinner","offset":0,"slot":"5","type":"t_address"},{"astId":4588,"contract":"contracts/Lottery.sol:Lottery","label":"s_LotteryState","offset":20,"slot":"5","type":"t_enum(LotteryState)4562"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_contract(IVRFCoordinatorV2Plus)2538":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"},"t_enum(LotteryState)4562":{"encoding":"inplace","label":"enum Lottery.LotteryState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"This is a smart contract for creating a Fair and Random Lottery","version":1}}}}}}